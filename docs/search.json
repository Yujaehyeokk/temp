[
  {
    "objectID": "posts/2022-10-19-7wk-2.html",
    "href": "posts/2022-10-19-7wk-2.html",
    "title": "07wk-2",
    "section": "",
    "text": "아이스크림을 많이 먹으면 걸리는 병(2)"
  },
  {
    "objectID": "posts/2022-10-19-7wk-2.html#자료생성-좀-더-그럴듯한-자료-만들기",
    "href": "posts/2022-10-19-7wk-2.html#자료생성-좀-더-그럴듯한-자료-만들기",
    "title": "07wk-2",
    "section": "자료생성: 좀 더 그럴듯한 자료 (만들기)",
    "text": "자료생성: 좀 더 그럴듯한 자료 (만들기)\n- 지난 시간의 toy example은 데이터가 너무 작아서 억지스러움 \\(\\to\\) 기상자료개방포털, 회원가입해야 자료받을 수 있음.\n\n_df=pd.read_csv('https://raw.githubusercontent.com/guebin/DV2022/master/posts/temp.csv')\n_df\n\n\n\n\n\n\n\n\n지점번호\n지점명\n일시\n평균기온(℃)\n최고기온(℃)\n최고기온시각\n최저기온(℃)\n\n\n\n\n0\n146\n전주\n2020-01-01\n-0.5\n4.3\n15:09\n-6.4\n\n\n1\n146\n전주\n2020-01-02\n1.4\n6.5\n14:12\n-3.0\n\n\n2\n146\n전주\n2020-01-03\n2.6\n7.6\n13:32\n-0.5\n\n\n3\n146\n전주\n2020-01-04\n2.0\n7.7\n13:51\n-2.6\n\n\n4\n146\n전주\n2020-01-05\n2.5\n8.6\n14:05\n-3.2\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n651\n146\n전주\n2021-10-13\n19.9\n25.5\n14:29\n15.6\n\n\n652\n146\n전주\n2021-10-14\n20.4\n25.5\n13:36\n17.0\n\n\n653\n146\n전주\n2021-10-15\n18.3\n22.0\n13:47\n15.7\n\n\n654\n146\n전주\n2021-10-16\n12.8\n17.4\n0:01\n6.5\n\n\n655\n146\n전주\n2021-10-17\n6.7\n12.4\n15:18\n2.2\n\n\n\n\n656 rows × 7 columns\n\n\n\n- 평균기온만 선택\n\npd.Series(_df.columns)\n\n0       지점번호\n1        지점명\n2         일시\n3    평균기온(℃)\n4    최고기온(℃)\n5     최고기온시각\n6    최저기온(℃)\ndtype: object\n\n\n\ntemp = np.array(_df.iloc[:,3])\ntemp[:5]\n\narray([-0.5,  1.4,  2.6,  2. ,  2.5])\n\n\n\n# 숨은진짜상황1: 온도 \\(\\to\\) 아이스크림 판매량\n- 아래와 같은 관계가 있다고 하자.\n\\[\\text{아이스크림 판매량} = 20 + 2 \\times \\text{온도} + \\epsilon\\]\n\nnp.random.seed(1)\neps = np.random.normal(size=len(temp), scale=10) \nicecream = 20 + 2*temp + eps\n\n\nplt.plot(temp,icecream,'o',alpha=0.3)\nplt.xlabel(\"temp\",size=15)\nplt.ylabel(\"icecream\",size=15)\n\nText(0, 0.5, 'icecream')\n\n\n\n\n\n\n\n\n\n\n\n# 숨은진짜상황1: 온도 \\(\\to\\) 아이스크림 판매량\n- 아래와 같은 관계가 있다고 하자.\n\\[\\text{소아마비 반응수치} = 30 + 0.5 \\times \\text{온도} + \\epsilon\\]\n\nnp.random.seed(2) \neps=np.random.normal(size=len(temp),scale=1)\ndisease= 30 + 0.5 * temp + eps\n\n\nplt.plot(temp,disease,'o',alpha=0.3)\nplt.xlabel(\"temp\",size=15)\nplt.ylabel(\"disease\",size=15)\n\nText(0, 0.5, 'disease')\n\n\n\n\n\n\n\n\n\n\n\n# 우리가 관측한 상황 (온도는 은닉되어있음)\n\nplt.plot(icecream,disease,'o',alpha=0.3)\nplt.xlabel(\"icecream\",size=15)\nplt.ylabel(\"disease\",size=15)\n\nText(0, 0.5, 'disease')\n\n\n\n\n\n\n\n\n\n\nnp.corrcoef(icecream,disease)\n\narray([[1.        , 0.86298975],\n       [0.86298975, 1.        ]])\n\n\n\n0.86정도.."
  },
  {
    "objectID": "posts/2022-10-19-7wk-2.html#직관-여름만-뽑아서-plot-해보자.",
    "href": "posts/2022-10-19-7wk-2.html#직관-여름만-뽑아서-plot-해보자.",
    "title": "07wk-2",
    "section": "직관: 여름만 뽑아서 plot 해보자.",
    "text": "직관: 여름만 뽑아서 plot 해보자.\n- temp&gt;25 (여름으로 간주) 인 관측치만 플랏\n\nplt.plot(icecream[temp&gt;25],disease[temp&gt;25], 'o', color='C1') ## 평균기온이 25도가 넘어가면 여름이라 생각 \n\n\n\n\n\n\n\n\n- 전체적인 산점도\n\nfig , ((ax1,ax2), (ax3,ax4)) = plt.subplots(2,2,figsize=(8,6)) \nax1.plot(temp,icecream,'o',alpha=0.2); ax1.set_xlabel('temp'); ax1.set_ylabel('icecream'); ax1.set_title(\"hidden1\")\nax2.plot(temp,disease,'o',alpha=0.2); ax2.set_xlabel('temp'); ax2.set_ylabel('disease'); ax2.set_title(\"hidden2\")\nax3.plot(icecream,disease,'o',alpha=0.2); ax3.set_xlabel('icecream'); ax3.set_ylabel('disease'); ax3.set_title(\"observed\")\nax4.plot(icecream,disease,'o',alpha=0.2); ax4.set_xlabel('icecream'); ax4.set_ylabel('disease'); ax4.set_title(\"observed\")\nax4.plot(icecream[temp&gt;25],disease[temp&gt;25],'o',label='temp&gt;25')\nax4.legend()\nfig.tight_layout()"
  },
  {
    "objectID": "posts/2022-10-19-7wk-2.html#ggplot-온도구간을-세분화-하여-시각화",
    "href": "posts/2022-10-19-7wk-2.html#ggplot-온도구간을-세분화-하여-시각화",
    "title": "07wk-2",
    "section": "ggplot: 온도구간을 세분화 하여 시각화",
    "text": "ggplot: 온도구간을 세분화 하여 시각화\n- 목표: 모든 온도구간에 대하여 각각 색을 다르게 하여 그려보자.\n\n사실 지금 변수는 온도, 아이스크림판매량, 소아마비\n온도가 유사한 지역을 색으로 묶으면 3차원 플랏이 가능함\n\n\n# df로 자료정리\n- 일단 데이터 프레임을 정리하자.\n\ndf = pd.DataFrame({'temp':temp,'icecream':icecream,'disease':disease})\ndf\n\n\n\n\n\n\n\n\ntemp\nicecream\ndisease\n\n\n\n\n0\n-0.5\n35.243454\n29.333242\n\n\n1\n1.4\n16.682436\n30.643733\n\n\n2\n2.6\n19.918282\n29.163804\n\n\n3\n2.0\n13.270314\n32.640271\n\n\n4\n2.5\n33.654076\n29.456564\n\n\n...\n...\n...\n...\n\n\n651\n19.9\n68.839992\n39.633906\n\n\n652\n20.4\n76.554679\n38.920443\n\n\n653\n18.3\n68.666079\n39.882650\n\n\n654\n12.8\n42.771364\n36.613159\n\n\n655\n6.7\n30.736731\n34.902513\n\n\n\n\n656 rows × 3 columns\n\n\n\n\n\n# 구간세분화\n- 온도를 카테고리화 하자 \\(\\to\\) 적당한 구긴을 설정하기 위해서 히스토그램을 그려보자.\n\ndf.temp.hist() # ? 이거 14주차쯤 배우는데 미리 스포합니다.. 엄청 편해요 \n\n\n\n\n\n\n\n\n\nplt.hist(df.temp) # 원래는 이걸 배웠죠\n\n(array([  3.,   9.,  29.,  60.,  92.,  86.,  65.,  93., 139.,  80.]),\n array([-12.4 ,  -8.16,  -3.92,   0.32,   4.56,   8.8 ,  13.04,  17.28,\n         21.52,  25.76,  30.  ]),\n &lt;BarContainer object of 10 artists&gt;)\n\n\n\n\n\n\n\n\n\n- 구간은 5정도로 하면 적당할 것 같다.\n\ndef cut(x): # 이거보다 더 좋은 방법이 있을 것 같긴 한데요..\n    if x&lt;0: \n        y='Temp: &lt;0'\n    elif x&lt;5: \n        y='Temp: 0~5'\n    elif x&lt;10: \n        y='Temp: 5~10'\n    elif x&lt;15: \n        y='Temp: 10~15'\n    elif x&lt;20:\n        y='Temp: 15~20'\n    elif x&lt;25: \n        y='Temp: 20~25'\n    else: \n        y='Temp: &gt;30'\n    return y \n\n\ndf.assign(temp2 = list(map(cut,df.temp)))\n\n\n\n\n\n\n\n\ntemp\nicecream\ndisease\ntemp2\n\n\n\n\n0\n-0.5\n35.243454\n29.333242\nTemp: &lt;0\n\n\n1\n1.4\n16.682436\n30.643733\nTemp: 0~5\n\n\n2\n2.6\n19.918282\n29.163804\nTemp: 0~5\n\n\n3\n2.0\n13.270314\n32.640271\nTemp: 0~5\n\n\n4\n2.5\n33.654076\n29.456564\nTemp: 0~5\n\n\n...\n...\n...\n...\n...\n\n\n651\n19.9\n68.839992\n39.633906\nTemp: 15~20\n\n\n652\n20.4\n76.554679\n38.920443\nTemp: 20~25\n\n\n653\n18.3\n68.666079\n39.882650\nTemp: 15~20\n\n\n654\n12.8\n42.771364\n36.613159\nTemp: 10~15\n\n\n655\n6.7\n30.736731\n34.902513\nTemp: 5~10\n\n\n\n\n656 rows × 4 columns\n\n\n\n\n\n# ggplot\n- 온도를 색으로 구분하면\n\nfig = ggplot(data=df.assign(temp2 = list(map(cut,df.temp))))\np1 = geom_point(aes(x='icecream',y='disease',colour='temp2'),alpha=0.5)\nfig + p1\n\n\n\n\n\n\n\n\n- 추세선을 추가하면\n\nl1 = geom_smooth(aes(x='icecream',y='disease',colour='temp2'))\n\n\nfig+p1+l1\n\n/home/cgb4/anaconda3/envs/py37/lib/python3.7/site-packages/plotnine/stats/smoothers.py:311: PlotnineWarning: Confidence intervals are not yet implementedfor lowess smoothings.\n\n\n\n\n\n\n\n\n\n\n각 온도별로 추세선은 거의 기울기가 0이다. \\(\\to\\) 온도가 비슷한 구간별로 묶어서 보니까 상관관계가 없다는 거!\n아이스크림 판매량과 소아마비의 corr은 유의미해보이지만, 온도를 통제하였을 경우 아이스크림 판매량과 소아마비의 partial corr은 유의미해보이지 않음.\n\n\n\n# 해석\n- 해피앤딩: 온도를 통제하니까 아이스크림과 질병은 관련이 없어보인다. \\(\\to\\) 아이스크림을 먹으면 소아마비를 유발한다는 이상한 결론이 나올뻔 했지만 우리는 온도라는 흑막을 잘 찾았고 결과적으로 “온도-&gt;아이스크림판매량,소아마비” 이라는 합리적인 진리를 얻을 수 있었다.\n\n온도와 같은 변수를 은닉변수라고 한다.\n\n- 또 다른 흑막? 고려할 흑막이 온도뿐이라는 보장이 어디있지? 사실 흑막2, 흑막3이 있어서 그런 흑막들을 고려하다보니까 아이스크림과 소아마비사이의 상관관계가 다시 보이면 어떡하지?\n\n이러한 이유 때문에 상관계수로 인과성을 유추하는건 사실상 불가능.\n그런데 이론적으로는 “세상의 모든 은닉변수를 통제하였을 경우에도 corr(X,Y)의 값이 1에 가깝다면 그때는 인과성이 있다고 봐도 무방함, (물론 이 경우에도 무엇이 원인인지는 통계적으로 따지는것이 불가)” 이라고 주장할 수 있다. 즉 모든 흑막을 제거한다면 “상관성=인과성”이다.\n\n- 실험계획법, 인과추론: 세상의 모든 흑막을 제거하는건 상식적으로 불가능\n\n피셔의주장(실험계획법): 그런데 실험계획을 잘하면 흑막을 제거한 효과가 있음 (무작위로 사람뽑아서 담배를 피우게 한다든가)\n인과추론: 실험계획이 사실상 불가능한 경우가 있음 \\(\\to\\) 모인 데이터에서 최대한 흑막2,3,4,.. 등이 비슷한 그룹끼리 “매칭”을 시킨다!"
  },
  {
    "objectID": "posts/2022-10-19-7wk-2.html#그냥-궁금해서-진짜-만약에-아이스크림과-소아마비가-관련있는-경우라면",
    "href": "posts/2022-10-19-7wk-2.html#그냥-궁금해서-진짜-만약에-아이스크림과-소아마비가-관련있는-경우라면",
    "title": "07wk-2",
    "section": "그냥 궁금해서: 진짜 만약에 아이스크림과 소아마비가 관련있는 경우라면?",
    "text": "그냥 궁금해서: 진짜 만약에 아이스크림과 소아마비가 관련있는 경우라면?\n- 온도는 아이스크림 판매에 여전히 영향을 주지만\n\\[\\text{아이스크림 판매량} = 20 + 2 \\times \\text{온도} + \\epsilon\\]\n\nnp.random.seed(1)\neps=np.random.normal(size=len(temp), scale=10) \nicecream = 20 + 2 * temp + eps \n\n- 수영장이 원인이 아니라 진짜 아이스크림을 먹고 소아마비에 걸린상황이라면?\n\\[\\text{소아마비 반응수치} = 30 + 0 \\times \\text{온도} + 0.15 \\times \\text{아이스크림 판매량} + \\epsilon\\]\n\nnp.random.seed(2) \neps = np.random.normal(size=len(temp),scale=2)\ndisease= 30+ 0*temp + 0.15*icecream + eps\n\n\ndf2=pd.DataFrame({'temp':temp,'icecream':icecream,'disease':disease})\ndf2.assign(temp2=list(map(cut,df2.temp)))\n\n\n\n\n\n\n\n\ntemp\nicecream\ndisease\ntemp2\n\n\n\n\n0\n-0.5\n35.243454\n34.453002\nTemp: &lt;0\n\n\n1\n1.4\n16.682436\n32.389832\nTemp: 0~5\n\n\n2\n2.6\n19.918282\n28.715350\nTemp: 0~5\n\n\n3\n2.0\n13.270314\n35.271089\nTemp: 0~5\n\n\n4\n2.5\n33.654076\n31.461240\nTemp: 0~5\n\n\n...\n...\n...\n...\n...\n\n\n651\n19.9\n68.839992\n39.693811\nTemp: 15~20\n\n\n652\n20.4\n76.554679\n38.924088\nTemp: 20~25\n\n\n653\n18.3\n68.666079\n41.765212\nTemp: 15~20\n\n\n654\n12.8\n42.771364\n36.842022\nTemp: 10~15\n\n\n655\n6.7\n30.736731\n37.715537\nTemp: 5~10\n\n\n\n\n656 rows × 4 columns\n\n\n\n\nggplot(data=df2.assign(temp2=list(map(cut,df2.temp))))+\\\ngeom_point(aes(x='icecream',y='disease',colour='temp2'),alpha=0.2)+\\\ngeom_smooth(aes(x='icecream',y='disease',colour='temp2'))\n\n/home/cgb4/anaconda3/envs/py37/lib/python3.7/site-packages/plotnine/stats/smoothers.py:311: PlotnineWarning: Confidence intervals are not yet implementedfor lowess smoothings.\n\n\n\n\n\n\n\n\n\n\n이번엔 partial corr도 유의미하게 나옴\n\n- 단순 corr을 봐서는 “온도-&gt;아이스크림,소아마비” 인지, “온도-&gt;아이스크림-&gt;소아마비” 인지 알기 어렵다.\n\ndf.corr()\n\n\n\n\n\n\n\n\ntemp\nicecream\ndisease\n\n\n\n\ntemp\n1.000000\n0.884366\n0.975609\n\n\nicecream\n0.884366\n1.000000\n0.862990\n\n\ndisease\n0.975609\n0.862990\n1.000000\n\n\n\n\n\n\n\n\ndf2.corr()\n\n\n\n\n\n\n\n\ntemp\nicecream\ndisease\n\n\n\n\ntemp\n1.000000\n0.884366\n0.725505\n\n\nicecream\n0.884366\n1.000000\n0.830539\n\n\ndisease\n0.725505\n0.830539\n1.000000"
  },
  {
    "objectID": "posts/2022-10-24-8wk-12.html",
    "href": "posts/2022-10-24-8wk-12.html",
    "title": "08wk-1,2",
    "section": "",
    "text": "판다스– 새로운 열의 할당(2), 자료분석–FIFA23 데이터분석, 판다스– Groupby"
  },
  {
    "objectID": "posts/2022-10-24-8wk-12.html#모티브",
    "href": "posts/2022-10-24-8wk-12.html#모티브",
    "title": "08wk-1,2",
    "section": "모티브",
    "text": "모티브\n- 원본데이터를 가급적 손상시키지 않으면서 데이터를 변형하고 싶음.\n\ndf = pd.DataFrame({'A':range(0,5),'B':range(1,6)})\ndf\n\n\n\n\n\n\n\n\nA\nB\n\n\n\n\n0\n0\n1\n\n\n1\n1\n2\n\n\n2\n2\n3\n\n\n3\n3\n4\n\n\n4\n4\n5\n\n\n\n\n\n\n\n복사본 생성\n\ndf2 = df \ndf2\n\n\n\n\n\n\n\n\nA\nB\n\n\n\n\n0\n0\n1\n\n\n1\n1\n2\n\n\n2\n2\n3\n\n\n3\n3\n4\n\n\n4\n4\n5\n\n\n\n\n\n\n\n\ndf2['C'] = (df2.A+ df2.B)/2\ndf2\n\n\n\n\n\n\n\n\nA\nB\nC\n\n\n\n\n0\n0\n1\n0.5\n\n\n1\n1\n2\n1.5\n\n\n2\n2\n3\n2.5\n\n\n3\n3\n4\n3.5\n\n\n4\n4\n5\n4.5\n\n\n\n\n\n\n\n\ndf2['D']= (df2.C - np.mean(df2.C))/np.std(df2.C) \ndf2\n\n\n\n\n\n\n\n\nA\nB\nC\nD\n\n\n\n\n0\n0\n1\n0.5\n-1.414214\n\n\n1\n1\n2\n1.5\n-0.707107\n\n\n2\n2\n3\n2.5\n0.000000\n\n\n3\n3\n4\n3.5\n0.707107\n\n\n4\n4\n5\n4.5\n1.414214\n\n\n\n\n\n\n\n\ndf # 니가 왜 거기서 나와??\n\n\n\n\n\n\n\n\nA\nB\nC\nD\n\n\n\n\n0\n0\n1\n0.5\n-1.414214\n\n\n1\n1\n2\n1.5\n-0.707107\n\n\n2\n2\n3\n2.5\n0.000000\n\n\n3\n3\n4\n3.5\n0.707107\n\n\n4\n4\n5\n4.5\n1.414214"
  },
  {
    "objectID": "posts/2022-10-24-8wk-12.html#해결책1-df.copy이용-.eval이용",
    "href": "posts/2022-10-24-8wk-12.html#해결책1-df.copy이용-.eval이용",
    "title": "08wk-1,2",
    "section": "해결책1: df.copy()이용, .eval()이용",
    "text": "해결책1: df.copy()이용, .eval()이용\n- 올바른코드1\n\ndf = pd.DataFrame({'A':range(0,5),'B':range(1,6)})\ndf2 = df.copy() \ndf2['C'] = (df2.A+ df2.B)/2\ndf2['D']= (df2.C - np.mean(df2.C))/np.std(df2.C) \n\n\ndf2\n\n\n\n\n\n\n\n\nA\nB\nC\nD\n\n\n\n\n0\n0\n1\n0.5\n-1.414214\n\n\n1\n1\n2\n1.5\n-0.707107\n\n\n2\n2\n3\n2.5\n0.000000\n\n\n3\n3\n4\n3.5\n0.707107\n\n\n4\n4\n5\n4.5\n1.414214\n\n\n\n\n\n\n\n\ndf\n\n\n\n\n\n\n\n\nA\nB\n\n\n\n\n0\n0\n1\n\n\n1\n1\n2\n\n\n2\n2\n3\n\n\n3\n3\n4\n\n\n4\n4\n5\n\n\n\n\n\n\n\n- 올바른코드2\n\ndf = pd.DataFrame({'A':range(0,5),'B':range(1,6)})\nmean = np.mean \nstd = np.std \ndf.eval('C=(A+B)/2').eval('D=(C-@mean(C))/@std(C)')\n\n\n\n\n\n\n\n\nA\nB\nC\nD\n\n\n\n\n0\n0\n1\n0.5\n-1.414214\n\n\n1\n1\n2\n1.5\n-0.707107\n\n\n2\n2\n3\n2.5\n0.000000\n\n\n3\n3\n4\n3.5\n0.707107\n\n\n4\n4\n5\n4.5\n1.414214\n\n\n\n\n\n\n\n\n어디까지 eval expression 안에서 지원되는지 명확하지 않고\n외부에 함수를 선언하고 eval expression 안에 @를 붙이는게 좀 귀찮음\n\n- 올바른코드3 (assign) –&gt; 실패\n\ndf = pd.DataFrame({'A':range(0,5),'B':range(1,6)})\ndf.assign(C= (df.A+df.B)/2) \n\n\n\n\n\n\n\n\nA\nB\nC\n\n\n\n\n0\n0\n1\n0.5\n\n\n1\n1\n2\n1.5\n\n\n2\n2\n3\n2.5\n\n\n3\n3\n4\n3.5\n\n\n4\n4\n5\n4.5\n\n\n\n\n\n\n\n\ndf.assign(C= (df.A+df.B)/2).assign(D= (df.C- np.mean(df.C))/np.std(df.C))\n\nAttributeError: 'DataFrame' object has no attribute 'C'\n\n\n아래와 같이 고쳐야함\n\n_df = df.assign(C= (df.A+df.B)/2)\n_df.assign(D= (_df.C- np.mean(_df.C))/np.std(_df.C))\n\n\n\n\n\n\n\n\nA\nB\nC\nD\n\n\n\n\n0\n0\n1\n0.5\n-1.414214\n\n\n1\n1\n2\n1.5\n-0.707107\n\n\n2\n2\n3\n2.5\n0.000000\n\n\n3\n3\n4\n3.5\n0.707107\n\n\n4\n4\n5\n4.5\n1.414214\n\n\n\n\n\n\n\n\n이건 우리의 철학이랑 안맞음.."
  },
  {
    "objectID": "posts/2022-10-24-8wk-12.html#해결책2-assign을-이용한-연쇄할당",
    "href": "posts/2022-10-24-8wk-12.html#해결책2-assign을-이용한-연쇄할당",
    "title": "08wk-1,2",
    "section": "해결책2: assign을 이용한 연쇄할당",
    "text": "해결책2: assign을 이용한 연쇄할당\n실패한코드는 아래와 같다.\n\ndf.assign(C= (df.A+df.B)/2).assign(D= (df.C- np.mean(df.C))/np.std(df.C))\n\nAttributeError: 'DataFrame' object has no attribute 'C'\n\n\n두번째 assign에서 표현된 df.C 에서, df가 current df (= df.assign(C= (df.A+df.B)/2) 까지 연산된 상태) 를 의미하도록 만들고 싶다. \\(\\to\\) 아래와 같이 lambda df: 를 추가하면 된다.\n\ndf.assign(C= (df.A+df.B)/2).assign(D= lambda df: (df.C- np.mean(df.C))/np.std(df.C))\n\n\n\n\n\n\n\n\nA\nB\nC\nD\n\n\n\n\n0\n0\n1\n0.5\n-1.414214\n\n\n1\n1\n2\n1.5\n-0.707107\n\n\n2\n2\n3\n2.5\n0.000000\n\n\n3\n3\n4\n3.5\n0.707107\n\n\n4\n4\n5\n4.5\n1.414214\n\n\n\n\n\n\n\n- 연쇄할당\n\ndf.assign(C = (df.A+df.B)/2).assign(D = lambda df: df.C +2).assign(E = lambda df: df.D - 2)\n\n\n\n\n\n\n\n\nA\nB\nC\nD\nE\n\n\n\n\n0\n0\n1\n0.5\n2.5\n0.5\n\n\n1\n1\n2\n1.5\n3.5\n1.5\n\n\n2\n2\n3\n2.5\n4.5\n2.5\n\n\n3\n3\n4\n3.5\n5.5\n3.5\n\n\n4\n4\n5\n4.5\n6.5\n4.5"
  },
  {
    "objectID": "posts/2022-10-24-8wk-12.html#fifa23-data",
    "href": "posts/2022-10-24-8wk-12.html#fifa23-data",
    "title": "08wk-1,2",
    "section": "FIFA23 data",
    "text": "FIFA23 data\n- FIFA23라는 축구게임이 있음\n- 게임에 실제 선수들이 나오면서 선수들의 능력치가 세밀하게 구현되어 있음\n- 선수들 능력치에 대한 데이터셋은 캐글에 공개되어 있음 - https://www.kaggle.com/datasets/bryanb/fifa-player-stats-database?select=FIFA23_official_data.csv"
  },
  {
    "objectID": "posts/2022-10-24-8wk-12.html#데이터살펴보기",
    "href": "posts/2022-10-24-8wk-12.html#데이터살펴보기",
    "title": "08wk-1,2",
    "section": "데이터살펴보기",
    "text": "데이터살펴보기\n- 일단 살펴보기\n\ndf=pd.read_csv('https://raw.githubusercontent.com/guebin/DV2022/master/posts/FIFA23_official_data.csv')\ndf.head()\n\n\n\n\n\n\n\n\nID\nName\nAge\nPhoto\nNationality\nFlag\nOverall\nPotential\nClub\nClub Logo\n...\nReal Face\nPosition\nJoined\nLoaned From\nContract Valid Until\nHeight\nWeight\nRelease Clause\nKit Number\nBest Overall Rating\n\n\n\n\n0\n209658\nL. Goretzka\n27\nhttps://cdn.sofifa.net/players/209/658/23_60.png\nGermany\nhttps://cdn.sofifa.net/flags/de.png\n87\n88\nFC Bayern München\nhttps://cdn.sofifa.net/teams/21/30.png\n...\nYes\n&lt;span class=\"pos pos28\"&gt;SUB\nJul 1, 2018\nNaN\n2026\n189cm\n82kg\n€157M\n8.0\nNaN\n\n\n1\n212198\nBruno Fernandes\n27\nhttps://cdn.sofifa.net/players/212/198/23_60.png\nPortugal\nhttps://cdn.sofifa.net/flags/pt.png\n86\n87\nManchester United\nhttps://cdn.sofifa.net/teams/11/30.png\n...\nYes\n&lt;span class=\"pos pos15\"&gt;LCM\nJan 30, 2020\nNaN\n2026\n179cm\n69kg\n€155M\n8.0\nNaN\n\n\n2\n224334\nM. Acuña\n30\nhttps://cdn.sofifa.net/players/224/334/23_60.png\nArgentina\nhttps://cdn.sofifa.net/flags/ar.png\n85\n85\nSevilla FC\nhttps://cdn.sofifa.net/teams/481/30.png\n...\nNo\n&lt;span class=\"pos pos7\"&gt;LB\nSep 14, 2020\nNaN\n2024\n172cm\n69kg\n€97.7M\n19.0\nNaN\n\n\n3\n192985\nK. De Bruyne\n31\nhttps://cdn.sofifa.net/players/192/985/23_60.png\nBelgium\nhttps://cdn.sofifa.net/flags/be.png\n91\n91\nManchester City\nhttps://cdn.sofifa.net/teams/10/30.png\n...\nYes\n&lt;span class=\"pos pos13\"&gt;RCM\nAug 30, 2015\nNaN\n2025\n181cm\n70kg\n€198.9M\n17.0\nNaN\n\n\n4\n224232\nN. Barella\n25\nhttps://cdn.sofifa.net/players/224/232/23_60.png\nItaly\nhttps://cdn.sofifa.net/flags/it.png\n86\n89\nInter\nhttps://cdn.sofifa.net/teams/44/30.png\n...\nYes\n&lt;span class=\"pos pos13\"&gt;RCM\nSep 1, 2020\nNaN\n2026\n172cm\n68kg\n€154.4M\n23.0\nNaN\n\n\n\n\n5 rows × 29 columns\n\n\n\n트랜스포즈하여 보는 것이 편할때도 있음\n\ndf.T\n\n\n\n\n\n\n\n\n0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n...\n17650\n17651\n17652\n17653\n17654\n17655\n17656\n17657\n17658\n17659\n\n\n\n\nID\n209658\n212198\n224334\n192985\n224232\n212622\n197445\n187961\n208333\n210514\n...\n256879\n269546\n267647\n253186\n267461\n269526\n267946\n270567\n256624\n256376\n\n\nName\nL. Goretzka\nBruno Fernandes\nM. Acuña\nK. De Bruyne\nN. Barella\nJ. Kimmich\nD. Alaba\n22 Paulinho\nE. Can\nJoão Cancelo\n...\n22 G. Leijon\nWu Fei\n22 E. Grosz\n22 S. Booth\n22 L. Grimpe\nDeng Xiongtao\n22 Lim Jun Sub\nA. Demir\n21 S. Czajor\n21 F. Jakobsson\n\n\nAge\n27\n27\n30\n31\n25\n27\n30\n32\n28\n28\n...\n19\n32\n18\n20\n17\n19\n17\n25\n18\n20\n\n\nPhoto\nhttps://cdn.sofifa.net/players/209/658/23_60.png\nhttps://cdn.sofifa.net/players/212/198/23_60.png\nhttps://cdn.sofifa.net/players/224/334/23_60.png\nhttps://cdn.sofifa.net/players/192/985/23_60.png\nhttps://cdn.sofifa.net/players/224/232/23_60.png\nhttps://cdn.sofifa.net/players/212/622/23_60.png\nhttps://cdn.sofifa.net/players/197/445/23_60.png\nhttps://cdn.sofifa.net/players/187/961/22_60.png\nhttps://cdn.sofifa.net/players/208/333/23_60.png\nhttps://cdn.sofifa.net/players/210/514/23_60.png\n...\nhttps://cdn.sofifa.net/players/256/879/22_60.png\nhttps://cdn.sofifa.net/players/269/546/23_60.png\nhttps://cdn.sofifa.net/players/267/647/22_60.png\nhttps://cdn.sofifa.net/players/253/186/22_60.png\nhttps://cdn.sofifa.net/players/267/461/22_60.png\nhttps://cdn.sofifa.net/players/269/526/23_60.png\nhttps://cdn.sofifa.net/players/267/946/22_60.png\nhttps://cdn.sofifa.net/players/270/567/23_60.png\nhttps://cdn.sofifa.net/players/256/624/21_60.png\nhttps://cdn.sofifa.net/players/256/376/21_60.png\n\n\nNationality\nGermany\nPortugal\nArgentina\nBelgium\nItaly\nGermany\nAustria\nBrazil\nGermany\nPortugal\n...\nSweden\nChina PR\nRomania\nEngland\nGermany\nChina PR\nKorea Republic\nTurkey\nPoland\nSweden\n\n\nFlag\nhttps://cdn.sofifa.net/flags/de.png\nhttps://cdn.sofifa.net/flags/pt.png\nhttps://cdn.sofifa.net/flags/ar.png\nhttps://cdn.sofifa.net/flags/be.png\nhttps://cdn.sofifa.net/flags/it.png\nhttps://cdn.sofifa.net/flags/de.png\nhttps://cdn.sofifa.net/flags/at.png\nhttps://cdn.sofifa.net/flags/br.png\nhttps://cdn.sofifa.net/flags/de.png\nhttps://cdn.sofifa.net/flags/pt.png\n...\nhttps://cdn.sofifa.net/flags/se.png\nhttps://cdn.sofifa.net/flags/cn.png\nhttps://cdn.sofifa.net/flags/ro.png\nhttps://cdn.sofifa.net/flags/gb-eng.png\nhttps://cdn.sofifa.net/flags/de.png\nhttps://cdn.sofifa.net/flags/cn.png\nhttps://cdn.sofifa.net/flags/kr.png\nhttps://cdn.sofifa.net/flags/tr.png\nhttps://cdn.sofifa.net/flags/pl.png\nhttps://cdn.sofifa.net/flags/se.png\n\n\nOverall\n87\n86\n85\n91\n86\n89\n86\n83\n82\n88\n...\n52\n51\n52\n51\n54\n48\n48\n51\n50\n50\n\n\nPotential\n88\n87\n85\n91\n89\n90\n86\n83\n82\n88\n...\n62\n51\n70\n60\n68\n61\n64\n56\n65\n61\n\n\nClub\nFC Bayern München\nManchester United\nSevilla FC\nManchester City\nInter\nFC Bayern München\nReal Madrid CF\nAl Ahli\nBorussia Dortmund\nManchester City\n...\nÖrebro SK\nWuhan Three Towns\nGaz Metan Mediaş\nCrewe Alexandra\nRB Leipzig\nMeizhou Hakka\nJeju United FC\nÜmraniyespor\nFleetwood Town\nIFK Norrköping\n\n\nClub Logo\nhttps://cdn.sofifa.net/teams/21/30.png\nhttps://cdn.sofifa.net/teams/11/30.png\nhttps://cdn.sofifa.net/teams/481/30.png\nhttps://cdn.sofifa.net/teams/10/30.png\nhttps://cdn.sofifa.net/teams/44/30.png\nhttps://cdn.sofifa.net/teams/21/30.png\nhttps://cdn.sofifa.net/teams/243/30.png\nhttps://cdn.sofifa.net/teams/112387/30.png\nhttps://cdn.sofifa.net/teams/22/30.png\nhttps://cdn.sofifa.net/teams/10/30.png\n...\nhttps://cdn.sofifa.net/teams/705/30.png\nhttps://cdn.sofifa.net/teams/116361/30.png\nhttps://cdn.sofifa.net/teams/112637/30.png\nhttps://cdn.sofifa.net/teams/121/30.png\nhttps://cdn.sofifa.net/teams/112172/30.png\nhttps://cdn.sofifa.net/teams/114628/30.png\nhttps://cdn.sofifa.net/teams/1478/30.png\nhttps://cdn.sofifa.net/teams/113796/30.png\nhttps://cdn.sofifa.net/teams/112260/30.png\nhttps://cdn.sofifa.net/teams/702/30.png\n\n\nValue\n€91M\n€78.5M\n€46.5M\n€107.5M\n€89.5M\n€105.5M\n€55.5M\n€28.5M\n€30.5M\n€82.5M\n...\n€150K\n€30K\n€180K\n€110K\n€210K\n€100K\n€100K\n€70K\n€90K\n€90K\n\n\nWage\n€115K\n€190K\n€46K\n€350K\n€110K\n€130K\n€220K\n€61K\n€63K\n€250K\n...\n€500\n€2K\n€500\n€850\n€500\n€500\n€500\n€2K\n€500\n€500\n\n\nSpecial\n2312\n2305\n2303\n2303\n2296\n2283\n2277\n2273\n2271\n2262\n...\n779\n777\n775\n768\n767\n762\n761\n759\n758\n749\n\n\nPreferred Foot\nRight\nRight\nLeft\nRight\nRight\nRight\nLeft\nRight\nRight\nRight\n...\nRight\nRight\nRight\nRight\nRight\nRight\nRight\nRight\nRight\nLeft\n\n\nInternational Reputation\n4.0\n3.0\n2.0\n4.0\n3.0\n4.0\n4.0\n3.0\n3.0\n3.0\n...\n1.0\n1.0\n1.0\n1.0\n1.0\n1.0\n1.0\n1.0\n1.0\n1.0\n\n\nWeak Foot\n4.0\n3.0\n3.0\n5.0\n3.0\n4.0\n4.0\n4.0\n4.0\n4.0\n...\n3.0\n2.0\n2.0\n2.0\n3.0\n3.0\n2.0\n2.0\n2.0\n2.0\n\n\nSkill Moves\n3.0\n4.0\n3.0\n4.0\n3.0\n3.0\n3.0\n4.0\n3.0\n4.0\n...\n1.0\n1.0\n1.0\n1.0\n1.0\n1.0\n1.0\n1.0\n1.0\n1.0\n\n\nWork Rate\nHigh/ Medium\nHigh/ High\nHigh/ High\nHigh/ High\nHigh/ High\nHigh/ Medium\nMedium/ Medium\nHigh/ High\nMedium/ High\nHigh/ Medium\n...\nMedium/ Medium\nMedium/ Medium\nMedium/ Medium\nMedium/ Medium\nMedium/ Medium\nMedium/ Medium\nMedium/ Medium\nMedium/ Medium\nMedium/ Medium\nMedium/ Medium\n\n\nBody Type\nUnique\nUnique\nStocky (170-185)\nUnique\nNormal (170-)\nNormal (170-185)\nNormal (170-185)\nNormal (170-185)\nStocky (185+)\nUnique\n...\nNormal (185+)\nNormal (185+)\nLean (185+)\nLean (185+)\nLean (185+)\nNormal (185+)\nLean (185+)\nLean (185+)\nNormal (185+)\nNormal (185+)\n\n\nReal Face\nYes\nYes\nNo\nYes\nYes\nYes\nYes\nYes\nYes\nYes\n...\nNo\nNo\nNo\nNo\nNo\nNo\nNo\nNo\nNo\nNo\n\n\nPosition\n&lt;span class=\"pos pos28\"&gt;SUB\n&lt;span class=\"pos pos15\"&gt;LCM\n&lt;span class=\"pos pos7\"&gt;LB\n&lt;span class=\"pos pos13\"&gt;RCM\n&lt;span class=\"pos pos13\"&gt;RCM\n&lt;span class=\"pos pos9\"&gt;RDM\n&lt;span class=\"pos pos6\"&gt;LCB\n&lt;span class=\"pos pos15\"&gt;LCM\n&lt;span class=\"pos pos28\"&gt;SUB\n&lt;span class=\"pos pos7\"&gt;LB\n...\n&lt;span class=\"pos pos28\"&gt;SUB\n&lt;span class=\"pos pos28\"&gt;SUB\n&lt;span class=\"pos pos28\"&gt;SUB\n&lt;span class=\"pos pos29\"&gt;RES\n&lt;span class=\"pos pos29\"&gt;RES\n&lt;span class=\"pos pos29\"&gt;RES\n&lt;span class=\"pos pos29\"&gt;RES\n&lt;span class=\"pos pos29\"&gt;RES\n&lt;span class=\"pos pos29\"&gt;RES\n&lt;span class=\"pos pos29\"&gt;RES\n\n\nJoined\nJul 1, 2018\nJan 30, 2020\nSep 14, 2020\nAug 30, 2015\nSep 1, 2020\nJul 1, 2015\nJul 1, 2021\nJul 22, 2021\nFeb 18, 2020\nAug 7, 2019\n...\nJun 14, 2020\nFeb 15, 2019\nJul 1, 2020\nJul 1, 2019\nFeb 7, 2022\nApr 11, 2022\nJan 1, 2022\nJun 6, 2021\nJan 1, 2020\nJan 8, 2020\n\n\nLoaned From\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\nContract Valid Until\n2026\n2026\n2024\n2025\n2026\n2025\n2026\n2024\n2024\n2027\n...\n2022\n2022\n2022\n2022\n2023\n2027\n2026\n2023\n2021\n2021\n\n\nHeight\n189cm\n179cm\n172cm\n181cm\n172cm\n177cm\n180cm\n183cm\n186cm\n182cm\n...\n188cm\n186cm\n190cm\n195cm\n186cm\n190cm\n195cm\n190cm\n187cm\n186cm\n\n\nWeight\n82kg\n69kg\n69kg\n70kg\n68kg\n75kg\n78kg\n80kg\n86kg\n74kg\n...\n81kg\n78kg\n70kg\n80kg\n78kg\n78kg\n84kg\n82kg\n79kg\n78kg\n\n\nRelease Clause\n€157M\n€155M\n€97.7M\n€198.9M\n€154.4M\n€182M\n€113.8M\n€48.5M\n€51.9M\n€152.6M\n...\n€218K\n€47K\n€356K\n€215K\n€488K\n€218K\n€188K\n€142K\n€214K\n€131K\n\n\nKit Number\n8.0\n8.0\n19.0\n17.0\n23.0\n6.0\n4.0\n15.0\n23.0\n7.0\n...\n33.0\n1.0\n99.0\n27.0\n43.0\n35.0\n21.0\n12.0\n40.0\n30.0\n\n\nBest Overall Rating\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n\n\n29 rows × 17660 columns\n\n\n\n- column이름조사\n\ndf.keys()\n\nIndex(['ID', 'Name', 'Age', 'Photo', 'Nationality', 'Flag', 'Overall',\n       'Potential', 'Club', 'Club Logo', 'Value', 'Wage', 'Special',\n       'Preferred Foot', 'International Reputation', 'Weak Foot',\n       'Skill Moves', 'Work Rate', 'Body Type', 'Real Face', 'Position',\n       'Joined', 'Loaned From', 'Contract Valid Until', 'Height', 'Weight',\n       'Release Clause', 'Kit Number', 'Best Overall Rating'],\n      dtype='object')\n\n\n\n이름에 space가 있어서 좀 거슬림\n\n- 각 column 별로 자료형조사\n\npd.DataFrame({'colname':df.keys(), 'dtype':[df[key].dtype for key in df.keys()]})\n\n\n\n\n\n\n\n\ncolname\ndtype\n\n\n\n\n0\nID\nint64\n\n\n1\nName\nobject\n\n\n2\nAge\nint64\n\n\n3\nPhoto\nobject\n\n\n4\nNationality\nobject\n\n\n5\nFlag\nobject\n\n\n6\nOverall\nint64\n\n\n7\nPotential\nint64\n\n\n8\nClub\nobject\n\n\n9\nClub Logo\nobject\n\n\n10\nValue\nobject\n\n\n11\nWage\nobject\n\n\n12\nSpecial\nint64\n\n\n13\nPreferred Foot\nobject\n\n\n14\nInternational Reputation\nfloat64\n\n\n15\nWeak Foot\nfloat64\n\n\n16\nSkill Moves\nfloat64\n\n\n17\nWork Rate\nobject\n\n\n18\nBody Type\nobject\n\n\n19\nReal Face\nobject\n\n\n20\nPosition\nobject\n\n\n21\nJoined\nobject\n\n\n22\nLoaned From\nobject\n\n\n23\nContract Valid Until\nobject\n\n\n24\nHeight\nobject\n\n\n25\nWeight\nobject\n\n\n26\nRelease Clause\nobject\n\n\n27\nKit Number\nfloat64\n\n\n28\nBest Overall Rating\nobject\n\n\n\n\n\n\n\n- 결측치조사\n\npd.DataFrame({'colname':df.keys(), \n              'dtype':[df[key].dtype for key in df.keys()],\n              'na':[df[key].isna().sum() for key in df.keys()]\n             })\n\n\n\n\n\n\n\n\ncolname\ndtype\nna\n\n\n\n\n0\nID\nint64\n0\n\n\n1\nName\nobject\n0\n\n\n2\nAge\nint64\n0\n\n\n3\nPhoto\nobject\n0\n\n\n4\nNationality\nobject\n0\n\n\n5\nFlag\nobject\n0\n\n\n6\nOverall\nint64\n0\n\n\n7\nPotential\nint64\n0\n\n\n8\nClub\nobject\n211\n\n\n9\nClub Logo\nobject\n0\n\n\n10\nValue\nobject\n0\n\n\n11\nWage\nobject\n0\n\n\n12\nSpecial\nint64\n0\n\n\n13\nPreferred Foot\nobject\n0\n\n\n14\nInternational Reputation\nfloat64\n0\n\n\n15\nWeak Foot\nfloat64\n0\n\n\n16\nSkill Moves\nfloat64\n0\n\n\n17\nWork Rate\nobject\n0\n\n\n18\nBody Type\nobject\n38\n\n\n19\nReal Face\nobject\n38\n\n\n20\nPosition\nobject\n35\n\n\n21\nJoined\nobject\n1098\n\n\n22\nLoaned From\nobject\n16966\n\n\n23\nContract Valid Until\nobject\n361\n\n\n24\nHeight\nobject\n0\n\n\n25\nWeight\nobject\n0\n\n\n26\nRelease Clause\nobject\n1151\n\n\n27\nKit Number\nfloat64\n35\n\n\n28\nBest Overall Rating\nobject\n17639\n\n\n\n\n\n\n\n(퀴즈) 열의선택: 결측치가 10000개 이상인 열을 보고싶다면?\n\ndf.loc[:,[df[key].isna().sum()&gt;10000 for key in df.keys()]]\n\n\n\n\n\n\n\n\nLoaned From\nBest Overall Rating\n\n\n\n\n0\nNaN\nNaN\n\n\n1\nNaN\nNaN\n\n\n2\nNaN\nNaN\n\n\n3\nNaN\nNaN\n\n\n4\nNaN\nNaN\n\n\n...\n...\n...\n\n\n17655\nNaN\nNaN\n\n\n17656\nNaN\nNaN\n\n\n17657\nNaN\nNaN\n\n\n17658\nNaN\nNaN\n\n\n17659\nNaN\nNaN\n\n\n\n\n17660 rows × 2 columns\n\n\n\n- .info()\n\ndf.info()\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 17660 entries, 0 to 17659\nData columns (total 29 columns):\n #   Column                    Non-Null Count  Dtype  \n---  ------                    --------------  -----  \n 0   ID                        17660 non-null  int64  \n 1   Name                      17660 non-null  object \n 2   Age                       17660 non-null  int64  \n 3   Photo                     17660 non-null  object \n 4   Nationality               17660 non-null  object \n 5   Flag                      17660 non-null  object \n 6   Overall                   17660 non-null  int64  \n 7   Potential                 17660 non-null  int64  \n 8   Club                      17449 non-null  object \n 9   Club Logo                 17660 non-null  object \n 10  Value                     17660 non-null  object \n 11  Wage                      17660 non-null  object \n 12  Special                   17660 non-null  int64  \n 13  Preferred Foot            17660 non-null  object \n 14  International Reputation  17660 non-null  float64\n 15  Weak Foot                 17660 non-null  float64\n 16  Skill Moves               17660 non-null  float64\n 17  Work Rate                 17660 non-null  object \n 18  Body Type                 17622 non-null  object \n 19  Real Face                 17622 non-null  object \n 20  Position                  17625 non-null  object \n 21  Joined                    16562 non-null  object \n 22  Loaned From               694 non-null    object \n 23  Contract Valid Until      17299 non-null  object \n 24  Height                    17660 non-null  object \n 25  Weight                    17660 non-null  object \n 26  Release Clause            16509 non-null  object \n 27  Kit Number                17625 non-null  float64\n 28  Best Overall Rating       21 non-null     object \ndtypes: float64(4), int64(5), object(20)\nmemory usage: 3.9+ MB\n\n\n- .describe(): 숫자들이 저장된 column에 대하여 기본통계량 조사\n\ndf.describe()\n\n\n\n\n\n\n\n\nID\nAge\nOverall\nPotential\nSpecial\nInternational Reputation\nWeak Foot\nSkill Moves\nKit Number\n\n\n\n\ncount\n17660.000000\n17660.000000\n17660.000000\n17660.000000\n17660.000000\n17660.000000\n17660.000000\n17660.000000\n17625.000000\n\n\nmean\n246319.424462\n23.127746\n63.369592\n70.981200\n1537.915855\n1.106285\n2.900340\n2.297169\n25.037957\n\n\nstd\n31487.892861\n4.639821\n8.036268\n6.529836\n285.893809\n0.407021\n0.663523\n0.754264\n19.154116\n\n\nmin\n16.000000\n15.000000\n43.000000\n42.000000\n749.000000\n1.000000\n1.000000\n1.000000\n1.000000\n\n\n25%\n240732.500000\n20.000000\n58.000000\n67.000000\n1387.000000\n1.000000\n3.000000\n2.000000\n11.000000\n\n\n50%\n257041.000000\n22.000000\n63.000000\n71.000000\n1548.000000\n1.000000\n3.000000\n2.000000\n22.000000\n\n\n75%\n263027.500000\n26.000000\n69.000000\n75.000000\n1727.000000\n1.000000\n3.000000\n3.000000\n32.000000\n\n\nmax\n271340.000000\n54.000000\n91.000000\n95.000000\n2312.000000\n5.000000\n5.000000\n5.000000\n99.000000\n\n\n\n\n\n\n\n- pandas_profiling.ProfileReport()을 이용한 전체적인 조사\n\n# pandas_profiling.ProfileReport(df).to_file('fifa2023_reprot.html')\n\n- 특정열을 중심으로 정렬하여 보기\n\ndf.sort_values(by='Overall',ascending=False).reset_index()\n\n\n\n\n\n\n\n\nindex\nID\nName\nAge\nPhoto\nNationality\nFlag\nOverall\nPotential\nClub\n...\nReal Face\nPosition\nJoined\nLoaned From\nContract Valid Until\nHeight\nWeight\nRelease Clause\nKit Number\nBest Overall Rating\n\n\n\n\n0\n41\n188545\nR. Lewandowski\n33\nhttps://cdn.sofifa.net/players/188/545/23_60.png\nPoland\nhttps://cdn.sofifa.net/flags/pl.png\n91\n91\nFC Barcelona\n...\nYes\n&lt;span class=\"pos pos25\"&gt;ST\nJul 18, 2022\nNaN\n2025\n185cm\n81kg\n€172.2M\n9.0\nNaN\n\n\n1\n124\n165153\nK. Benzema\n34\nhttps://cdn.sofifa.net/players/165/153/23_60.png\nFrance\nhttps://cdn.sofifa.net/flags/fr.png\n91\n91\nReal Madrid CF\n...\nYes\n&lt;span class=\"pos pos21\"&gt;CF\nJul 9, 2009\nNaN\n2023\n185cm\n81kg\n€131.2M\n9.0\nNaN\n\n\n2\n3\n192985\nK. De Bruyne\n31\nhttps://cdn.sofifa.net/players/192/985/23_60.png\nBelgium\nhttps://cdn.sofifa.net/flags/be.png\n91\n91\nManchester City\n...\nYes\n&lt;span class=\"pos pos13\"&gt;RCM\nAug 30, 2015\nNaN\n2025\n181cm\n70kg\n€198.9M\n17.0\nNaN\n\n\n3\n56\n158023\nL. Messi\n35\nhttps://cdn.sofifa.net/players/158/023/23_60.png\nArgentina\nhttps://cdn.sofifa.net/flags/ar.png\n91\n91\nParis Saint-Germain\n...\nYes\n&lt;span class=\"pos pos23\"&gt;RW\nAug 10, 2021\nNaN\n2023\n169cm\n67kg\n€99.9M\n30.0\nNaN\n\n\n4\n75\n231747\nK. Mbappé\n23\nhttps://cdn.sofifa.net/players/231/747/23_60.png\nFrance\nhttps://cdn.sofifa.net/flags/fr.png\n91\n95\nParis Saint-Germain\n...\nYes\n&lt;span class=\"pos pos25\"&gt;ST\nJul 1, 2018\nNaN\n2025\n182cm\n73kg\n€366.7M\n7.0\nNaN\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n17655\n15513\n266751\n22 Jung Ho Yeon\n20\nhttps://cdn.sofifa.net/players/266/751/22_60.png\nKorea Republic\nhttps://cdn.sofifa.net/flags/kr.png\n45\n53\nGwangJu FC\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nJan 20, 2022\nNaN\n2026\n180cm\n73kg\n€145K\n23.0\nNaN\n\n\n17656\n16215\n268279\n22 J. Looschen\n24\nhttps://cdn.sofifa.net/players/268/279/22_60.png\nGermany\nhttps://cdn.sofifa.net/flags/de.png\n44\n47\nSV Meppen\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nMar 19, 2022\nNaN\n2026\n178cm\n78kg\n€92K\n42.0\nNaN\n\n\n17657\n16042\n255283\n20 Kim Yeong Geun\n22\nhttps://cdn.sofifa.net/players/255/283/20_60.png\nKorea Republic\nhttps://cdn.sofifa.net/flags/kr.png\n44\n49\nGyeongnam FC\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nJan 9, 2020\nNaN\n2020\n174cm\n71kg\n€53K\n43.0\nNaN\n\n\n17658\n14634\n269038\n22 Zhang Wenxuan\n16\nhttps://cdn.sofifa.net/players/269/038/22_60.png\nChina PR\nhttps://cdn.sofifa.net/flags/cn.png\n44\n59\nGuangzhou FC\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nMay 1, 2022\nNaN\n2022\n175cm\n70kg\n€239K\n29.0\nNaN\n\n\n17659\n17618\n168933\n07 I. Paskov\n33\nhttps://cdn.sofifa.net/players/168/933/07_60.png\nBulgaria\nhttps://cdn.sofifa.net/flags/bg.png\n43\n42\nNaN\n...\nNaN\n&lt;span class=\"pos pos28\"&gt;SUB\nNaN\nNaN\nNaN\n184cm\n79kg\nNaN\n24.0\nNaN\n\n\n\n\n17660 rows × 30 columns\n\n\n\n- 특정열을 중심으로 그룹화하여 보기 (\\(\\star\\))\n\ndf.Nationality.unique() # 데이터셋에 포함된 나라들 출력\n\narray(['Germany', 'Portugal', 'Argentina', 'Belgium', 'Italy', 'Austria',\n       'Brazil', 'Croatia', 'Serbia', 'Spain', 'Netherlands', 'France',\n       'Colombia', 'England', 'Uruguay', 'Morocco', 'Egypt', 'Algeria',\n       'Ukraine', 'United States', \"Côte d'Ivoire\", 'Poland', 'Chile',\n       'Senegal', 'Central African Republic', 'Denmark', 'Nigeria',\n       'Mexico', 'Turkey', 'Canada', 'Wales', 'Scotland', 'Romania',\n       'Czech Republic', 'Ghana', 'Korea Republic',\n       'Bosnia and Herzegovina', 'Mali', 'Slovakia', 'Armenia', 'Norway',\n       'Switzerland', 'Cameroon', 'Peru', 'Jamaica', 'Zambia', 'Guinea',\n       'Sweden', 'North Macedonia', 'Russia', 'Tunisia', 'Malta',\n       'Angola', 'Republic of Ireland', 'Ecuador', 'Benin', 'Paraguay',\n       'Montenegro', 'Australia', 'Comoros', 'Gabon', 'Iceland',\n       'Slovenia', 'Japan', 'Israel', 'China PR', 'Venezuela', 'Liberia',\n       'Greece', 'Bulgaria', 'Honduras', 'Saudi Arabia', 'Curacao',\n       'Northern Ireland', 'Guinea Bissau', 'Kosovo', 'Hungary',\n       'Finland', 'Costa Rica', 'Albania', 'Congo DR', 'Iran',\n       'Mozambique', 'Suriname', 'Cape Verde Islands', 'Bolivia',\n       'Madagascar', 'New Zealand', 'Burkina Faso', 'Dominican Republic',\n       'Kazakhstan', 'Syria', 'Luxembourg', 'Kenya', 'Zimbabwe', 'Haiti',\n       'Uzbekistan', 'South Africa', 'Cyprus', 'Qatar',\n       'Equatorial Guinea', 'Libya', 'Thailand', 'Togo',\n       'Trinidad and Tobago', 'Liechtenstein', 'Gambia', 'Georgia',\n       'Philippines', 'Burundi', 'United Arab Emirates', 'Grenada',\n       'Iraq', 'Panama', 'Malaysia', 'Moldova', 'Congo', 'India',\n       'Jordan', 'Kuwait', 'Antigua and Barbuda', 'Cuba', 'Vietnam',\n       'Korea DPR', 'Uganda', 'Lithuania', 'Estonia', 'Montserrat',\n       'Sierra Leone', 'Afghanistan', 'New Caledonia', 'Belarus', 'Laos',\n       'Saint Lucia', 'Bhutan', 'Guyana', 'Mauritania', 'Faroe Islands',\n       'Namibia', 'Niger', 'Palestine', 'Sudan', 'Azerbaijan',\n       'Hong Kong', 'Gibraltar', 'Tanzania', 'Latvia', 'Chinese Taipei',\n       'Singapore', 'Lebanon', 'El Salvador', 'Indonesia', 'Guatemala',\n       'Papua New Guinea', 'Puerto Rico', 'Malawi', 'South Sudan',\n       'Ethiopia', 'San Marino', 'Andorra', 'Saint Kitts and Nevis'],\n      dtype=object)\n\n\n\ndf.groupby(by='Nationality')[['Overall']].agg({np.mean,len}).sort_values(('Overall', 'mean'),ascending=False)\n\n\n\n\n\n\n\n\nOverall\n\n\n\nmean\nlen\n\n\nNationality\n\n\n\n\n\n\nPhilippines\n74.000000\n1\n\n\nNamibia\n72.000000\n1\n\n\nMozambique\n72.000000\n2\n\n\nKuwait\n71.000000\n1\n\n\nBrazil\n70.556586\n539\n\n\n...\n...\n...\n\n\nSan Marino\n53.000000\n1\n\n\nChina PR\n52.230769\n325\n\n\nSouth Sudan\n52.000000\n5\n\n\nIndia\n51.994681\n188\n\n\nSaint Kitts and Nevis\n51.000000\n1\n\n\n\n\n161 rows × 2 columns\n\n\n\n\ngroupby는 나중에 다시 설명 합니다."
  },
  {
    "objectID": "posts/2022-10-24-8wk-12.html#데이터정리하기",
    "href": "posts/2022-10-24-8wk-12.html#데이터정리하기",
    "title": "08wk-1,2",
    "section": "데이터정리하기",
    "text": "데이터정리하기\n- 칼럼이름변경\n\ndf.set_axis(pd.Index(map(lambda x: x.replace(' ','_'), df.columns)), axis=1)\n\n\n\n\n\n\n\n\nID\nName\nAge\nPhoto\nNationality\nFlag\nOverall\nPotential\nClub\nClub_Logo\n...\nReal_Face\nPosition\nJoined\nLoaned_From\nContract_Valid_Until\nHeight\nWeight\nRelease_Clause\nKit_Number\nBest_Overall_Rating\n\n\n\n\n0\n209658\nL. Goretzka\n27\nhttps://cdn.sofifa.net/players/209/658/23_60.png\nGermany\nhttps://cdn.sofifa.net/flags/de.png\n87\n88\nFC Bayern München\nhttps://cdn.sofifa.net/teams/21/30.png\n...\nYes\n&lt;span class=\"pos pos28\"&gt;SUB\nJul 1, 2018\nNaN\n2026\n189cm\n82kg\n€157M\n8.0\nNaN\n\n\n1\n212198\nBruno Fernandes\n27\nhttps://cdn.sofifa.net/players/212/198/23_60.png\nPortugal\nhttps://cdn.sofifa.net/flags/pt.png\n86\n87\nManchester United\nhttps://cdn.sofifa.net/teams/11/30.png\n...\nYes\n&lt;span class=\"pos pos15\"&gt;LCM\nJan 30, 2020\nNaN\n2026\n179cm\n69kg\n€155M\n8.0\nNaN\n\n\n2\n224334\nM. Acuña\n30\nhttps://cdn.sofifa.net/players/224/334/23_60.png\nArgentina\nhttps://cdn.sofifa.net/flags/ar.png\n85\n85\nSevilla FC\nhttps://cdn.sofifa.net/teams/481/30.png\n...\nNo\n&lt;span class=\"pos pos7\"&gt;LB\nSep 14, 2020\nNaN\n2024\n172cm\n69kg\n€97.7M\n19.0\nNaN\n\n\n3\n192985\nK. De Bruyne\n31\nhttps://cdn.sofifa.net/players/192/985/23_60.png\nBelgium\nhttps://cdn.sofifa.net/flags/be.png\n91\n91\nManchester City\nhttps://cdn.sofifa.net/teams/10/30.png\n...\nYes\n&lt;span class=\"pos pos13\"&gt;RCM\nAug 30, 2015\nNaN\n2025\n181cm\n70kg\n€198.9M\n17.0\nNaN\n\n\n4\n224232\nN. Barella\n25\nhttps://cdn.sofifa.net/players/224/232/23_60.png\nItaly\nhttps://cdn.sofifa.net/flags/it.png\n86\n89\nInter\nhttps://cdn.sofifa.net/teams/44/30.png\n...\nYes\n&lt;span class=\"pos pos13\"&gt;RCM\nSep 1, 2020\nNaN\n2026\n172cm\n68kg\n€154.4M\n23.0\nNaN\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n17655\n269526\nDeng Xiongtao\n19\nhttps://cdn.sofifa.net/players/269/526/23_60.png\nChina PR\nhttps://cdn.sofifa.net/flags/cn.png\n48\n61\nMeizhou Hakka\nhttps://cdn.sofifa.net/teams/114628/30.png\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nApr 11, 2022\nNaN\n2027\n190cm\n78kg\n€218K\n35.0\nNaN\n\n\n17656\n267946\n22 Lim Jun Sub\n17\nhttps://cdn.sofifa.net/players/267/946/22_60.png\nKorea Republic\nhttps://cdn.sofifa.net/flags/kr.png\n48\n64\nJeju United FC\nhttps://cdn.sofifa.net/teams/1478/30.png\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nJan 1, 2022\nNaN\n2026\n195cm\n84kg\n€188K\n21.0\nNaN\n\n\n17657\n270567\nA. Demir\n25\nhttps://cdn.sofifa.net/players/270/567/23_60.png\nTurkey\nhttps://cdn.sofifa.net/flags/tr.png\n51\n56\nÜmraniyespor\nhttps://cdn.sofifa.net/teams/113796/30.png\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nJun 6, 2021\nNaN\n2023\n190cm\n82kg\n€142K\n12.0\nNaN\n\n\n17658\n256624\n21 S. Czajor\n18\nhttps://cdn.sofifa.net/players/256/624/21_60.png\nPoland\nhttps://cdn.sofifa.net/flags/pl.png\n50\n65\nFleetwood Town\nhttps://cdn.sofifa.net/teams/112260/30.png\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nJan 1, 2020\nNaN\n2021\n187cm\n79kg\n€214K\n40.0\nNaN\n\n\n17659\n256376\n21 F. Jakobsson\n20\nhttps://cdn.sofifa.net/players/256/376/21_60.png\nSweden\nhttps://cdn.sofifa.net/flags/se.png\n50\n61\nIFK Norrköping\nhttps://cdn.sofifa.net/teams/702/30.png\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nJan 8, 2020\nNaN\n2021\n186cm\n78kg\n€131K\n30.0\nNaN\n\n\n\n\n17660 rows × 29 columns\n\n\n\n- 결측치제거\n\ndf.drop(columns=['Loaned From', 'Best Overall Rating']).dropna()\n\n\n\n\n\n\n\n\nID\nName\nAge\nPhoto\nNationality\nFlag\nOverall\nPotential\nClub\nClub Logo\n...\nWork Rate\nBody Type\nReal Face\nPosition\nJoined\nContract Valid Until\nHeight\nWeight\nRelease Clause\nKit Number\n\n\n\n\n0\n209658\nL. Goretzka\n27\nhttps://cdn.sofifa.net/players/209/658/23_60.png\nGermany\nhttps://cdn.sofifa.net/flags/de.png\n87\n88\nFC Bayern München\nhttps://cdn.sofifa.net/teams/21/30.png\n...\nHigh/ Medium\nUnique\nYes\n&lt;span class=\"pos pos28\"&gt;SUB\nJul 1, 2018\n2026\n189cm\n82kg\n€157M\n8.0\n\n\n1\n212198\nBruno Fernandes\n27\nhttps://cdn.sofifa.net/players/212/198/23_60.png\nPortugal\nhttps://cdn.sofifa.net/flags/pt.png\n86\n87\nManchester United\nhttps://cdn.sofifa.net/teams/11/30.png\n...\nHigh/ High\nUnique\nYes\n&lt;span class=\"pos pos15\"&gt;LCM\nJan 30, 2020\n2026\n179cm\n69kg\n€155M\n8.0\n\n\n2\n224334\nM. Acuña\n30\nhttps://cdn.sofifa.net/players/224/334/23_60.png\nArgentina\nhttps://cdn.sofifa.net/flags/ar.png\n85\n85\nSevilla FC\nhttps://cdn.sofifa.net/teams/481/30.png\n...\nHigh/ High\nStocky (170-185)\nNo\n&lt;span class=\"pos pos7\"&gt;LB\nSep 14, 2020\n2024\n172cm\n69kg\n€97.7M\n19.0\n\n\n3\n192985\nK. De Bruyne\n31\nhttps://cdn.sofifa.net/players/192/985/23_60.png\nBelgium\nhttps://cdn.sofifa.net/flags/be.png\n91\n91\nManchester City\nhttps://cdn.sofifa.net/teams/10/30.png\n...\nHigh/ High\nUnique\nYes\n&lt;span class=\"pos pos13\"&gt;RCM\nAug 30, 2015\n2025\n181cm\n70kg\n€198.9M\n17.0\n\n\n4\n224232\nN. Barella\n25\nhttps://cdn.sofifa.net/players/224/232/23_60.png\nItaly\nhttps://cdn.sofifa.net/flags/it.png\n86\n89\nInter\nhttps://cdn.sofifa.net/teams/44/30.png\n...\nHigh/ High\nNormal (170-)\nYes\n&lt;span class=\"pos pos13\"&gt;RCM\nSep 1, 2020\n2026\n172cm\n68kg\n€154.4M\n23.0\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n17655\n269526\nDeng Xiongtao\n19\nhttps://cdn.sofifa.net/players/269/526/23_60.png\nChina PR\nhttps://cdn.sofifa.net/flags/cn.png\n48\n61\nMeizhou Hakka\nhttps://cdn.sofifa.net/teams/114628/30.png\n...\nMedium/ Medium\nNormal (185+)\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nApr 11, 2022\n2027\n190cm\n78kg\n€218K\n35.0\n\n\n17656\n267946\n22 Lim Jun Sub\n17\nhttps://cdn.sofifa.net/players/267/946/22_60.png\nKorea Republic\nhttps://cdn.sofifa.net/flags/kr.png\n48\n64\nJeju United FC\nhttps://cdn.sofifa.net/teams/1478/30.png\n...\nMedium/ Medium\nLean (185+)\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nJan 1, 2022\n2026\n195cm\n84kg\n€188K\n21.0\n\n\n17657\n270567\nA. Demir\n25\nhttps://cdn.sofifa.net/players/270/567/23_60.png\nTurkey\nhttps://cdn.sofifa.net/flags/tr.png\n51\n56\nÜmraniyespor\nhttps://cdn.sofifa.net/teams/113796/30.png\n...\nMedium/ Medium\nLean (185+)\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nJun 6, 2021\n2023\n190cm\n82kg\n€142K\n12.0\n\n\n17658\n256624\n21 S. Czajor\n18\nhttps://cdn.sofifa.net/players/256/624/21_60.png\nPoland\nhttps://cdn.sofifa.net/flags/pl.png\n50\n65\nFleetwood Town\nhttps://cdn.sofifa.net/teams/112260/30.png\n...\nMedium/ Medium\nNormal (185+)\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nJan 1, 2020\n2021\n187cm\n79kg\n€214K\n40.0\n\n\n17659\n256376\n21 F. Jakobsson\n20\nhttps://cdn.sofifa.net/players/256/376/21_60.png\nSweden\nhttps://cdn.sofifa.net/flags/se.png\n50\n61\nIFK Norrköping\nhttps://cdn.sofifa.net/teams/702/30.png\n...\nMedium/ Medium\nNormal (185+)\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nJan 8, 2020\n2021\n186cm\n78kg\n€131K\n30.0\n\n\n\n\n16364 rows × 27 columns\n\n\n\n- Height, Weight의 자료형을 float형으로 수정하기\n\ndf.assign(\n    Height= list(map(lambda x: float(x[:-2]), df.Height)),\n    Weight= list(map(lambda x: float(x[:-2]), df.Weight))\n)\n\n\n\n\n\n\n\n\nID\nName\nAge\nPhoto\nNationality\nFlag\nOverall\nPotential\nClub\nClub Logo\n...\nReal Face\nPosition\nJoined\nLoaned From\nContract Valid Until\nHeight\nWeight\nRelease Clause\nKit Number\nBest Overall Rating\n\n\n\n\n0\n209658\nL. Goretzka\n27\nhttps://cdn.sofifa.net/players/209/658/23_60.png\nGermany\nhttps://cdn.sofifa.net/flags/de.png\n87\n88\nFC Bayern München\nhttps://cdn.sofifa.net/teams/21/30.png\n...\nYes\n&lt;span class=\"pos pos28\"&gt;SUB\nJul 1, 2018\nNaN\n2026\n189.0\n82.0\n€157M\n8.0\nNaN\n\n\n1\n212198\nBruno Fernandes\n27\nhttps://cdn.sofifa.net/players/212/198/23_60.png\nPortugal\nhttps://cdn.sofifa.net/flags/pt.png\n86\n87\nManchester United\nhttps://cdn.sofifa.net/teams/11/30.png\n...\nYes\n&lt;span class=\"pos pos15\"&gt;LCM\nJan 30, 2020\nNaN\n2026\n179.0\n69.0\n€155M\n8.0\nNaN\n\n\n2\n224334\nM. Acuña\n30\nhttps://cdn.sofifa.net/players/224/334/23_60.png\nArgentina\nhttps://cdn.sofifa.net/flags/ar.png\n85\n85\nSevilla FC\nhttps://cdn.sofifa.net/teams/481/30.png\n...\nNo\n&lt;span class=\"pos pos7\"&gt;LB\nSep 14, 2020\nNaN\n2024\n172.0\n69.0\n€97.7M\n19.0\nNaN\n\n\n3\n192985\nK. De Bruyne\n31\nhttps://cdn.sofifa.net/players/192/985/23_60.png\nBelgium\nhttps://cdn.sofifa.net/flags/be.png\n91\n91\nManchester City\nhttps://cdn.sofifa.net/teams/10/30.png\n...\nYes\n&lt;span class=\"pos pos13\"&gt;RCM\nAug 30, 2015\nNaN\n2025\n181.0\n70.0\n€198.9M\n17.0\nNaN\n\n\n4\n224232\nN. Barella\n25\nhttps://cdn.sofifa.net/players/224/232/23_60.png\nItaly\nhttps://cdn.sofifa.net/flags/it.png\n86\n89\nInter\nhttps://cdn.sofifa.net/teams/44/30.png\n...\nYes\n&lt;span class=\"pos pos13\"&gt;RCM\nSep 1, 2020\nNaN\n2026\n172.0\n68.0\n€154.4M\n23.0\nNaN\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n17655\n269526\nDeng Xiongtao\n19\nhttps://cdn.sofifa.net/players/269/526/23_60.png\nChina PR\nhttps://cdn.sofifa.net/flags/cn.png\n48\n61\nMeizhou Hakka\nhttps://cdn.sofifa.net/teams/114628/30.png\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nApr 11, 2022\nNaN\n2027\n190.0\n78.0\n€218K\n35.0\nNaN\n\n\n17656\n267946\n22 Lim Jun Sub\n17\nhttps://cdn.sofifa.net/players/267/946/22_60.png\nKorea Republic\nhttps://cdn.sofifa.net/flags/kr.png\n48\n64\nJeju United FC\nhttps://cdn.sofifa.net/teams/1478/30.png\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nJan 1, 2022\nNaN\n2026\n195.0\n84.0\n€188K\n21.0\nNaN\n\n\n17657\n270567\nA. Demir\n25\nhttps://cdn.sofifa.net/players/270/567/23_60.png\nTurkey\nhttps://cdn.sofifa.net/flags/tr.png\n51\n56\nÜmraniyespor\nhttps://cdn.sofifa.net/teams/113796/30.png\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nJun 6, 2021\nNaN\n2023\n190.0\n82.0\n€142K\n12.0\nNaN\n\n\n17658\n256624\n21 S. Czajor\n18\nhttps://cdn.sofifa.net/players/256/624/21_60.png\nPoland\nhttps://cdn.sofifa.net/flags/pl.png\n50\n65\nFleetwood Town\nhttps://cdn.sofifa.net/teams/112260/30.png\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nJan 1, 2020\nNaN\n2021\n187.0\n79.0\n€214K\n40.0\nNaN\n\n\n17659\n256376\n21 F. Jakobsson\n20\nhttps://cdn.sofifa.net/players/256/376/21_60.png\nSweden\nhttps://cdn.sofifa.net/flags/se.png\n50\n61\nIFK Norrköping\nhttps://cdn.sofifa.net/teams/702/30.png\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nJan 8, 2020\nNaN\n2021\n186.0\n78.0\n€131K\n30.0\nNaN\n\n\n\n\n17660 rows × 29 columns\n\n\n\n- Release Clause의 자료형을 float으로 수정하기\n\ndf['Release Clause']\n\n0          €157M\n1          €155M\n2         €97.7M\n3        €198.9M\n4        €154.4M\n          ...   \n17655      €218K\n17656      €188K\n17657      €142K\n17658      €214K\n17659      €131K\nName: Release Clause, Length: 17660, dtype: object\n\n\n\n_f = lambda x: float(x[1:-1])*1000 if x[-1]=='K' else float(x[1:-1])*1000000\n\n\n_f('€157M')\n\n157000000.0\n\n\n\n_f('€131K')\n\n131000.0\n\n\n(시도1–실패)\n\nlist(map(_f,df['Release Clause']))\n\nTypeError: 'float' object is not subscriptable\n\n\n(시도1이 실패한 이유)\n\ndf['Release Clause'].isna().sum() # 이 column에는 1151개의 결측치가 존재\n\n1151\n\n\n(nan에 대한 예비학습)\n\ndf.loc[df['Release Clause'].isna(), 'Release Clause']\n\n18       NaN\n34       NaN\n38       NaN\n49       NaN\n50       NaN\n        ... \n17378    NaN\n17386    NaN\n17535    NaN\n17590    NaN\n17618    NaN\nName: Release Clause, Length: 1151, dtype: object\n\n\n\ndf.loc[18, 'Release Clause']\n\nnan\n\n\n\npd.isna(df.loc[18, 'Release Clause'])\n\nTrue\n\n\n\ntype(df.loc[18, 'Release Clause'])\n\nfloat\n\n\n\ndf.loc[18, 'Release Clause'][-1]\n\nTypeError: 'float' object is not subscriptable\n\n\n(시도2–성공)\n\ndf.rename(columns={'Release Clause':'ReleaseClause'})\\\n.assign(ReleaseClause = list(map(lambda x: _f(x) if pd.isna(x)==False else x , df['Release Clause'])))\\\n.rename(columns={'ReleaseClause':'Release Clause'})\n\n\n\n\n\n\n\n\nID\nName\nAge\nPhoto\nNationality\nFlag\nOverall\nPotential\nClub\nClub Logo\n...\nReal Face\nPosition\nJoined\nLoaned From\nContract Valid Until\nHeight\nWeight\nRelease Clause\nKit Number\nBest Overall Rating\n\n\n\n\n0\n209658\nL. Goretzka\n27\nhttps://cdn.sofifa.net/players/209/658/23_60.png\nGermany\nhttps://cdn.sofifa.net/flags/de.png\n87\n88\nFC Bayern München\nhttps://cdn.sofifa.net/teams/21/30.png\n...\nYes\n&lt;span class=\"pos pos28\"&gt;SUB\nJul 1, 2018\nNaN\n2026\n189cm\n82kg\n157000000.0\n8.0\nNaN\n\n\n1\n212198\nBruno Fernandes\n27\nhttps://cdn.sofifa.net/players/212/198/23_60.png\nPortugal\nhttps://cdn.sofifa.net/flags/pt.png\n86\n87\nManchester United\nhttps://cdn.sofifa.net/teams/11/30.png\n...\nYes\n&lt;span class=\"pos pos15\"&gt;LCM\nJan 30, 2020\nNaN\n2026\n179cm\n69kg\n155000000.0\n8.0\nNaN\n\n\n2\n224334\nM. Acuña\n30\nhttps://cdn.sofifa.net/players/224/334/23_60.png\nArgentina\nhttps://cdn.sofifa.net/flags/ar.png\n85\n85\nSevilla FC\nhttps://cdn.sofifa.net/teams/481/30.png\n...\nNo\n&lt;span class=\"pos pos7\"&gt;LB\nSep 14, 2020\nNaN\n2024\n172cm\n69kg\n97700000.0\n19.0\nNaN\n\n\n3\n192985\nK. De Bruyne\n31\nhttps://cdn.sofifa.net/players/192/985/23_60.png\nBelgium\nhttps://cdn.sofifa.net/flags/be.png\n91\n91\nManchester City\nhttps://cdn.sofifa.net/teams/10/30.png\n...\nYes\n&lt;span class=\"pos pos13\"&gt;RCM\nAug 30, 2015\nNaN\n2025\n181cm\n70kg\n198900000.0\n17.0\nNaN\n\n\n4\n224232\nN. Barella\n25\nhttps://cdn.sofifa.net/players/224/232/23_60.png\nItaly\nhttps://cdn.sofifa.net/flags/it.png\n86\n89\nInter\nhttps://cdn.sofifa.net/teams/44/30.png\n...\nYes\n&lt;span class=\"pos pos13\"&gt;RCM\nSep 1, 2020\nNaN\n2026\n172cm\n68kg\n154400000.0\n23.0\nNaN\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n17655\n269526\nDeng Xiongtao\n19\nhttps://cdn.sofifa.net/players/269/526/23_60.png\nChina PR\nhttps://cdn.sofifa.net/flags/cn.png\n48\n61\nMeizhou Hakka\nhttps://cdn.sofifa.net/teams/114628/30.png\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nApr 11, 2022\nNaN\n2027\n190cm\n78kg\n218000.0\n35.0\nNaN\n\n\n17656\n267946\n22 Lim Jun Sub\n17\nhttps://cdn.sofifa.net/players/267/946/22_60.png\nKorea Republic\nhttps://cdn.sofifa.net/flags/kr.png\n48\n64\nJeju United FC\nhttps://cdn.sofifa.net/teams/1478/30.png\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nJan 1, 2022\nNaN\n2026\n195cm\n84kg\n188000.0\n21.0\nNaN\n\n\n17657\n270567\nA. Demir\n25\nhttps://cdn.sofifa.net/players/270/567/23_60.png\nTurkey\nhttps://cdn.sofifa.net/flags/tr.png\n51\n56\nÜmraniyespor\nhttps://cdn.sofifa.net/teams/113796/30.png\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nJun 6, 2021\nNaN\n2023\n190cm\n82kg\n142000.0\n12.0\nNaN\n\n\n17658\n256624\n21 S. Czajor\n18\nhttps://cdn.sofifa.net/players/256/624/21_60.png\nPoland\nhttps://cdn.sofifa.net/flags/pl.png\n50\n65\nFleetwood Town\nhttps://cdn.sofifa.net/teams/112260/30.png\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nJan 1, 2020\nNaN\n2021\n187cm\n79kg\n214000.0\n40.0\nNaN\n\n\n17659\n256376\n21 F. Jakobsson\n20\nhttps://cdn.sofifa.net/players/256/376/21_60.png\nSweden\nhttps://cdn.sofifa.net/flags/se.png\n50\n61\nIFK Norrköping\nhttps://cdn.sofifa.net/teams/702/30.png\n...\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nJan 8, 2020\nNaN\n2021\n186cm\n78kg\n131000.0\n30.0\nNaN\n\n\n\n\n17660 rows × 29 columns\n\n\n\n(시도3–성공) 그냥 결측치를 제거하고 변형해도 무방..\n\ndf2 = df.drop(columns=['Loaned From', 'Best Overall Rating']).dropna()\ndf2['Release Clause'] = list(map(lambda x: _f(x) if pd.isna(x)==False else x , df2['Release Clause']))\ndf2\n\n\n\n\n\n\n\n\nID\nName\nAge\nPhoto\nNationality\nFlag\nOverall\nPotential\nClub\nClub Logo\n...\nWork Rate\nBody Type\nReal Face\nPosition\nJoined\nContract Valid Until\nHeight\nWeight\nRelease Clause\nKit Number\n\n\n\n\n0\n209658\nL. Goretzka\n27\nhttps://cdn.sofifa.net/players/209/658/23_60.png\nGermany\nhttps://cdn.sofifa.net/flags/de.png\n87\n88\nFC Bayern München\nhttps://cdn.sofifa.net/teams/21/30.png\n...\nHigh/ Medium\nUnique\nYes\n&lt;span class=\"pos pos28\"&gt;SUB\nJul 1, 2018\n2026\n189cm\n82kg\n157000000.0\n8.0\n\n\n1\n212198\nBruno Fernandes\n27\nhttps://cdn.sofifa.net/players/212/198/23_60.png\nPortugal\nhttps://cdn.sofifa.net/flags/pt.png\n86\n87\nManchester United\nhttps://cdn.sofifa.net/teams/11/30.png\n...\nHigh/ High\nUnique\nYes\n&lt;span class=\"pos pos15\"&gt;LCM\nJan 30, 2020\n2026\n179cm\n69kg\n155000000.0\n8.0\n\n\n2\n224334\nM. Acuña\n30\nhttps://cdn.sofifa.net/players/224/334/23_60.png\nArgentina\nhttps://cdn.sofifa.net/flags/ar.png\n85\n85\nSevilla FC\nhttps://cdn.sofifa.net/teams/481/30.png\n...\nHigh/ High\nStocky (170-185)\nNo\n&lt;span class=\"pos pos7\"&gt;LB\nSep 14, 2020\n2024\n172cm\n69kg\n97700000.0\n19.0\n\n\n3\n192985\nK. De Bruyne\n31\nhttps://cdn.sofifa.net/players/192/985/23_60.png\nBelgium\nhttps://cdn.sofifa.net/flags/be.png\n91\n91\nManchester City\nhttps://cdn.sofifa.net/teams/10/30.png\n...\nHigh/ High\nUnique\nYes\n&lt;span class=\"pos pos13\"&gt;RCM\nAug 30, 2015\n2025\n181cm\n70kg\n198900000.0\n17.0\n\n\n4\n224232\nN. Barella\n25\nhttps://cdn.sofifa.net/players/224/232/23_60.png\nItaly\nhttps://cdn.sofifa.net/flags/it.png\n86\n89\nInter\nhttps://cdn.sofifa.net/teams/44/30.png\n...\nHigh/ High\nNormal (170-)\nYes\n&lt;span class=\"pos pos13\"&gt;RCM\nSep 1, 2020\n2026\n172cm\n68kg\n154400000.0\n23.0\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n17655\n269526\nDeng Xiongtao\n19\nhttps://cdn.sofifa.net/players/269/526/23_60.png\nChina PR\nhttps://cdn.sofifa.net/flags/cn.png\n48\n61\nMeizhou Hakka\nhttps://cdn.sofifa.net/teams/114628/30.png\n...\nMedium/ Medium\nNormal (185+)\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nApr 11, 2022\n2027\n190cm\n78kg\n218000.0\n35.0\n\n\n17656\n267946\n22 Lim Jun Sub\n17\nhttps://cdn.sofifa.net/players/267/946/22_60.png\nKorea Republic\nhttps://cdn.sofifa.net/flags/kr.png\n48\n64\nJeju United FC\nhttps://cdn.sofifa.net/teams/1478/30.png\n...\nMedium/ Medium\nLean (185+)\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nJan 1, 2022\n2026\n195cm\n84kg\n188000.0\n21.0\n\n\n17657\n270567\nA. Demir\n25\nhttps://cdn.sofifa.net/players/270/567/23_60.png\nTurkey\nhttps://cdn.sofifa.net/flags/tr.png\n51\n56\nÜmraniyespor\nhttps://cdn.sofifa.net/teams/113796/30.png\n...\nMedium/ Medium\nLean (185+)\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nJun 6, 2021\n2023\n190cm\n82kg\n142000.0\n12.0\n\n\n17658\n256624\n21 S. Czajor\n18\nhttps://cdn.sofifa.net/players/256/624/21_60.png\nPoland\nhttps://cdn.sofifa.net/flags/pl.png\n50\n65\nFleetwood Town\nhttps://cdn.sofifa.net/teams/112260/30.png\n...\nMedium/ Medium\nNormal (185+)\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nJan 1, 2020\n2021\n187cm\n79kg\n214000.0\n40.0\n\n\n17659\n256376\n21 F. Jakobsson\n20\nhttps://cdn.sofifa.net/players/256/376/21_60.png\nSweden\nhttps://cdn.sofifa.net/flags/se.png\n50\n61\nIFK Norrköping\nhttps://cdn.sofifa.net/teams/702/30.png\n...\nMedium/ Medium\nNormal (185+)\nNo\n&lt;span class=\"pos pos29\"&gt;RES\nJan 8, 2020\n2021\n186cm\n78kg\n131000.0\n30.0\n\n\n\n\n16364 rows × 27 columns\n\n\n\n\n분석의 편의를 위하여 (1) colnames를 변경하고 (2) 결측치를 제거하고 (3) 몇 가지 전 처리를 추가로 진행한 뒤 df2를 만들어서 분석하는게 좋음"
  },
  {
    "objectID": "posts/2022-10-24-8wk-12.html#데이터분석시각화",
    "href": "posts/2022-10-24-8wk-12.html#데이터분석시각화",
    "title": "08wk-1,2",
    "section": "데이터분석+시각화",
    "text": "데이터분석+시각화\n- Overall vs Potential\n\nggplot(data=df) + geom_point(aes(x='Overall',y='Potential'))\n\n\n\n\n\n\n\n\n\n뭔가 Potential &gt; Overall 인 관계가 성립하는 듯 하다. \\(\\to\\) 우리가 생각하는 포텐셜의 의미는 사실 Potential2 = Potential - Overall 에 더 가깝다. \\(\\to\\) Potential2 = Potential - Overall 인 변수를 새로 만들고 시각화 해보자.\n\n- Potential2 = Potential - Overall 를 계산하여 새로운 열을 추가하자.\n\ndf.eval('Potential2 = Potential - Overall')\n\n\n\n\n\n\n\n\nID\nName\nAge\nPhoto\nNationality\nFlag\nOverall\nPotential\nClub\nClub Logo\n...\nPosition\nJoined\nLoaned From\nContract Valid Until\nHeight\nWeight\nRelease Clause\nKit Number\nBest Overall Rating\nPotential2\n\n\n\n\n0\n209658\nL. Goretzka\n27\nhttps://cdn.sofifa.net/players/209/658/23_60.png\nGermany\nhttps://cdn.sofifa.net/flags/de.png\n87\n88\nFC Bayern München\nhttps://cdn.sofifa.net/teams/21/30.png\n...\n&lt;span class=\"pos pos28\"&gt;SUB\nJul 1, 2018\nNaN\n2026\n189cm\n82kg\n€157M\n8.0\nNaN\n1\n\n\n1\n212198\nBruno Fernandes\n27\nhttps://cdn.sofifa.net/players/212/198/23_60.png\nPortugal\nhttps://cdn.sofifa.net/flags/pt.png\n86\n87\nManchester United\nhttps://cdn.sofifa.net/teams/11/30.png\n...\n&lt;span class=\"pos pos15\"&gt;LCM\nJan 30, 2020\nNaN\n2026\n179cm\n69kg\n€155M\n8.0\nNaN\n1\n\n\n2\n224334\nM. Acuña\n30\nhttps://cdn.sofifa.net/players/224/334/23_60.png\nArgentina\nhttps://cdn.sofifa.net/flags/ar.png\n85\n85\nSevilla FC\nhttps://cdn.sofifa.net/teams/481/30.png\n...\n&lt;span class=\"pos pos7\"&gt;LB\nSep 14, 2020\nNaN\n2024\n172cm\n69kg\n€97.7M\n19.0\nNaN\n0\n\n\n3\n192985\nK. De Bruyne\n31\nhttps://cdn.sofifa.net/players/192/985/23_60.png\nBelgium\nhttps://cdn.sofifa.net/flags/be.png\n91\n91\nManchester City\nhttps://cdn.sofifa.net/teams/10/30.png\n...\n&lt;span class=\"pos pos13\"&gt;RCM\nAug 30, 2015\nNaN\n2025\n181cm\n70kg\n€198.9M\n17.0\nNaN\n0\n\n\n4\n224232\nN. Barella\n25\nhttps://cdn.sofifa.net/players/224/232/23_60.png\nItaly\nhttps://cdn.sofifa.net/flags/it.png\n86\n89\nInter\nhttps://cdn.sofifa.net/teams/44/30.png\n...\n&lt;span class=\"pos pos13\"&gt;RCM\nSep 1, 2020\nNaN\n2026\n172cm\n68kg\n€154.4M\n23.0\nNaN\n3\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n17655\n269526\nDeng Xiongtao\n19\nhttps://cdn.sofifa.net/players/269/526/23_60.png\nChina PR\nhttps://cdn.sofifa.net/flags/cn.png\n48\n61\nMeizhou Hakka\nhttps://cdn.sofifa.net/teams/114628/30.png\n...\n&lt;span class=\"pos pos29\"&gt;RES\nApr 11, 2022\nNaN\n2027\n190cm\n78kg\n€218K\n35.0\nNaN\n13\n\n\n17656\n267946\n22 Lim Jun Sub\n17\nhttps://cdn.sofifa.net/players/267/946/22_60.png\nKorea Republic\nhttps://cdn.sofifa.net/flags/kr.png\n48\n64\nJeju United FC\nhttps://cdn.sofifa.net/teams/1478/30.png\n...\n&lt;span class=\"pos pos29\"&gt;RES\nJan 1, 2022\nNaN\n2026\n195cm\n84kg\n€188K\n21.0\nNaN\n16\n\n\n17657\n270567\nA. Demir\n25\nhttps://cdn.sofifa.net/players/270/567/23_60.png\nTurkey\nhttps://cdn.sofifa.net/flags/tr.png\n51\n56\nÜmraniyespor\nhttps://cdn.sofifa.net/teams/113796/30.png\n...\n&lt;span class=\"pos pos29\"&gt;RES\nJun 6, 2021\nNaN\n2023\n190cm\n82kg\n€142K\n12.0\nNaN\n5\n\n\n17658\n256624\n21 S. Czajor\n18\nhttps://cdn.sofifa.net/players/256/624/21_60.png\nPoland\nhttps://cdn.sofifa.net/flags/pl.png\n50\n65\nFleetwood Town\nhttps://cdn.sofifa.net/teams/112260/30.png\n...\n&lt;span class=\"pos pos29\"&gt;RES\nJan 1, 2020\nNaN\n2021\n187cm\n79kg\n€214K\n40.0\nNaN\n15\n\n\n17659\n256376\n21 F. Jakobsson\n20\nhttps://cdn.sofifa.net/players/256/376/21_60.png\nSweden\nhttps://cdn.sofifa.net/flags/se.png\n50\n61\nIFK Norrköping\nhttps://cdn.sofifa.net/teams/702/30.png\n...\n&lt;span class=\"pos pos29\"&gt;RES\nJan 8, 2020\nNaN\n2021\n186cm\n78kg\n€131K\n30.0\nNaN\n11\n\n\n\n\n17660 rows × 30 columns\n\n\n\n- 수정된 데이터프레임으로 다시 시각화를 하자.\n\nggplot(data=df.eval('Potential2 = Potential - Overall'))\\\n+ geom_point(aes(x='Overall',y='Potential2'),alpha=0.01)\n\n\n\n\n\n\n\n\n- 일부점들이 겹치므로 position = ’jitter’를 사용하여 점들을 흩뿌리자.\n\nggplot(data=df.eval('Potential2 = Potential - Overall'))\\\n+ geom_point(aes(x='Overall',y='Potential2'),alpha=0.05,position='jitter')\n\n\n\n\n\n\n\n\n- 해석 - 해석1: Overall, Potential2는 음의 상관관계가 있다. - 해석2: 0근처에 데이터가 많음 \\(\\to\\) 이미 은퇴한 선수들이 아닐까? - 해석3: Overall의 값이 작을수록 Potential2의 분산이 크다.\n- 은퇴한 선수들은 제외하고 시각화하자.\n\nggplot(data=df.eval('Potential2 = Potential - Overall').query('Potential2 &gt; 1'))\\\n+ geom_point(aes(x='Overall',y='Potential2'),alpha=0.05,position='jitter')\n\n\n\n\n\n\n\n\n- Overall에 따라서 구간을 나누고 그 구간에 대응하는 boxplot을 그리자.\n\ndf.eval('Potential2 = Potential - Overall').query('Potential2 &gt; 1')\\\n.Overall.describe()\n\ncount    13644.000000\nmean        61.415347\nstd          7.247821\nmin         44.000000\n25%         56.000000\n50%         61.000000\n75%         66.000000\nmax         91.000000\nName: Overall, dtype: float64\n\n\n\ndef f(x):\n    if x&gt;66: \n        y='66&lt;'\n    elif x&gt;61:\n        y='61~66'\n    elif x&gt;56:\n        y='56~61'\n    else:\n        y='&lt;56' \n    return y\n\n\nggplot(data=df.eval('Potential2 = Potential - Overall').query('Potential2 &gt; 1')\\\n.assign(Overall_grouped= lambda df: list(map(f,df.Overall))))\\\n    + geom_boxplot(aes(x='Overall_grouped',y='Potential2',color='Overall_grouped'))\n\n\n\n\n\n\n\n\n\nOverall_grouped = “&lt;56” 에 대응하는 점들을 모두 뽑아서 mean(Overall)를 계산하고 그 값을 Overall_grouped = “&lt;56” 에 대응하는 박스플랏의 x축위치로 설정\nOverall_grouped = “56~61” 에 대응하는 점들을 모두 뽑아서 mean(Overall)를 계산하고 그 값을 Overall_grouped = “56~61” 에 대응하는 박스플랏의 x축위치로 설정\nOverall_grouped = “61~66” 에 대응하는 점들을 모두 뽑아서 mean(Overall)를 계산하고 그 값을 Overall_grouped = “61~66” 에 대응하는 박스플랏의 x축위치로 설정\nOverall_grouped = “66&lt;” 에 대응하는 점들을 모두 뽑아서 mean(Overall)를 계산하고 그 값을 Overall_grouped = “66&lt;” 에 대응하는 박스플랏의 x축위치로 설정\n\n\ndf.eval('Potential2 = Potential - Overall').query('Potential2 &gt; 1')\\\n.assign(Overall_grouped= lambda df: list(map(f,df.Overall)))\\\n.query(\"Overall_grouped == '66&lt;'\").Overall.mean()\n\n71.8127687727423\n\n\n(방법1)\n\ndef g(x):\n    if x=='66&lt;': \n        y= 71.8127687727423\n    elif x=='61~66':\n        y= 63.773918342474104\n    elif x=='56~61':\n        y= 59.155840684309005\n    else:\n        y= 52.87743190661479\n    return y\n\n\ndf.eval('Potential2 = Potential - Overall').query('Potential2 &gt; 1')\\\n.assign(Overall_grouped= lambda df: list(map(f,df.Overall)))\\\n.assign(Overall_x= lambda df: list(map(g,df.Overall_grouped)))\n\n\n\n\n\n\n\n\nID\nName\nAge\nPhoto\nNationality\nFlag\nOverall\nPotential\nClub\nClub Logo\n...\nLoaned From\nContract Valid Until\nHeight\nWeight\nRelease Clause\nKit Number\nBest Overall Rating\nPotential2\nOverall_grouped\nOverall_x\n\n\n\n\n4\n224232\nN. Barella\n25\nhttps://cdn.sofifa.net/players/224/232/23_60.png\nItaly\nhttps://cdn.sofifa.net/flags/it.png\n86\n89\nInter\nhttps://cdn.sofifa.net/teams/44/30.png\n...\nNaN\n2026\n172cm\n68kg\n€154.4M\n23.0\nNaN\n3\n66&lt;\n71.812769\n\n\n10\n228251\nL. Pellegrini\n26\nhttps://cdn.sofifa.net/players/228/251/23_60.png\nItaly\nhttps://cdn.sofifa.net/flags/it.png\n84\n87\nRoma\nhttps://cdn.sofifa.net/teams/52/30.png\n...\nNaN\n2026\n186cm\n77kg\n€97.6M\n7.0\nNaN\n3\n66&lt;\n71.812769\n\n\n13\n225193\nMerino\n26\nhttps://cdn.sofifa.net/players/225/193/23_60.png\nSpain\nhttps://cdn.sofifa.net/flags/es.png\n83\n86\nReal Sociedad\nhttps://cdn.sofifa.net/teams/457/30.png\n...\nNaN\n2025\n189cm\n83kg\n€102.2M\n8.0\nNaN\n3\n66&lt;\n71.812769\n\n\n17\n228702\nF. de Jong\n25\nhttps://cdn.sofifa.net/players/228/702/23_60.png\nNetherlands\nhttps://cdn.sofifa.net/flags/nl.png\n87\n92\nFC Barcelona\nhttps://cdn.sofifa.net/teams/241/30.png\n...\nNaN\n2026\n180cm\n74kg\n€247.6M\n21.0\nNaN\n5\n66&lt;\n71.812769\n\n\n21\n231281\nT. Alexander-Arnold\n23\nhttps://cdn.sofifa.net/players/231/281/23_60.png\nEngland\nhttps://cdn.sofifa.net/flags/gb-eng.png\n87\n90\nLiverpool\nhttps://cdn.sofifa.net/teams/9/30.png\n...\nNaN\n2025\n180cm\n69kg\n€193.5M\n66.0\nNaN\n3\n66&lt;\n71.812769\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n17655\n269526\nDeng Xiongtao\n19\nhttps://cdn.sofifa.net/players/269/526/23_60.png\nChina PR\nhttps://cdn.sofifa.net/flags/cn.png\n48\n61\nMeizhou Hakka\nhttps://cdn.sofifa.net/teams/114628/30.png\n...\nNaN\n2027\n190cm\n78kg\n€218K\n35.0\nNaN\n13\n&lt;56\n52.877432\n\n\n17656\n267946\n22 Lim Jun Sub\n17\nhttps://cdn.sofifa.net/players/267/946/22_60.png\nKorea Republic\nhttps://cdn.sofifa.net/flags/kr.png\n48\n64\nJeju United FC\nhttps://cdn.sofifa.net/teams/1478/30.png\n...\nNaN\n2026\n195cm\n84kg\n€188K\n21.0\nNaN\n16\n&lt;56\n52.877432\n\n\n17657\n270567\nA. Demir\n25\nhttps://cdn.sofifa.net/players/270/567/23_60.png\nTurkey\nhttps://cdn.sofifa.net/flags/tr.png\n51\n56\nÜmraniyespor\nhttps://cdn.sofifa.net/teams/113796/30.png\n...\nNaN\n2023\n190cm\n82kg\n€142K\n12.0\nNaN\n5\n&lt;56\n52.877432\n\n\n17658\n256624\n21 S. Czajor\n18\nhttps://cdn.sofifa.net/players/256/624/21_60.png\nPoland\nhttps://cdn.sofifa.net/flags/pl.png\n50\n65\nFleetwood Town\nhttps://cdn.sofifa.net/teams/112260/30.png\n...\nNaN\n2021\n187cm\n79kg\n€214K\n40.0\nNaN\n15\n&lt;56\n52.877432\n\n\n17659\n256376\n21 F. Jakobsson\n20\nhttps://cdn.sofifa.net/players/256/376/21_60.png\nSweden\nhttps://cdn.sofifa.net/flags/se.png\n50\n61\nIFK Norrköping\nhttps://cdn.sofifa.net/teams/702/30.png\n...\nNaN\n2021\n186cm\n78kg\n€131K\n30.0\nNaN\n11\n&lt;56\n52.877432\n\n\n\n\n13644 rows × 32 columns\n\n\n\n\ndf2= df.eval('Potential2 = Potential - Overall').query('Potential2 &gt; 1')\\\n.assign(Overall_grouped= lambda df: list(map(f,df.Overall)))\\\n.assign(Overall_x= lambda df: list(map(g,df.Overall_grouped)))\ndf2\n\n\n\n\n\n\n\n\nID\nName\nAge\nPhoto\nNationality\nFlag\nOverall\nPotential\nClub\nClub Logo\n...\nLoaned From\nContract Valid Until\nHeight\nWeight\nRelease Clause\nKit Number\nBest Overall Rating\nPotential2\nOverall_grouped\nOverall_x\n\n\n\n\n4\n224232\nN. Barella\n25\nhttps://cdn.sofifa.net/players/224/232/23_60.png\nItaly\nhttps://cdn.sofifa.net/flags/it.png\n86\n89\nInter\nhttps://cdn.sofifa.net/teams/44/30.png\n...\nNaN\n2026\n172cm\n68kg\n€154.4M\n23.0\nNaN\n3\n66&lt;\n71.812769\n\n\n10\n228251\nL. Pellegrini\n26\nhttps://cdn.sofifa.net/players/228/251/23_60.png\nItaly\nhttps://cdn.sofifa.net/flags/it.png\n84\n87\nRoma\nhttps://cdn.sofifa.net/teams/52/30.png\n...\nNaN\n2026\n186cm\n77kg\n€97.6M\n7.0\nNaN\n3\n66&lt;\n71.812769\n\n\n13\n225193\nMerino\n26\nhttps://cdn.sofifa.net/players/225/193/23_60.png\nSpain\nhttps://cdn.sofifa.net/flags/es.png\n83\n86\nReal Sociedad\nhttps://cdn.sofifa.net/teams/457/30.png\n...\nNaN\n2025\n189cm\n83kg\n€102.2M\n8.0\nNaN\n3\n66&lt;\n71.812769\n\n\n17\n228702\nF. de Jong\n25\nhttps://cdn.sofifa.net/players/228/702/23_60.png\nNetherlands\nhttps://cdn.sofifa.net/flags/nl.png\n87\n92\nFC Barcelona\nhttps://cdn.sofifa.net/teams/241/30.png\n...\nNaN\n2026\n180cm\n74kg\n€247.6M\n21.0\nNaN\n5\n66&lt;\n71.812769\n\n\n21\n231281\nT. Alexander-Arnold\n23\nhttps://cdn.sofifa.net/players/231/281/23_60.png\nEngland\nhttps://cdn.sofifa.net/flags/gb-eng.png\n87\n90\nLiverpool\nhttps://cdn.sofifa.net/teams/9/30.png\n...\nNaN\n2025\n180cm\n69kg\n€193.5M\n66.0\nNaN\n3\n66&lt;\n71.812769\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n17655\n269526\nDeng Xiongtao\n19\nhttps://cdn.sofifa.net/players/269/526/23_60.png\nChina PR\nhttps://cdn.sofifa.net/flags/cn.png\n48\n61\nMeizhou Hakka\nhttps://cdn.sofifa.net/teams/114628/30.png\n...\nNaN\n2027\n190cm\n78kg\n€218K\n35.0\nNaN\n13\n&lt;56\n52.877432\n\n\n17656\n267946\n22 Lim Jun Sub\n17\nhttps://cdn.sofifa.net/players/267/946/22_60.png\nKorea Republic\nhttps://cdn.sofifa.net/flags/kr.png\n48\n64\nJeju United FC\nhttps://cdn.sofifa.net/teams/1478/30.png\n...\nNaN\n2026\n195cm\n84kg\n€188K\n21.0\nNaN\n16\n&lt;56\n52.877432\n\n\n17657\n270567\nA. Demir\n25\nhttps://cdn.sofifa.net/players/270/567/23_60.png\nTurkey\nhttps://cdn.sofifa.net/flags/tr.png\n51\n56\nÜmraniyespor\nhttps://cdn.sofifa.net/teams/113796/30.png\n...\nNaN\n2023\n190cm\n82kg\n€142K\n12.0\nNaN\n5\n&lt;56\n52.877432\n\n\n17658\n256624\n21 S. Czajor\n18\nhttps://cdn.sofifa.net/players/256/624/21_60.png\nPoland\nhttps://cdn.sofifa.net/flags/pl.png\n50\n65\nFleetwood Town\nhttps://cdn.sofifa.net/teams/112260/30.png\n...\nNaN\n2021\n187cm\n79kg\n€214K\n40.0\nNaN\n15\n&lt;56\n52.877432\n\n\n17659\n256376\n21 F. Jakobsson\n20\nhttps://cdn.sofifa.net/players/256/376/21_60.png\nSweden\nhttps://cdn.sofifa.net/flags/se.png\n50\n61\nIFK Norrköping\nhttps://cdn.sofifa.net/teams/702/30.png\n...\nNaN\n2021\n186cm\n78kg\n€131K\n30.0\nNaN\n11\n&lt;56\n52.877432\n\n\n\n\n13644 rows × 32 columns\n\n\n\n\nggplot(data=df2)\\\n+geom_point(aes(x='Overall',y='Potential2',color='Overall_grouped'),position='jitter',alpha=0.05)\\\n+geom_boxplot(aes(x='Overall_x',y='Potential2',color='Overall_grouped'))\n\n\n\n\n\n\n\n\n(방법2)\n\n_df = df.eval('Potential2 = Potential - Overall').query('Potential2 &gt; 1')\\\n.assign(Overall_grouped= lambda df: list(map(f,df.Overall)))\n\n\ndf3=_df.groupby(by=\"Overall_grouped\").agg({'Overall':np.mean}).reset_index()\\\n.rename(columns={'Overall':'Overall_x'}).merge(_df)\n\n\nggplot(data=df3)\\\n+geom_point(aes(x='Overall',y='Potential2',color='Overall_grouped'),position='jitter',alpha=0.05)\\\n+geom_boxplot(aes(x='Overall_x',y='Potential2',color='Overall_grouped'))"
  },
  {
    "objectID": "posts/2022-10-24-8wk-12.html#flights-data",
    "href": "posts/2022-10-24-8wk-12.html#flights-data",
    "title": "08wk-1,2",
    "section": "flights data",
    "text": "flights data\n\ndf=pd.read_csv('https://raw.githubusercontent.com/PacktPublishing/Pandas-Cookbook/master/data/flights.csv')\ndf.info()\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 58492 entries, 0 to 58491\nData columns (total 14 columns):\n #   Column     Non-Null Count  Dtype  \n---  ------     --------------  -----  \n 0   MONTH      58492 non-null  int64  \n 1   DAY        58492 non-null  int64  \n 2   WEEKDAY    58492 non-null  int64  \n 3   AIRLINE    58492 non-null  object \n 4   ORG_AIR    58492 non-null  object \n 5   DEST_AIR   58492 non-null  object \n 6   SCHED_DEP  58492 non-null  int64  \n 7   DEP_DELAY  57659 non-null  float64\n 8   AIR_TIME   57474 non-null  float64\n 9   DIST       58492 non-null  int64  \n 10  SCHED_ARR  58492 non-null  int64  \n 11  ARR_DELAY  57474 non-null  float64\n 12  DIVERTED   58492 non-null  int64  \n 13  CANCELLED  58492 non-null  int64  \ndtypes: float64(3), int64(8), object(3)\nmemory usage: 6.2+ MB"
  },
  {
    "objectID": "posts/2022-10-24-8wk-12.html#get_groups",
    "href": "posts/2022-10-24-8wk-12.html#get_groups",
    "title": "08wk-1,2",
    "section": "get_groups",
    "text": "get_groups\n- groupby - 데이터프레임을 여러개의 서브데이터프레임으로 나누는 기슨 - 단독으로 쓸 이유는 별로 없다. \\(\\to\\) 그룹을 나누고 each 그룹마다 어떠한 “변수”에 “연산”을 하기 위함.\n\ndf.groupby(by=\"AIRLINE\")\n\n&lt;pandas.core.groupby.generic.DataFrameGroupBy object at 0x7fa7462529d0&gt;\n\n\n\n지금 이것이 항공사별로 데이터프레임이 나누어진 상태임\n\n- 진짜 sub dataframe 으로 나누어져 있는지 확인\n\ngrouped = df.groupby(by=\"AIRLINE\")\ngrouped.groups.keys()\n\ndict_keys(['AA', 'AS', 'B6', 'DL', 'EV', 'F9', 'HA', 'MQ', 'NK', 'OO', 'UA', 'US', 'VX', 'WN'])\n\n\n\ndisplay(grouped.get_group('AS'))\n\n\n\n\n\n\n\n\nMONTH\nDAY\nWEEKDAY\nAIRLINE\nORG_AIR\nDEST_AIR\nSCHED_DEP\nDEP_DELAY\nAIR_TIME\nDIST\nSCHED_ARR\nARR_DELAY\nDIVERTED\nCANCELLED\n\n\n\n\n38\n1\n1\n4\nAS\nPHX\nSEA\n1505\n-2.0\n155.0\n1107\n1702\n-3.0\n0\n0\n\n\n198\n1\n2\n5\nAS\nLAX\nSEA\n2110\n5.0\n145.0\n954\n2352\n8.0\n0\n0\n\n\n241\n1\n2\n5\nAS\nLAS\nPDX\n650\n-5.0\n117.0\n763\n906\n-3.0\n0\n0\n\n\n277\n1\n2\n5\nAS\nORD\nANC\n935\n-1.0\n402.0\n2846\n1339\n-6.0\n0\n0\n\n\n397\n1\n3\n6\nAS\nLAS\nSEA\n1300\n48.0\n137.0\n867\n1535\n47.0\n0\n0\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n58305\n12\n30\n3\nAS\nLAX\nSEA\n1325\n-2.0\n134.0\n954\n1608\n-7.0\n0\n0\n\n\n58355\n12\n31\n4\nAS\nPHX\nSEA\n1200\n-5.0\n145.0\n1107\n1407\n-24.0\n0\n0\n\n\n58404\n12\n31\n4\nAS\nSFO\nSLC\n2110\n-2.0\n80.0\n599\n2358\n-4.0\n0\n0\n\n\n58407\n12\n31\n4\nAS\nSFO\nPDX\n645\n-2.0\n81.0\n550\n832\n-3.0\n0\n0\n\n\n58428\n12\n31\n4\nAS\nLAX\nSEA\n1420\n-8.0\n127.0\n954\n1709\n-25.0\n0\n0\n\n\n\n\n768 rows × 14 columns\n\n\n\n\n#collapse_output\nfor key in grouped.groups.keys():\n    display(grouped.get_group(key))\n\n\n\n\n\n\n\n\nMONTH\nDAY\nWEEKDAY\nAIRLINE\nORG_AIR\nDEST_AIR\nSCHED_DEP\nDEP_DELAY\nAIR_TIME\nDIST\nSCHED_ARR\nARR_DELAY\nDIVERTED\nCANCELLED\n\n\n\n\n3\n1\n1\n4\nAA\nDFW\nDCA\n1555\n7.0\n126.0\n1192\n1935\n-7.0\n0\n0\n\n\n6\n1\n1\n4\nAA\nDFW\nMSY\n1250\n84.0\n64.0\n447\n1410\n83.0\n0\n0\n\n\n8\n1\n1\n4\nAA\nORD\nSTL\n1845\n-5.0\n44.0\n258\n1950\n-5.0\n0\n0\n\n\n15\n1\n1\n4\nAA\nDEN\nDFW\n1445\n-6.0\n93.0\n641\n1745\n4.0\n0\n0\n\n\n26\n1\n1\n4\nAA\nLAX\nAUS\n1430\n33.0\n157.0\n1242\n1925\n41.0\n0\n0\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n58470\n12\n31\n4\nAA\nDFW\nFAT\n1020\n-3.0\n196.0\n1313\n1156\n-2.0\n0\n0\n\n\n58475\n12\n31\n4\nAA\nIAH\nCLT\n710\n1.0\n113.0\n912\n1037\n-12.0\n0\n0\n\n\n58476\n12\n31\n4\nAA\nDFW\nTPA\n1020\n-3.0\n121.0\n929\n1340\n-6.0\n0\n0\n\n\n58479\n12\n31\n4\nAA\nDFW\nELP\n1200\n3.0\n94.0\n551\n1250\n13.0\n0\n0\n\n\n58487\n12\n31\n4\nAA\nSFO\nDFW\n515\n5.0\n166.0\n1464\n1045\n-19.0\n0\n0\n\n\n\n\n8900 rows × 14 columns\n\n\n\n\n\n\n\n\n\n\nMONTH\nDAY\nWEEKDAY\nAIRLINE\nORG_AIR\nDEST_AIR\nSCHED_DEP\nDEP_DELAY\nAIR_TIME\nDIST\nSCHED_ARR\nARR_DELAY\nDIVERTED\nCANCELLED\n\n\n\n\n38\n1\n1\n4\nAS\nPHX\nSEA\n1505\n-2.0\n155.0\n1107\n1702\n-3.0\n0\n0\n\n\n198\n1\n2\n5\nAS\nLAX\nSEA\n2110\n5.0\n145.0\n954\n2352\n8.0\n0\n0\n\n\n241\n1\n2\n5\nAS\nLAS\nPDX\n650\n-5.0\n117.0\n763\n906\n-3.0\n0\n0\n\n\n277\n1\n2\n5\nAS\nORD\nANC\n935\n-1.0\n402.0\n2846\n1339\n-6.0\n0\n0\n\n\n397\n1\n3\n6\nAS\nLAS\nSEA\n1300\n48.0\n137.0\n867\n1535\n47.0\n0\n0\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n58305\n12\n30\n3\nAS\nLAX\nSEA\n1325\n-2.0\n134.0\n954\n1608\n-7.0\n0\n0\n\n\n58355\n12\n31\n4\nAS\nPHX\nSEA\n1200\n-5.0\n145.0\n1107\n1407\n-24.0\n0\n0\n\n\n58404\n12\n31\n4\nAS\nSFO\nSLC\n2110\n-2.0\n80.0\n599\n2358\n-4.0\n0\n0\n\n\n58407\n12\n31\n4\nAS\nSFO\nPDX\n645\n-2.0\n81.0\n550\n832\n-3.0\n0\n0\n\n\n58428\n12\n31\n4\nAS\nLAX\nSEA\n1420\n-8.0\n127.0\n954\n1709\n-25.0\n0\n0\n\n\n\n\n768 rows × 14 columns\n\n\n\n\n\n\n\n\n\n\nMONTH\nDAY\nWEEKDAY\nAIRLINE\nORG_AIR\nDEST_AIR\nSCHED_DEP\nDEP_DELAY\nAIR_TIME\nDIST\nSCHED_ARR\nARR_DELAY\nDIVERTED\nCANCELLED\n\n\n\n\n123\n1\n1\n4\nB6\nLAS\nBOS\n1230\n0.0\n246.0\n2381\n2026\n-27.0\n0\n0\n\n\n127\n1\n1\n4\nB6\nLAS\nBOS\n2359\n68.0\n247.0\n2381\n749\n46.0\n0\n0\n\n\n239\n1\n2\n5\nB6\nORD\nBOS\n540\n-8.0\n96.0\n867\n856\n-22.0\n0\n0\n\n\n333\n1\n3\n6\nB6\nLAX\nFLL\n2237\n32.0\n270.0\n2342\n619\n42.0\n0\n0\n\n\n548\n1\n4\n7\nB6\nSFO\nFLL\n2307\n-4.0\n298.0\n2583\n724\n-1.0\n0\n0\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n58262\n12\n30\n3\nB6\nSFO\nLGB\n1921\n-6.0\n57.0\n354\n2038\n-14.0\n0\n0\n\n\n58301\n12\n30\n3\nB6\nLAX\nJFK\n630\n4.0\n285.0\n2475\n1445\n-6.0\n0\n0\n\n\n58425\n12\n31\n4\nB6\nORD\nSJU\n700\n239.0\n250.0\n2072\n1335\n239.0\n0\n0\n\n\n58477\n12\n31\n4\nB6\nDFW\nBOS\n1145\n12.0\n161.0\n1562\n1608\n-14.0\n0\n0\n\n\n58483\n12\n31\n4\nB6\nPHX\nBOS\n2236\n-12.0\n231.0\n2300\n515\n-45.0\n0\n0\n\n\n\n\n543 rows × 14 columns\n\n\n\n\n\n\n\n\n\n\nMONTH\nDAY\nWEEKDAY\nAIRLINE\nORG_AIR\nDEST_AIR\nSCHED_DEP\nDEP_DELAY\nAIR_TIME\nDIST\nSCHED_ARR\nARR_DELAY\nDIVERTED\nCANCELLED\n\n\n\n\n53\n1\n1\n4\nDL\nLAS\nMSP\n713\n-5.0\n156.0\n1299\n1220\n-18.0\n0\n0\n\n\n57\n1\n1\n4\nDL\nMSP\nRSW\n700\n-1.0\n169.0\n1416\n1130\n-20.0\n0\n0\n\n\n77\n1\n1\n4\nDL\nLAX\nATL\n1130\n24.0\n217.0\n1947\n1840\n16.0\n0\n0\n\n\n79\n1\n1\n4\nDL\nLAX\nCMH\n2146\n-3.0\n223.0\n1995\n459\n-13.0\n0\n0\n\n\n85\n1\n1\n4\nDL\nATL\nOKC\n2059\n-4.0\n116.0\n761\n2227\n-12.0\n0\n0\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n58440\n12\n31\n4\nDL\nATL\nCVG\n1611\n-4.0\n61.0\n373\n1736\n-6.0\n0\n0\n\n\n58448\n12\n31\n4\nDL\nATL\nSRQ\n1610\n0.0\n61.0\n444\n1740\n-13.0\n0\n0\n\n\n58464\n12\n31\n4\nDL\nLAX\nSFO\n700\n108.0\n54.0\n337\n825\n105.0\n0\n0\n\n\n58467\n12\n31\n4\nDL\nATL\nIND\n1235\n-3.0\n63.0\n432\n1407\n-13.0\n0\n0\n\n\n58485\n12\n31\n4\nDL\nATL\nCMH\n2206\n2.0\n64.0\n447\n2338\n-8.0\n0\n0\n\n\n\n\n10601 rows × 14 columns\n\n\n\n\n\n\n\n\n\n\nMONTH\nDAY\nWEEKDAY\nAIRLINE\nORG_AIR\nDEST_AIR\nSCHED_DEP\nDEP_DELAY\nAIR_TIME\nDIST\nSCHED_ARR\nARR_DELAY\nDIVERTED\nCANCELLED\n\n\n\n\n11\n1\n1\n4\nEV\nORD\nJAN\n1155\n6.0\n113.0\n677\n1403\n5.0\n0\n0\n\n\n13\n1\n1\n4\nEV\nORD\nCMH\n1010\n-2.0\n46.0\n296\n1228\n-9.0\n0\n0\n\n\n29\n1\n1\n4\nEV\nORD\nIND\n1025\n-6.0\n29.0\n177\n1228\n-19.0\n0\n0\n\n\n40\n1\n1\n4\nEV\nIAH\nCLE\n1038\n-3.0\n126.0\n1091\n1425\n-18.0\n0\n0\n\n\n69\n1\n1\n4\nEV\nATL\nRAP\n1930\n-5.0\n181.0\n1230\n2104\n-15.0\n0\n0\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n58445\n12\n31\n4\nEV\nDFW\nTXK\n850\n-5.0\n30.0\n181\n948\n-17.0\n0\n0\n\n\n58452\n12\n31\n4\nEV\nDFW\nSHV\n1650\n-4.0\n32.0\n190\n1746\n-12.0\n0\n0\n\n\n58459\n12\n31\n4\nEV\nMSP\nORD\n1435\n18.0\n61.0\n334\n1609\n3.0\n0\n0\n\n\n58463\n12\n31\n4\nEV\nORD\nMSN\n1220\n18.0\n32.0\n108\n1319\n27.0\n0\n0\n\n\n58486\n12\n31\n4\nEV\nDFW\nLFT\n850\n21.0\n52.0\n351\n1012\n14.0\n0\n0\n\n\n\n\n5858 rows × 14 columns\n\n\n\n\n\n\n\n\n\n\nMONTH\nDAY\nWEEKDAY\nAIRLINE\nORG_AIR\nDEST_AIR\nSCHED_DEP\nDEP_DELAY\nAIR_TIME\nDIST\nSCHED_ARR\nARR_DELAY\nDIVERTED\nCANCELLED\n\n\n\n\n7\n1\n1\n4\nF9\nSFO\nPHX\n1020\n-7.0\n91.0\n651\n1315\n-6.0\n0\n0\n\n\n93\n1\n1\n4\nF9\nATL\nDEN\n859\n16.0\n181.0\n1199\n1026\n10.0\n0\n0\n\n\n209\n1\n2\n5\nF9\nMSP\nDEN\n1025\n-6.0\n97.0\n680\n1134\n-13.0\n0\n0\n\n\n232\n1\n2\n5\nF9\nDEN\nPHX\n2040\n-7.0\n83.0\n602\n2228\n-18.0\n0\n0\n\n\n247\n1\n2\n5\nF9\nORD\nATL\n730\n10.0\n86.0\n606\n1020\n23.0\n0\n0\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n58288\n12\n30\n3\nF9\nDEN\nORD\n625\n-4.0\n136.0\n888\n1000\n14.0\n0\n0\n\n\n58331\n12\n30\n3\nF9\nORD\nPHX\n825\n18.0\n207.0\n1440\n1127\n14.0\n0\n0\n\n\n58447\n12\n31\n4\nF9\nDEN\nLAS\n1245\n13.0\n94.0\n628\n1340\n13.0\n0\n0\n\n\n58449\n12\n31\n4\nF9\nDEN\nMCO\n645\n11.0\n169.0\n1546\n1224\n-11.0\n0\n0\n\n\n58488\n12\n31\n4\nF9\nLAS\nSFO\n1910\n13.0\n71.0\n414\n2050\n4.0\n0\n0\n\n\n\n\n1317 rows × 14 columns\n\n\n\n\n\n\n\n\n\n\nMONTH\nDAY\nWEEKDAY\nAIRLINE\nORG_AIR\nDEST_AIR\nSCHED_DEP\nDEP_DELAY\nAIR_TIME\nDIST\nSCHED_ARR\nARR_DELAY\nDIVERTED\nCANCELLED\n\n\n\n\n582\n1\n4\n7\nHA\nLAX\nOGG\n1115\n-11.0\n310.0\n2486\n1500\n-27.0\n0\n0\n\n\n712\n1\n5\n1\nHA\nLAS\nHNL\n900\n-5.0\n357.0\n2762\n1315\n5.0\n0\n0\n\n\n878\n1\n6\n2\nHA\nPHX\nHNL\n800\n1.0\n374.0\n2917\n1140\n3.0\n0\n0\n\n\n1053\n1\n7\n3\nHA\nLAX\nHNL\n1705\n0.0\n332.0\n2556\n2055\n-2.0\n0\n0\n\n\n1269\n1\n8\n4\nHA\nLAX\nHNL\n1000\n-1.0\n335.0\n2556\n1350\n0.0\n0\n0\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n55883\n12\n16\n3\nHA\nLAX\nHNL\n835\n1.0\n314.0\n2556\n1235\n-18.0\n0\n0\n\n\n56174\n12\n18\n5\nHA\nLAX\nHNL\n835\n-5.0\n342.0\n2556\n1235\n-4.0\n0\n0\n\n\n56350\n12\n19\n6\nHA\nPHX\nHNL\n800\n-5.0\n363.0\n2917\n1155\n-34.0\n0\n0\n\n\n56816\n12\n21\n1\nHA\nLAX\nLIH\n740\n20.0\n303.0\n2615\n1145\n-11.0\n0\n0\n\n\n58391\n12\n31\n4\nHA\nLAX\nHNL\n1000\n0.0\n324.0\n2556\n1350\n-9.0\n0\n0\n\n\n\n\n112 rows × 14 columns\n\n\n\n\n\n\n\n\n\n\nMONTH\nDAY\nWEEKDAY\nAIRLINE\nORG_AIR\nDEST_AIR\nSCHED_DEP\nDEP_DELAY\nAIR_TIME\nDIST\nSCHED_ARR\nARR_DELAY\nDIVERTED\nCANCELLED\n\n\n\n\n2\n1\n1\n4\nMQ\nDFW\nVPS\n1305\n36.0\n85.0\n641\n1453\n35.0\n0\n0\n\n\n10\n1\n1\n4\nMQ\nDFW\nDRO\n1335\n28.0\n104.0\n674\n1438\n28.0\n0\n0\n\n\n18\n1\n1\n4\nMQ\nORD\nDAY\n2220\n19.0\n37.0\n240\n23\n20.0\n0\n0\n\n\n24\n1\n1\n4\nMQ\nDFW\nBTR\n730\nNaN\nNaN\n383\n853\nNaN\n0\n1\n\n\n50\n1\n1\n4\nMQ\nORD\nCID\n1135\n-7.0\n37.0\n196\n1238\n-15.0\n0\n0\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n58415\n12\n31\n4\nMQ\nORD\nFWA\n845\n-2.0\n37.0\n157\n1045\n-4.0\n0\n0\n\n\n58426\n12\n31\n4\nMQ\nDFW\nFAR\n1154\n4.0\n124.0\n968\n1437\n-13.0\n0\n0\n\n\n58468\n12\n31\n4\nMQ\nDFW\nOKC\n1720\n-3.0\n31.0\n175\n1819\n-10.0\n0\n0\n\n\n58474\n12\n31\n4\nMQ\nORD\nFNT\n829\n4.0\n40.0\n223\n1034\n-4.0\n0\n0\n\n\n58484\n12\n31\n4\nMQ\nORD\nDSM\n1333\n1.0\n57.0\n299\n1455\n-7.0\n0\n0\n\n\n\n\n3471 rows × 14 columns\n\n\n\n\n\n\n\n\n\n\nMONTH\nDAY\nWEEKDAY\nAIRLINE\nORG_AIR\nDEST_AIR\nSCHED_DEP\nDEP_DELAY\nAIR_TIME\nDIST\nSCHED_ARR\nARR_DELAY\nDIVERTED\nCANCELLED\n\n\n\n\n17\n1\n1\n4\nNK\nDEN\nDTW\n1952\n37.0\n124.0\n1123\n31\n54.0\n0\n0\n\n\n74\n1\n1\n4\nNK\nPHX\nDFW\n159\n-1.0\n103.0\n868\n502\n1.0\n0\n0\n\n\n95\n1\n1\n4\nNK\nLAS\nOAK\n1115\n22.0\n62.0\n407\n1246\n10.0\n0\n0\n\n\n109\n1\n1\n4\nNK\nMSP\nORD\n616\n2.0\n49.0\n334\n745\n-19.0\n0\n0\n\n\n166\n1\n2\n5\nNK\nLAS\nPDX\n1535\n-8.0\n123.0\n763\n1754\n-4.0\n0\n0\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n58160\n12\n29\n2\nNK\nMSP\nMCO\n740\n0.0\n171.0\n1310\n1158\n33.0\n0\n0\n\n\n58197\n12\n30\n3\nNK\nIAH\nORD\n755\n-8.0\n136.0\n925\n1030\n-2.0\n0\n0\n\n\n58437\n12\n31\n4\nNK\nORD\nDFW\n1952\n15.0\n135.0\n802\n2225\n23.0\n0\n0\n\n\n58461\n12\n31\n4\nNK\nORD\nLGA\n1801\n-5.0\n84.0\n733\n2109\n-26.0\n0\n0\n\n\n58469\n12\n31\n4\nNK\nLAS\nMSY\n1950\n124.0\n163.0\n1500\n112\n101.0\n0\n0\n\n\n\n\n1516 rows × 14 columns\n\n\n\n\n\n\n\n\n\n\nMONTH\nDAY\nWEEKDAY\nAIRLINE\nORG_AIR\nDEST_AIR\nSCHED_DEP\nDEP_DELAY\nAIR_TIME\nDIST\nSCHED_ARR\nARR_DELAY\nDIVERTED\nCANCELLED\n\n\n\n\n12\n1\n1\n4\nOO\nORD\nMSP\n1510\n2.0\n65.0\n334\n1646\n4.0\n0\n0\n\n\n16\n1\n1\n4\nOO\nDEN\nSGU\n1105\n21.0\n66.0\n517\n1249\n20.0\n0\n0\n\n\n22\n1\n1\n4\nOO\nLAS\nLAX\n1544\n-4.0\n39.0\n236\n1655\n-12.0\n0\n0\n\n\n25\n1\n1\n4\nOO\nORD\nSPI\n2110\n-4.0\n31.0\n174\n2205\n5.0\n0\n0\n\n\n27\n1\n1\n4\nOO\nIAH\nJAC\n1104\n-1.0\n161.0\n1265\n1316\n-1.0\n0\n0\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n58451\n12\n31\n4\nOO\nATL\nFWA\n1905\n-3.0\n72.0\n508\n2051\n-14.0\n0\n0\n\n\n58480\n12\n31\n4\nOO\nMSP\nBIS\n1310\n-2.0\n65.0\n386\n1449\n-9.0\n0\n0\n\n\n58482\n12\n31\n4\nOO\nDEN\nCPR\n1850\n-2.0\n38.0\n230\n1956\n1.0\n0\n0\n\n\n58489\n12\n31\n4\nOO\nSFO\nSBA\n1846\n-6.0\n46.0\n262\n1956\n-5.0\n0\n0\n\n\n58491\n12\n31\n4\nOO\nSFO\nBOI\n859\n5.0\n73.0\n522\n1146\n-1.0\n0\n0\n\n\n\n\n6588 rows × 14 columns\n\n\n\n\n\n\n\n\n\n\nMONTH\nDAY\nWEEKDAY\nAIRLINE\nORG_AIR\nDEST_AIR\nSCHED_DEP\nDEP_DELAY\nAIR_TIME\nDIST\nSCHED_ARR\nARR_DELAY\nDIVERTED\nCANCELLED\n\n\n\n\n1\n1\n1\n4\nUA\nDEN\nIAD\n823\n7.0\n154.0\n1452\n1333\n-13.0\n0\n0\n\n\n5\n1\n1\n4\nUA\nIAH\nSAN\n1450\n1.0\n178.0\n1303\n1620\n-14.0\n0\n0\n\n\n9\n1\n1\n4\nUA\nIAH\nSJC\n925\n3.0\n215.0\n1608\n1136\n-14.0\n0\n0\n\n\n14\n1\n1\n4\nUA\nIAH\nIND\n1426\n-1.0\n102.0\n844\n1742\n-20.0\n0\n0\n\n\n21\n1\n1\n4\nUA\nORD\nCLE\n2102\n48.0\n47.0\n315\n2320\n41.0\n0\n0\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n58422\n12\n31\n4\nUA\nDEN\nSAN\n1535\n0.0\n124.0\n853\n1704\n-13.0\n0\n0\n\n\n58432\n12\n31\n4\nUA\nORD\nSAN\n1915\n7.0\n238.0\n1723\n2143\n-3.0\n0\n0\n\n\n58457\n12\n31\n4\nUA\nORD\nLAX\n659\n-1.0\n241.0\n1744\n946\n0.0\n0\n0\n\n\n58460\n12\n31\n4\nUA\nSFO\nPHL\n2235\n-6.0\n265.0\n2521\n700\n-42.0\n0\n0\n\n\n58481\n12\n31\n4\nUA\nIAH\nLAX\n1433\n1.0\n197.0\n1379\n1625\n-13.0\n0\n0\n\n\n\n\n7792 rows × 14 columns\n\n\n\n\n\n\n\n\n\n\nMONTH\nDAY\nWEEKDAY\nAIRLINE\nORG_AIR\nDEST_AIR\nSCHED_DEP\nDEP_DELAY\nAIR_TIME\nDIST\nSCHED_ARR\nARR_DELAY\nDIVERTED\nCANCELLED\n\n\n\n\n31\n1\n1\n4\nUS\nPHX\nDEN\n1810\n29.0\n94.0\n602\n1954\n49.0\n0\n0\n\n\n35\n1\n1\n4\nUS\nORD\nPHL\n1600\n-2.0\n80.0\n678\n1857\n-9.0\n0\n0\n\n\n49\n1\n1\n4\nUS\nIAH\nPHX\n1445\n-1.0\n147.0\n1009\n1638\n-7.0\n0\n0\n\n\n96\n1\n1\n4\nUS\nATL\nPHL\n1445\n-4.0\n90.0\n666\n1644\n-11.0\n0\n0\n\n\n104\n1\n1\n4\nUS\nMSP\nPHX\n730\n-3.0\n174.0\n1276\n1010\n-20.0\n0\n0\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n31514\n6\n30\n2\nUS\nDEN\nPHL\n705\n-4.0\n188.0\n1558\n1240\n1.0\n0\n0\n\n\n31523\n6\n30\n2\nUS\nPHX\nDEN\n1451\n6.0\n85.0\n602\n1738\n7.0\n0\n0\n\n\n31535\n6\n30\n2\nUS\nPHX\nAUS\n840\n-3.0\n116.0\n872\n1304\n-11.0\n0\n0\n\n\n31561\n6\n30\n2\nUS\nORD\nPHX\n710\n-5.0\n170.0\n1440\n901\n-50.0\n0\n0\n\n\n31582\n6\n30\n2\nUS\nPHX\nOGG\n800\n-4.0\n356.0\n2845\n1127\n-13.0\n0\n0\n\n\n\n\n1615 rows × 14 columns\n\n\n\n\n\n\n\n\n\n\nMONTH\nDAY\nWEEKDAY\nAIRLINE\nORG_AIR\nDEST_AIR\nSCHED_DEP\nDEP_DELAY\nAIR_TIME\nDIST\nSCHED_ARR\nARR_DELAY\nDIVERTED\nCANCELLED\n\n\n\n\n56\n1\n1\n4\nVX\nLAS\nSFO\n900\n23.0\n65.0\n414\n1035\n11.0\n0\n0\n\n\n227\n1\n2\n5\nVX\nSFO\nLAS\n1220\n-5.0\n68.0\n414\n1350\n-5.0\n0\n0\n\n\n243\n1\n2\n5\nVX\nSFO\nSEA\n700\n-4.0\n104.0\n679\n905\n-1.0\n0\n0\n\n\n417\n1\n3\n6\nVX\nSFO\nLAS\n900\n-2.0\n62.0\n414\n1030\n-11.0\n0\n0\n\n\n432\n1\n3\n6\nVX\nSFO\nSEA\n2035\n-2.0\n106.0\n679\n2240\n-2.0\n0\n0\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n58332\n12\n30\n3\nVX\nSFO\nLAS\n1950\n-3.0\n58.0\n414\n2120\n-4.0\n0\n0\n\n\n58383\n12\n31\n4\nVX\nSFO\nPSP\n1630\n-7.0\n65.0\n421\n1755\n-12.0\n0\n0\n\n\n58400\n12\n31\n4\nVX\nSFO\nLAX\n1125\n-4.0\n54.0\n337\n1245\n-10.0\n0\n0\n\n\n58471\n12\n31\n4\nVX\nSFO\nLAX\n700\n6.0\n51.0\n337\n820\n3.0\n0\n0\n\n\n58478\n12\n31\n4\nVX\nSFO\nLAX\n1530\n29.0\n52.0\n337\n1650\n22.0\n0\n0\n\n\n\n\n993 rows × 14 columns\n\n\n\n\n\n\n\n\n\n\nMONTH\nDAY\nWEEKDAY\nAIRLINE\nORG_AIR\nDEST_AIR\nSCHED_DEP\nDEP_DELAY\nAIR_TIME\nDIST\nSCHED_ARR\nARR_DELAY\nDIVERTED\nCANCELLED\n\n\n\n\n0\n1\n1\n4\nWN\nLAX\nSLC\n1625\n58.0\n94.0\n590\n1905\n65.0\n0\n0\n\n\n4\n1\n1\n4\nWN\nLAX\nMCI\n1720\n48.0\n166.0\n1363\n2225\n39.0\n0\n0\n\n\n19\n1\n1\n4\nWN\nPHX\nLAX\n1640\n51.0\n58.0\n370\n1700\n59.0\n0\n0\n\n\n20\n1\n1\n4\nWN\nATL\nBWI\n1115\n1.0\n76.0\n577\n1305\n-15.0\n0\n0\n\n\n23\n1\n1\n4\nWN\nATL\nHOU\n1555\n30.0\n113.0\n696\n1720\n18.0\n0\n0\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n58455\n12\n31\n4\nWN\nLAX\nSMF\n1420\n-2.0\n64.0\n373\n1540\n-7.0\n0\n0\n\n\n58458\n12\n31\n4\nWN\nLAS\nSFO\n1825\n25.0\n67.0\n414\n1955\n17.0\n0\n0\n\n\n58472\n12\n31\n4\nWN\nPHX\nHOU\n845\n5.0\n119.0\n1020\n1210\n7.0\n0\n0\n\n\n58473\n12\n31\n4\nWN\nDEN\nPDX\n1205\n4.0\n130.0\n991\n1400\n-13.0\n0\n0\n\n\n58490\n12\n31\n4\nWN\nMSP\nATL\n525\n39.0\n124.0\n907\n855\n34.0\n0\n0\n\n\n\n\n8418 rows × 14 columns"
  },
  {
    "objectID": "posts/2022-10-24-8wk-12.html#범주형변수를-기준으로-groupby---agg",
    "href": "posts/2022-10-24-8wk-12.html#범주형변수를-기준으로-groupby---agg",
    "title": "08wk-1,2",
    "section": "범주형변수를 기준으로 groupby -> agg",
    "text": "범주형변수를 기준으로 groupby -&gt; agg\n\n# EX1: [AIRLINE] \\(\\to\\) {ARR_DELAY:mean}\n- 방법1: grouby() \\(\\to\\) .agg({colname: function})\n(예시1)\n\ndf.groupby(by=\"AIRLINE\").agg({'ARR_DELAY':np.mean})\n\n\n\n\n\n\n\n\nARR_DELAY\n\n\nAIRLINE\n\n\n\n\n\nAA\n5.542661\n\n\nAS\n-0.833333\n\n\nB6\n8.692593\n\n\nDL\n0.339691\n\n\nEV\n7.034580\n\n\nF9\n13.630651\n\n\nHA\n4.972973\n\n\nMQ\n6.860591\n\n\nNK\n18.436070\n\n\nOO\n7.593463\n\n\nUA\n7.765755\n\n\nUS\n1.681105\n\n\nVX\n5.348884\n\n\nWN\n6.397353\n\n\n\n\n\n\n\n(예시2)\n\ndf.groupby(by=\"AIRLINE\").agg({'ARR_DELAY':'mean'})\n\n\n\n\n\n\n\n\nARR_DELAY\n\n\nAIRLINE\n\n\n\n\n\nAA\n5.542661\n\n\nAS\n-0.833333\n\n\nB6\n8.692593\n\n\nDL\n0.339691\n\n\nEV\n7.034580\n\n\nF9\n13.630651\n\n\nHA\n4.972973\n\n\nMQ\n6.860591\n\n\nNK\n18.436070\n\n\nOO\n7.593463\n\n\nUA\n7.765755\n\n\nUS\n1.681105\n\n\nVX\n5.348884\n\n\nWN\n6.397353\n\n\n\n\n\n\n\n- 방법2: grouby() \\(\\to\\) key로 column선택 \\(\\to\\) .agg(f) or .f()\n(예시1)\n\ndf.groupby(by='AIRLINE')['ARR_DELAY'].agg(np.mean)\n\nAIRLINE\nAA     5.542661\nAS    -0.833333\nB6     8.692593\nDL     0.339691\nEV     7.034580\nF9    13.630651\nHA     4.972973\nMQ     6.860591\nNK    18.436070\nOO     7.593463\nUA     7.765755\nUS     1.681105\nVX     5.348884\nWN     6.397353\nName: ARR_DELAY, dtype: float64\n\n\n(예시2)\n\ndf.groupby(by='AIRLINE')['ARR_DELAY'].agg(\"mean\")\n\nAIRLINE\nAA     5.542661\nAS    -0.833333\nB6     8.692593\nDL     0.339691\nEV     7.034580\nF9    13.630651\nHA     4.972973\nMQ     6.860591\nNK    18.436070\nOO     7.593463\nUA     7.765755\nUS     1.681105\nVX     5.348884\nWN     6.397353\nName: ARR_DELAY, dtype: float64\n\n\n(예시3)\n\ndf.groupby(by='AIRLINE')['ARR_DELAY'].mean()\n\nAIRLINE\nAA     5.542661\nAS    -0.833333\nB6     8.692593\nDL     0.339691\nEV     7.034580\nF9    13.630651\nHA     4.972973\nMQ     6.860591\nNK    18.436070\nOO     7.593463\nUA     7.765755\nUS     1.681105\nVX     5.348884\nWN     6.397353\nName: ARR_DELAY, dtype: float64\n\n\n\n\n# EX2: [AIRLINE,WEEKDAY] \\(\\to\\) {CANCELLED:sum}\n- 방법1\n(예시1)\n\ndf.groupby(by=[\"AIRLINE\",\"WEEKDAY\"]).agg({\"CANCELLED\":np.sum})\n\n\n\n\n\n\n\n\n\nCANCELLED\n\n\nAIRLINE\nWEEKDAY\n\n\n\n\n\nAA\n1\n41\n\n\n2\n9\n\n\n3\n16\n\n\n4\n20\n\n\n5\n18\n\n\n...\n...\n...\n\n\nWN\n3\n18\n\n\n4\n10\n\n\n5\n7\n\n\n6\n10\n\n\n7\n7\n\n\n\n\n98 rows × 1 columns\n\n\n\n(예시2)\n\ndf.groupby(by=[\"AIRLINE\",\"WEEKDAY\"]).agg({\"CANCELLED\":\"sum\"})\n\n\n\n\n\n\n\n\n\nCANCELLED\n\n\nAIRLINE\nWEEKDAY\n\n\n\n\n\nAA\n1\n41\n\n\n2\n9\n\n\n3\n16\n\n\n4\n20\n\n\n5\n18\n\n\n...\n...\n...\n\n\nWN\n3\n18\n\n\n4\n10\n\n\n5\n7\n\n\n6\n10\n\n\n7\n7\n\n\n\n\n98 rows × 1 columns\n\n\n\n- 방법2\n(예시1)\n\ndf.groupby(by=[\"AIRLINE\",\"WEEKDAY\"])[[\"CANCELLED\"]].agg(np.sum)\n\n\n\n\n\n\n\n\n\nCANCELLED\n\n\nAIRLINE\nWEEKDAY\n\n\n\n\n\nAA\n1\n41\n\n\n2\n9\n\n\n3\n16\n\n\n4\n20\n\n\n5\n18\n\n\n...\n...\n...\n\n\nWN\n3\n18\n\n\n4\n10\n\n\n5\n7\n\n\n6\n10\n\n\n7\n7\n\n\n\n\n98 rows × 1 columns\n\n\n\n(예시2)\n\ndf.groupby(by=[\"AIRLINE\",\"WEEKDAY\"])[\"CANCELLED\"].agg(\"sum\")\n\nAIRLINE  WEEKDAY\nAA       1          41\n         2           9\n         3          16\n         4          20\n         5          18\n                    ..\nWN       3          18\n         4          10\n         5           7\n         6          10\n         7           7\nName: CANCELLED, Length: 98, dtype: int64\n\n\n(예시3)\n\ndf.groupby(by=[\"AIRLINE\",\"WEEKDAY\"])[\"CANCELLED\"].sum()\n\nAIRLINE  WEEKDAY\nAA       1          41\n         2           9\n         3          16\n         4          20\n         5          18\n                    ..\nWN       3          18\n         4          10\n         5           7\n         6          10\n         7           7\nName: CANCELLED, Length: 98, dtype: int64\n\n\n\ndf.DIVERTED\n\n0        0\n1        0\n2        0\n3        0\n4        0\n        ..\n58487    0\n58488    0\n58489    0\n58490    0\n58491    0\nName: DIVERTED, Length: 58492, dtype: int64\n\n\n\n\n# EX3: [AIRLINE,WEEKDAY] \\(\\to\\) {CANCELLED:sum,mean}, {DIVERTED: sum,mean}\n- 방법1\n(예시1)\n\ndf.groupby([\"AIRLINE\",\"WEEKDAY\"])\\\n.agg({\"CANCELLED\":[np.sum,np.mean],\"DIVERTED\":[np.sum,np.mean]})\n\n\n\n\n\n\n\n\n\nCANCELLED\nDIVERTED\n\n\n\n\nsum\nmean\nsum\nmean\n\n\nAIRLINE\nWEEKDAY\n\n\n\n\n\n\n\n\nAA\n1\n41\n0.032106\n6\n0.004699\n\n\n2\n9\n0.007341\n2\n0.001631\n\n\n3\n16\n0.011949\n2\n0.001494\n\n\n4\n20\n0.015004\n5\n0.003751\n\n\n5\n18\n0.014151\n1\n0.000786\n\n\n...\n...\n...\n...\n...\n...\n\n\nWN\n3\n18\n0.014118\n2\n0.001569\n\n\n4\n10\n0.007911\n4\n0.003165\n\n\n5\n7\n0.005828\n0\n0.000000\n\n\n6\n10\n0.010132\n3\n0.003040\n\n\n7\n7\n0.006066\n3\n0.002600\n\n\n\n\n98 rows × 4 columns\n\n\n\n(예시2)\n\ndf.groupby([\"AIRLINE\",\"WEEKDAY\"])\\\n.agg({\"CANCELLED\":[\"sum\",\"mean\"],\"DIVERTED\":[\"sum\",\"mean\"]})\n\n\n\n\n\n\n\n\n\nCANCELLED\nDIVERTED\n\n\n\n\nsum\nmean\nsum\nmean\n\n\nAIRLINE\nWEEKDAY\n\n\n\n\n\n\n\n\nAA\n1\n41\n0.032106\n6\n0.004699\n\n\n2\n9\n0.007341\n2\n0.001631\n\n\n3\n16\n0.011949\n2\n0.001494\n\n\n4\n20\n0.015004\n5\n0.003751\n\n\n5\n18\n0.014151\n1\n0.000786\n\n\n...\n...\n...\n...\n...\n...\n\n\nWN\n3\n18\n0.014118\n2\n0.001569\n\n\n4\n10\n0.007911\n4\n0.003165\n\n\n5\n7\n0.005828\n0\n0.000000\n\n\n6\n10\n0.010132\n3\n0.003040\n\n\n7\n7\n0.006066\n3\n0.002600\n\n\n\n\n98 rows × 4 columns\n\n\n\n- 방법2\n(예시1)\n\ndf.groupby([\"AIRLINE\",\"WEEKDAY\"])[[\"CANCELLED\",\"DIVERTED\"]]\\\n.agg([np.sum,np.mean])\n\n\n\n\n\n\n\n\n\nCANCELLED\nDIVERTED\n\n\n\n\nsum\nmean\nsum\nmean\n\n\nAIRLINE\nWEEKDAY\n\n\n\n\n\n\n\n\nAA\n1\n41\n0.032106\n6\n0.004699\n\n\n2\n9\n0.007341\n2\n0.001631\n\n\n3\n16\n0.011949\n2\n0.001494\n\n\n4\n20\n0.015004\n5\n0.003751\n\n\n5\n18\n0.014151\n1\n0.000786\n\n\n...\n...\n...\n...\n...\n...\n\n\nWN\n3\n18\n0.014118\n2\n0.001569\n\n\n4\n10\n0.007911\n4\n0.003165\n\n\n5\n7\n0.005828\n0\n0.000000\n\n\n6\n10\n0.010132\n3\n0.003040\n\n\n7\n7\n0.006066\n3\n0.002600\n\n\n\n\n98 rows × 4 columns\n\n\n\n(예시2)\n\ndf.groupby([\"AIRLINE\",\"WEEKDAY\"])[[\"CANCELLED\",\"DIVERTED\"]]\\\n.agg([\"sum\",\"mean\"])\n\n\n\n\n\n\n\n\n\nCANCELLED\nDIVERTED\n\n\n\n\nsum\nmean\nsum\nmean\n\n\nAIRLINE\nWEEKDAY\n\n\n\n\n\n\n\n\nAA\n1\n41\n0.032106\n6\n0.004699\n\n\n2\n9\n0.007341\n2\n0.001631\n\n\n3\n16\n0.011949\n2\n0.001494\n\n\n4\n20\n0.015004\n5\n0.003751\n\n\n5\n18\n0.014151\n1\n0.000786\n\n\n...\n...\n...\n...\n...\n...\n\n\nWN\n3\n18\n0.014118\n2\n0.001569\n\n\n4\n10\n0.007911\n4\n0.003165\n\n\n5\n7\n0.005828\n0\n0.000000\n\n\n6\n10\n0.010132\n3\n0.003040\n\n\n7\n7\n0.006066\n3\n0.002600\n\n\n\n\n98 rows × 4 columns\n\n\n\n(예시3) – 사용불가능\n\n\n# EX4: [AIRLINE,WEEKDAY] \\(\\to\\) {CANCELLED:sum,mean,count}, {AIR_TIME: mean,var}\n- 방법1\n(예시1)\n\ndf.groupby([\"AIRLINE\",\"WEEKDAY\"])\\\n.agg({'CANCELLED':[np.sum,np.mean,len],'AIR_TIME':[np.mean,np.var]})\n\n\n\n\n\n\n\n\n\nCANCELLED\nAIR_TIME\n\n\n\n\nsum\nmean\nlen\nmean\nvar\n\n\nAIRLINE\nWEEKDAY\n\n\n\n\n\n\n\n\n\nAA\n1\n41\n0.032106\n1277\n147.610569\n5393.806723\n\n\n2\n9\n0.007341\n1226\n143.851852\n5359.890719\n\n\n3\n16\n0.011949\n1339\n144.514005\n5378.854539\n\n\n4\n20\n0.015004\n1333\n141.124618\n4791.524627\n\n\n5\n18\n0.014151\n1272\n145.430966\n5884.592076\n\n\n...\n...\n...\n...\n...\n...\n...\n\n\nWN\n3\n18\n0.014118\n1275\n104.219920\n2901.873447\n\n\n4\n10\n0.007911\n1264\n107.200800\n2966.568935\n\n\n5\n7\n0.005828\n1201\n107.893635\n3268.717093\n\n\n6\n10\n0.010132\n987\n109.247433\n3152.753719\n\n\n7\n7\n0.006066\n1154\n107.602273\n3183.126889\n\n\n\n\n98 rows × 5 columns\n\n\n\n(예시2)\n\ndf.groupby([\"AIRLINE\",\"WEEKDAY\"])\\\n.agg({'CANCELLED':[\"sum\",\"mean\",\"count\"],'AIR_TIME':[\"mean\",\"var\"]})\n\n\n\n\n\n\n\n\n\nCANCELLED\nAIR_TIME\n\n\n\n\nsum\nmean\ncount\nmean\nvar\n\n\nAIRLINE\nWEEKDAY\n\n\n\n\n\n\n\n\n\nAA\n1\n41\n0.032106\n1277\n147.610569\n5393.806723\n\n\n2\n9\n0.007341\n1226\n143.851852\n5359.890719\n\n\n3\n16\n0.011949\n1339\n144.514005\n5378.854539\n\n\n4\n20\n0.015004\n1333\n141.124618\n4791.524627\n\n\n5\n18\n0.014151\n1272\n145.430966\n5884.592076\n\n\n...\n...\n...\n...\n...\n...\n...\n\n\nWN\n3\n18\n0.014118\n1275\n104.219920\n2901.873447\n\n\n4\n10\n0.007911\n1264\n107.200800\n2966.568935\n\n\n5\n7\n0.005828\n1201\n107.893635\n3268.717093\n\n\n6\n10\n0.010132\n987\n109.247433\n3152.753719\n\n\n7\n7\n0.006066\n1154\n107.602273\n3183.126889\n\n\n\n\n98 rows × 5 columns\n\n\n\n(사용자정의함수)\n\ndf.groupby([\"AIRLINE\",\"WEEKDAY\"])\\\n.agg({'CANCELLED':[np.sum,np.mean,len],\n      'AIR_TIME':[np.mean,lambda x: np.std(x,ddof=1)**2]})\n\n\n\n\n\n\n\n\n\nCANCELLED\nAIR_TIME\n\n\n\n\nsum\nmean\nlen\nmean\n&lt;lambda_0&gt;\n\n\nAIRLINE\nWEEKDAY\n\n\n\n\n\n\n\n\n\nAA\n1\n41\n0.032106\n1277\n147.610569\n5393.806723\n\n\n2\n9\n0.007341\n1226\n143.851852\n5359.890719\n\n\n3\n16\n0.011949\n1339\n144.514005\n5378.854539\n\n\n4\n20\n0.015004\n1333\n141.124618\n4791.524627\n\n\n5\n18\n0.014151\n1272\n145.430966\n5884.592076\n\n\n...\n...\n...\n...\n...\n...\n...\n\n\nWN\n3\n18\n0.014118\n1275\n104.219920\n2901.873447\n\n\n4\n10\n0.007911\n1264\n107.200800\n2966.568935\n\n\n5\n7\n0.005828\n1201\n107.893635\n3268.717093\n\n\n6\n10\n0.010132\n987\n109.247433\n3152.753719\n\n\n7\n7\n0.006066\n1154\n107.602273\n3183.126889\n\n\n\n\n98 rows × 5 columns"
  },
  {
    "objectID": "posts/2022-10-24-8wk-12.html#연속형변수를-기준으로-groupby---agg",
    "href": "posts/2022-10-24-8wk-12.html#연속형변수를-기준으로-groupby---agg",
    "title": "08wk-1,2",
    "section": "연속형변수를 기준으로 groupby -> agg",
    "text": "연속형변수를 기준으로 groupby -&gt; agg\n\ndf.T\n\n\n\n\n\n\n\n\n0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n...\n58482\n58483\n58484\n58485\n58486\n58487\n58488\n58489\n58490\n58491\n\n\n\n\nMONTH\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n...\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n\n\nDAY\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n...\n31\n31\n31\n31\n31\n31\n31\n31\n31\n31\n\n\nWEEKDAY\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n...\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n\n\nAIRLINE\nWN\nUA\nMQ\nAA\nWN\nUA\nAA\nF9\nAA\nUA\n...\nOO\nB6\nMQ\nDL\nEV\nAA\nF9\nOO\nWN\nOO\n\n\nORG_AIR\nLAX\nDEN\nDFW\nDFW\nLAX\nIAH\nDFW\nSFO\nORD\nIAH\n...\nDEN\nPHX\nORD\nATL\nDFW\nSFO\nLAS\nSFO\nMSP\nSFO\n\n\nDEST_AIR\nSLC\nIAD\nVPS\nDCA\nMCI\nSAN\nMSY\nPHX\nSTL\nSJC\n...\nCPR\nBOS\nDSM\nCMH\nLFT\nDFW\nSFO\nSBA\nATL\nBOI\n\n\nSCHED_DEP\n1625\n823\n1305\n1555\n1720\n1450\n1250\n1020\n1845\n925\n...\n1850\n2236\n1333\n2206\n850\n515\n1910\n1846\n525\n859\n\n\nDEP_DELAY\n58.0\n7.0\n36.0\n7.0\n48.0\n1.0\n84.0\n-7.0\n-5.0\n3.0\n...\n-2.0\n-12.0\n1.0\n2.0\n21.0\n5.0\n13.0\n-6.0\n39.0\n5.0\n\n\nAIR_TIME\n94.0\n154.0\n85.0\n126.0\n166.0\n178.0\n64.0\n91.0\n44.0\n215.0\n...\n38.0\n231.0\n57.0\n64.0\n52.0\n166.0\n71.0\n46.0\n124.0\n73.0\n\n\nDIST\n590\n1452\n641\n1192\n1363\n1303\n447\n651\n258\n1608\n...\n230\n2300\n299\n447\n351\n1464\n414\n262\n907\n522\n\n\nSCHED_ARR\n1905\n1333\n1453\n1935\n2225\n1620\n1410\n1315\n1950\n1136\n...\n1956\n515\n1455\n2338\n1012\n1045\n2050\n1956\n855\n1146\n\n\nARR_DELAY\n65.0\n-13.0\n35.0\n-7.0\n39.0\n-14.0\n83.0\n-6.0\n-5.0\n-14.0\n...\n1.0\n-45.0\n-7.0\n-8.0\n14.0\n-19.0\n4.0\n-5.0\n34.0\n-1.0\n\n\nDIVERTED\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n...\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n\n\nCANCELLED\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n...\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n\n\n\n\n14 rows × 58492 columns\n\n\n\n\ndf.DIST.describe()\n\ncount    58492.000000\nmean       872.900072\nstd        624.996805\nmin         67.000000\n25%        391.000000\n50%        690.000000\n75%       1199.000000\nmax       4502.000000\nName: DIST, dtype: float64\n\n\n\ndf.assign(DIST2 = pd.cut(df.DIST,[-np.inf,391,690,1199,np.inf]))\\\n.groupby([\"AIRLINE\",\"DIST2\"]).agg({'CANCELLED':[\"sum\",\"mean\",\"count\"]})\n\n\n\n\n\n\n\n\n\nCANCELLED\n\n\n\n\nsum\nmean\ncount\n\n\nAIRLINE\nDIST2\n\n\n\n\n\n\n\nAA\n(-inf, 391.0]\n18\n0.015986\n1126\n\n\n(391.0, 690.0]\n17\n0.013589\n1251\n\n\n(690.0, 1199.0]\n69\n0.022066\n3127\n\n\n(1199.0, inf]\n50\n0.014723\n3396\n\n\nAS\n(-inf, 391.0]\n0\nNaN\n0\n\n\n(391.0, 690.0]\n0\n0.000000\n145\n\n\n(690.0, 1199.0]\n0\n0.000000\n462\n\n\n(1199.0, inf]\n0\n0.000000\n161\n\n\nB6\n(-inf, 391.0]\n0\n0.000000\n71\n\n\n(391.0, 690.0]\n0\n0.000000\n38\n\n\n(690.0, 1199.0]\n0\n0.000000\n61\n\n\n(1199.0, inf]\n1\n0.002681\n373\n\n\nDL\n(-inf, 391.0]\n7\n0.003086\n2268\n\n\n(391.0, 690.0]\n8\n0.002421\n3304\n\n\n(690.0, 1199.0]\n16\n0.006405\n2498\n\n\n(1199.0, inf]\n7\n0.002766\n2531\n\n\nEV\n(-inf, 391.0]\n77\n0.028785\n2675\n\n\n(391.0, 690.0]\n47\n0.022793\n2062\n\n\n(690.0, 1199.0]\n22\n0.019982\n1101\n\n\n(1199.0, inf]\n0\n0.000000\n20\n\n\nF9\n(-inf, 391.0]\n0\n0.000000\n27\n\n\n(391.0, 690.0]\n6\n0.013825\n434\n\n\n(690.0, 1199.0]\n4\n0.007105\n563\n\n\n(1199.0, inf]\n0\n0.000000\n293\n\n\nHA\n(-inf, 391.0]\n0\nNaN\n0\n\n\n(391.0, 690.0]\n0\nNaN\n0\n\n\n(690.0, 1199.0]\n0\nNaN\n0\n\n\n(1199.0, inf]\n0\n0.000000\n112\n\n\nMQ\n(-inf, 391.0]\n90\n0.047120\n1910\n\n\n(391.0, 690.0]\n39\n0.037356\n1044\n\n\n(690.0, 1199.0]\n22\n0.044266\n497\n\n\n(1199.0, inf]\n1\n0.050000\n20\n\n\nNK\n(-inf, 391.0]\n5\n0.036496\n137\n\n\n(391.0, 690.0]\n4\n0.013201\n303\n\n\n(690.0, 1199.0]\n6\n0.011029\n544\n\n\n(1199.0, inf]\n10\n0.018797\n532\n\n\nOO\n(-inf, 391.0]\n75\n0.024826\n3021\n\n\n(391.0, 690.0]\n39\n0.019364\n2014\n\n\n(690.0, 1199.0]\n19\n0.016351\n1162\n\n\n(1199.0, inf]\n9\n0.023018\n391\n\n\nUA\n(-inf, 391.0]\n5\n0.007143\n700\n\n\n(391.0, 690.0]\n14\n0.011824\n1184\n\n\n(690.0, 1199.0]\n26\n0.010924\n2380\n\n\n(1199.0, inf]\n48\n0.013605\n3528\n\n\nUS\n(-inf, 391.0]\n0\n0.000000\n254\n\n\n(391.0, 690.0]\n7\n0.021944\n319\n\n\n(690.0, 1199.0]\n2\n0.006329\n316\n\n\n(1199.0, inf]\n12\n0.016529\n726\n\n\nVX\n(-inf, 391.0]\n2\n0.008299\n241\n\n\n(391.0, 690.0]\n1\n0.003861\n259\n\n\n(690.0, 1199.0]\n0\n0.000000\n22\n\n\n(1199.0, inf]\n3\n0.006369\n471\n\n\nWN\n(-inf, 391.0]\n55\n0.023810\n2310\n\n\n(391.0, 690.0]\n14\n0.006487\n2158\n\n\n(690.0, 1199.0]\n17\n0.007896\n2153\n\n\n(1199.0, inf]\n7\n0.003895\n1797\n\n\n\n\n\n\n\n\npd.cut(df.DIST,[-np.inf,400,700,1200,np.inf],labels=['~400','400~700','700~1200','1200~'])\n\n0         400~700\n1           1200~\n2         400~700\n3        700~1200\n4           1200~\n           ...   \n58487       1200~\n58488     400~700\n58489        ~400\n58490    700~1200\n58491     400~700\nName: DIST, Length: 58492, dtype: category\nCategories (4, object): ['~400' &lt; '400~700' &lt; '700~1200' &lt; '1200~']\n\n\n\ndf.assign(DIST2 = pd.cut(df.DIST,[-np.inf,400,700,1200,np.inf],labels=['~400','400~700','700~1200','1200~']))\\\n.groupby([\"AIRLINE\",\"DIST2\"]).agg({'CANCELLED':[\"sum\",\"mean\",\"count\"]})\n\n\n\n\n\n\n\n\n\nCANCELLED\n\n\n\n\nsum\nmean\ncount\n\n\nAIRLINE\nDIST2\n\n\n\n\n\n\n\nAA\n~400\n18\n0.015986\n1126\n\n\n400~700\n17\n0.013589\n1251\n\n\n700~1200\n69\n0.022066\n3127\n\n\n1200~\n50\n0.014723\n3396\n\n\nAS\n~400\n0\nNaN\n0\n\n\n400~700\n0\n0.000000\n145\n\n\n700~1200\n0\n0.000000\n462\n\n\n1200~\n0\n0.000000\n161\n\n\nB6\n~400\n0\n0.000000\n71\n\n\n400~700\n0\n0.000000\n38\n\n\n700~1200\n0\n0.000000\n61\n\n\n1200~\n1\n0.002681\n373\n\n\nDL\n~400\n7\n0.003040\n2303\n\n\n400~700\n8\n0.002352\n3402\n\n\n700~1200\n16\n0.006765\n2365\n\n\n1200~\n7\n0.002766\n2531\n\n\nEV\n~400\n77\n0.027838\n2766\n\n\n400~700\n48\n0.023312\n2059\n\n\n700~1200\n21\n0.020731\n1013\n\n\n1200~\n0\n0.000000\n20\n\n\nF9\n~400\n0\n0.000000\n27\n\n\n400~700\n7\n0.015837\n442\n\n\n700~1200\n3\n0.005405\n555\n\n\n1200~\n0\n0.000000\n293\n\n\nHA\n~400\n0\nNaN\n0\n\n\n400~700\n0\nNaN\n0\n\n\n700~1200\n0\nNaN\n0\n\n\n1200~\n0\n0.000000\n112\n\n\nMQ\n~400\n92\n0.047472\n1938\n\n\n400~700\n39\n0.035682\n1093\n\n\n700~1200\n20\n0.047619\n420\n\n\n1200~\n1\n0.050000\n20\n\n\nNK\n~400\n5\n0.036496\n137\n\n\n400~700\n4\n0.013201\n303\n\n\n700~1200\n6\n0.011029\n544\n\n\n1200~\n10\n0.018797\n532\n\n\nOO\n~400\n76\n0.024837\n3060\n\n\n400~700\n38\n0.018673\n2035\n\n\n700~1200\n19\n0.017241\n1102\n\n\n1200~\n9\n0.023018\n391\n\n\nUA\n~400\n5\n0.006993\n715\n\n\n400~700\n14\n0.011966\n1170\n\n\n700~1200\n26\n0.010929\n2379\n\n\n1200~\n48\n0.013605\n3528\n\n\nUS\n~400\n0\n0.000000\n254\n\n\n400~700\n7\n0.021944\n319\n\n\n700~1200\n2\n0.006329\n316\n\n\n1200~\n12\n0.016529\n726\n\n\nVX\n~400\n2\n0.008299\n241\n\n\n400~700\n1\n0.003861\n259\n\n\n700~1200\n0\n0.000000\n22\n\n\n1200~\n3\n0.006369\n471\n\n\nWN\n~400\n55\n0.023022\n2389\n\n\n400~700\n17\n0.007795\n2181\n\n\n700~1200\n14\n0.006826\n2051\n\n\n1200~\n7\n0.003895\n1797"
  },
  {
    "objectID": "posts/2022-10-06-5wk-2.html",
    "href": "posts/2022-10-06-5wk-2.html",
    "title": "05wk-2",
    "section": "",
    "text": "훌륭한 시각화, mpg 데이터 소개, plotnine(p9)을 이용한 고차원 산점도"
  },
  {
    "objectID": "posts/2022-10-06-5wk-2.html#애드워드-터프티",
    "href": "posts/2022-10-06-5wk-2.html#애드워드-터프티",
    "title": "05wk-2",
    "section": "애드워드 터프티",
    "text": "애드워드 터프티\n- 데이터 시각화계의 거장\n- 터프티의 이론중 백미: 엄격한 미니멀리즘\n\n최소한의 잉크로 많은 정보를 전달할 수 있다면 그것이 바로 좋은 그래프이다.\n작은 지면 내에서 잉크를 최대한 적게 써서 짧은 시간 안에 많은 영감을 주어야 한다.\n\n- 데이터-잉크비: 데이터를 표현하는데 들아가는 잉크의 양 / 그래픽을 인쇄하는데 들어가는 잉크의 총량\n- 차트정크 (나이젤홈즈의 그래프)\n\n\n“Lurking behind chartjunk is contempt both for information and for the audience. Chartjunk promoters imagine that numbers and details are boring, dull, and tedious, requiring ornament to enliven. Cosmetic decoration, which frequently distorts the data, will never salvage an underlying lack of content. If the numbers are boring, then you’ve got the wrong numbers (…) Worse is contempt for our audience, designing as if readers were obtuse and uncaring. In fact, consumers of graphics are often more intelligent about the information at hand than those who fabricate the data decoration (…) The operating moral premise of information design should be that our readers are alert and caring; they may be busy, eager to get on with it, but they are not stupid.”\n\n\n차트정크 = 대중을 멸시 + 데이터에 대한 모독\n차트정크 옹호가는 숫자와 데이터가 지루하여 활기가 필요하다고 생각하는 모양이다..\n\n- 별로인 그래프 (왼쪽) / 우수한 그래프 오른쪽\n\n- 별로인 그래프 (왼쪽) / 우수한 그래프 오른쪽\n\n- 별로인 그래프 (왼쪽) / 우수한 그래프 오른쪽\n\n- 제 생각: 글쎄…"
  },
  {
    "objectID": "posts/2022-10-06-5wk-2.html#찰스미나드의-도표",
    "href": "posts/2022-10-06-5wk-2.html#찰스미나드의-도표",
    "title": "05wk-2",
    "section": "찰스미나드의 도표",
    "text": "찰스미나드의 도표\n\n인류역사상 가장 훌륭한 시각화\n\n\n- 터프티의 평\n\n지금까지 그려진 최고의 통계 그래픽일지도 모른다.\n여기에서는 군대의 크기, 2차원 평면상의 위치, 군대의 이동방향, 모스코바에서 퇴각하는 동안의 여러날짜, 온도 \\(\\to\\) 6차원의 변수\n백만번에 한번 이런 그림을 그릴수는 있겠지만 이러한 멋진 그래픽을 만드는 방법에 대한 원칙은 없다. \\(\\to\\) 미니멀리즘..\n\n- 왜 우수한 그래프일까?\n\n자료를 파악하는 기법은 최근까지도 산점도, 막대그래프, 라인플랏에 의존\n이러한 플랏의 단점은 고차원의 자료를 분석하기 어렵다는 것임\n미나드는 여러그램을 그리는 방법 대신에 한 그림에서 패널을 늘리는 방법을 선택함."
  },
  {
    "objectID": "posts/2022-10-06-5wk-2.html#미나드처럼-그리는게-왜-어려운가",
    "href": "posts/2022-10-06-5wk-2.html#미나드처럼-그리는게-왜-어려운가",
    "title": "05wk-2",
    "section": "미나드처럼 그리는게 왜 어려운가?",
    "text": "미나드처럼 그리는게 왜 어려운가?\n- 몸무게, 키, 성별, 국적\n\ndf1=pd.read_csv('https://raw.githubusercontent.com/guebin/DV2022/master/posts/male1.csv')\ndf2=pd.read_csv('https://raw.githubusercontent.com/guebin/DV2022/master/posts/male2.csv')  \ndf3=pd.read_csv('https://raw.githubusercontent.com/guebin/DV2022/master/posts/female.csv') \ndf4=pd.read_csv('https://raw.githubusercontent.com/guebin/DV2022/master/posts/foreign.csv')\n\n- 미나드의 접근방법\n\n_df = pd.concat([pd.concat([df1,df2],axis=1).assign(g='m'),df3.assign(g='f')])\ndf = pd.concat([_df.assign(g2='korea'),df4.assign(g2='foreign')]).reset_index(drop=True)\ndf\n\n\n\n\n\n\n\n\nw\nh\ng\ng2\n\n\n\n\n0\n72.788217\n183.486773\nm\nkorea\n\n\n1\n66.606430\n173.599877\nm\nkorea\n\n\n2\n69.806324\n173.237903\nm\nkorea\n\n\n3\n67.449439\n173.223805\nm\nkorea\n\n\n4\n70.463183\n174.931946\nm\nkorea\n\n\n...\n...\n...\n...\n...\n\n\n1525\n78.154632\n188.324350\nm\nforeign\n\n\n1526\n74.754308\n183.017979\nf\nforeign\n\n\n1527\n91.196208\n190.100456\nm\nforeign\n\n\n1528\n87.770394\n187.987255\nm\nforeign\n\n\n1529\n88.021995\n193.456798\nm\nforeign\n\n\n\n\n1530 rows × 4 columns\n\n\n\n\nsns.scatterplot(data=df,x='w',y='h',hue='g',style='g2')\n\n\n\n\n\n\n\n\n- 어려운점: (1) 센스가 없어서 hue/style을 이용하여 그룹을 구분할 생각을 못함 (2) long df (=tidy data) 형태로 데이터를 정리할 생각을 못함 (3) long df 형태로 데이터를 변형하는 코드를 모름\n\n\n기획력부족 -&gt; 훌륭한 시각화를 많이 볼 것\n\n\n데이터프레임에 대한 이해부족 -&gt; tidydata에 대한 개념\n\n\n프로그래밍 능력 -&gt; 코딩공부열심히 (pandas를 엄청 잘해야함)"
  },
  {
    "objectID": "posts/2022-10-06-5wk-2.html#방법1-rpy2-코랩-아닌경우-실습금지",
    "href": "posts/2022-10-06-5wk-2.html#방법1-rpy2-코랩-아닌경우-실습금지",
    "title": "05wk-2",
    "section": "방법1: rpy2 (코랩 아닌경우 실습금지)",
    "text": "방법1: rpy2 (코랩 아닌경우 실습금지)\n\nimport rpy2\n%load_ext rpy2.ipython\n\n\n%%R \n### 여기는 R처럼 쓸 수 있다. \na &lt;- c(1,2,3) \na+1\n\n[1] 2 3 4\n\n\n\na\n\nNameError: name 'a' is not defined\n\n\n\n%%R \nlibrary(tidyverse)\nmpg\n\n# A tibble: 234 × 11\n   manufacturer model      displ  year   cyl trans drv     cty   hwy fl    class\n   &lt;chr&gt;        &lt;chr&gt;      &lt;dbl&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt; &lt;chr&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt; &lt;chr&gt;\n 1 audi         a4           1.8  1999     4 auto… f        18    29 p     comp…\n 2 audi         a4           1.8  1999     4 manu… f        21    29 p     comp…\n 3 audi         a4           2    2008     4 manu… f        20    31 p     comp…\n 4 audi         a4           2    2008     4 auto… f        21    30 p     comp…\n 5 audi         a4           2.8  1999     6 auto… f        16    26 p     comp…\n 6 audi         a4           2.8  1999     6 manu… f        18    26 p     comp…\n 7 audi         a4           3.1  2008     6 auto… f        18    27 p     comp…\n 8 audi         a4 quattro   1.8  1999     4 manu… 4        18    26 p     comp…\n 9 audi         a4 quattro   1.8  1999     4 auto… 4        16    25 p     comp…\n10 audi         a4 quattro   2    2008     4 manu… 4        20    28 p     comp…\n# … with 224 more rows\n# ℹ Use `print(n = ...)` to see more rows\n\n\n\nmpg\n\nNameError: name 'mpg' is not defined\n\n\n\n%R -o mpg # R에 있는 자료가 파이썬으로 넘어옴\n\n\nmpg\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\nclass\n\n\n\n\n1\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n2\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n4\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n5\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n230\nvolkswagen\npassat\n2.0\n2008\n4\nauto(s6)\nf\n19\n28\np\nmidsize\n\n\n231\nvolkswagen\npassat\n2.0\n2008\n4\nmanual(m6)\nf\n21\n29\np\nmidsize\n\n\n232\nvolkswagen\npassat\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\nmidsize\n\n\n233\nvolkswagen\npassat\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\nmidsize\n\n\n234\nvolkswagen\npassat\n3.6\n2008\n6\nauto(s6)\nf\n17\n26\np\nmidsize\n\n\n\n\n234 rows × 11 columns"
  },
  {
    "objectID": "posts/2022-10-06-5wk-2.html#방법2-저장된-csv파일을-통하여-데이터를-확보",
    "href": "posts/2022-10-06-5wk-2.html#방법2-저장된-csv파일을-통하여-데이터를-확보",
    "title": "05wk-2",
    "section": "방법2: 저장된 csv파일을 통하여 데이터를 확보",
    "text": "방법2: 저장된 csv파일을 통하여 데이터를 확보\n\nmpg.to_csv(\"mpg.csv\",index=False)\n\n\npd.read_csv(\"mpg.csv\")\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\nclass\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n229\nvolkswagen\npassat\n2.0\n2008\n4\nauto(s6)\nf\n19\n28\np\nmidsize\n\n\n230\nvolkswagen\npassat\n2.0\n2008\n4\nmanual(m6)\nf\n21\n29\np\nmidsize\n\n\n231\nvolkswagen\npassat\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\nmidsize\n\n\n232\nvolkswagen\npassat\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\nmidsize\n\n\n233\nvolkswagen\npassat\n3.6\n2008\n6\nauto(s6)\nf\n17\n26\np\nmidsize\n\n\n\n\n234 rows × 11 columns"
  },
  {
    "objectID": "posts/2022-10-06-5wk-2.html#방법3-github등에-공개된-csv를-읽어오기",
    "href": "posts/2022-10-06-5wk-2.html#방법3-github등에-공개된-csv를-읽어오기",
    "title": "05wk-2",
    "section": "방법3: github등에 공개된 csv를 읽어오기",
    "text": "방법3: github등에 공개된 csv를 읽어오기\n\npd.read_csv('https://raw.githubusercontent.com/guebin/DV2022/master/posts/mpg.csv')\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\nclass\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n229\nvolkswagen\npassat\n2.0\n2008\n4\nauto(s6)\nf\n19\n28\np\nmidsize\n\n\n230\nvolkswagen\npassat\n2.0\n2008\n4\nmanual(m6)\nf\n21\n29\np\nmidsize\n\n\n231\nvolkswagen\npassat\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\nmidsize\n\n\n232\nvolkswagen\npassat\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\nmidsize\n\n\n233\nvolkswagen\npassat\n3.6\n2008\n6\nauto(s6)\nf\n17\n26\np\nmidsize\n\n\n\n\n234 rows × 11 columns\n\n\n\n- 깃허브 저장소에 아예 데이터만 따로 모아서 관리하는 것도 좋은 방법입니다."
  },
  {
    "objectID": "posts/2022-10-06-5wk-2.html#data-설명",
    "href": "posts/2022-10-06-5wk-2.html#data-설명",
    "title": "05wk-2",
    "section": "data 설명",
    "text": "data 설명\n- displ: 자동차의 엔진크기\n- hwy: 연료의 효율, 동일한 연료로 얼마나 멀리 가느냐?\n- 자세한 설명은 R에서 ?mpg를 이용해 스스로 찾아볼 것"
  },
  {
    "objectID": "posts/2022-10-06-5wk-2.html#python에서-plotnine을-이용한-산점도",
    "href": "posts/2022-10-06-5wk-2.html#python에서-plotnine을-이용한-산점도",
    "title": "05wk-2",
    "section": "python에서: plotnine을 이용한 산점도",
    "text": "python에서: plotnine을 이용한 산점도\n\nggplot(data=mpg) + geom_point(mapping=aes(x='displ',y='hwy')) ## plotnine\n\n\n\n\n\n\n\n\n\n산점도 해석: 엔진크기가 클수록 효율이 낮음.\n\n- 빠르게 그리기: data=와 mapping=은 생략가능함\n\nggplot(mpg) + geom_point(aes(x='displ',y='hwy')) ## plotnine"
  },
  {
    "objectID": "posts/2022-10-06-5wk-2.html#r에서-ggplot2를-이용한-산점도",
    "href": "posts/2022-10-06-5wk-2.html#r에서-ggplot2를-이용한-산점도",
    "title": "05wk-2",
    "section": "R에서: ggplot2를 이용한 산점도",
    "text": "R에서: ggplot2를 이용한 산점도\n- R에서도 거의 똑같은 문법으로 그릴 수 있음 (데이터프레임 혹은 티블에 저장된 column 이름을 사용할때 따옴표만 제거하면 된다!)\n\n%%R -w 800\nggplot(mpg) + geom_point(aes(x=displ,y=hwy)) ## plotnine"
  },
  {
    "objectID": "posts/2022-10-06-5wk-2.html#python에서-객체지향적인-느낌으로-산점도-그리기",
    "href": "posts/2022-10-06-5wk-2.html#python에서-객체지향적인-느낌으로-산점도-그리기",
    "title": "05wk-2",
    "section": "python에서: 객체지향적인 느낌으로 산점도 그리기",
    "text": "python에서: 객체지향적인 느낌으로 산점도 그리기\nstep1: 도화지를 준비한다.\n\nfig = ggplot(data=mpg)\nfig\n\n\n\n\n\n\n\n\nstep2 변수와 에스테틱사이의 맵핑을 설정한다.\n\na1= aes(x='displ',y='hwy')\na1\n\n{'x': 'displ', 'y': 'hwy'}\n\n\nstep3 점들의 집합을 만든다. 즉 포인트 지옴을 만든다.\n\npoint1=geom_point(mapping=a1)\n\n\ngeom_point(): 점들을 그려! 어떻게?\na1에서 설정된 표를 보고\n\nstep4 도화지와 지옴을 합친다.\n\nfig+point1"
  },
  {
    "objectID": "posts/2022-10-06-5wk-2.html#산점도-점크기변경",
    "href": "posts/2022-10-06-5wk-2.html#산점도-점크기변경",
    "title": "05wk-2",
    "section": "산점도 + 점크기변경",
    "text": "산점도 + 점크기변경\n\nggplot(data=mpg) + geom_point(mapping = aes(x='displ',y='hwy',size='class'))\n\n/home/cgb4/anaconda3/envs/py37/lib/python3.7/site-packages/plotnine/scales/scale_size.py:50: PlotnineWarning: Using size for a discrete variable is not advised."
  },
  {
    "objectID": "posts/2022-10-06-5wk-2.html#산점도-투명도변경",
    "href": "posts/2022-10-06-5wk-2.html#산점도-투명도변경",
    "title": "05wk-2",
    "section": "산점도 + 투명도변경",
    "text": "산점도 + 투명도변경\n\nggplot(data=mpg) + geom_point(mapping = aes(x='displ',y='hwy',alpha='class'))\n\n/home/cgb4/anaconda3/envs/py37/lib/python3.7/site-packages/plotnine/scales/scale_alpha.py:70: PlotnineWarning: Using alpha for a discrete variable is not advised."
  },
  {
    "objectID": "posts/2022-10-06-5wk-2.html#산점도-투명도점크기를-동시에-적용",
    "href": "posts/2022-10-06-5wk-2.html#산점도-투명도점크기를-동시에-적용",
    "title": "05wk-2",
    "section": "산점도 + 투명도/점크기를 동시에 적용",
    "text": "산점도 + 투명도/점크기를 동시에 적용\n\nggplot(data=mpg) + geom_point(mapping = aes(x='displ',y='hwy',alpha='class',size='class'))\n\n/home/cgb4/anaconda3/envs/py37/lib/python3.7/site-packages/plotnine/scales/scale_alpha.py:70: PlotnineWarning: Using alpha for a discrete variable is not advised.\n/home/cgb4/anaconda3/envs/py37/lib/python3.7/site-packages/plotnine/scales/scale_size.py:50: PlotnineWarning: Using size for a discrete variable is not advised."
  },
  {
    "objectID": "posts/2022-10-06-5wk-2.html#산점도-형태",
    "href": "posts/2022-10-06-5wk-2.html#산점도-형태",
    "title": "05wk-2",
    "section": "산점도 + 형태",
    "text": "산점도 + 형태\n\nggplot(data=mpg) + geom_point(mapping = aes(x='displ',y='hwy',shape='class'))"
  },
  {
    "objectID": "posts/2022-10-06-5wk-2.html#산점도-색깔",
    "href": "posts/2022-10-06-5wk-2.html#산점도-색깔",
    "title": "05wk-2",
    "section": "산점도 + 색깔",
    "text": "산점도 + 색깔\n\nggplot(data=mpg) + geom_point(mapping = aes(x='displ',y='hwy',color='class'))"
  },
  {
    "objectID": "posts/2022-10-06-5wk-2.html#객체지향적-느낌으로",
    "href": "posts/2022-10-06-5wk-2.html#객체지향적-느낌으로",
    "title": "05wk-2",
    "section": "객체지향적 느낌으로?",
    "text": "객체지향적 느낌으로?\n\na2 = aes(x='displ', y='hwy', color='class') \n\n\na1,a2\n\n({'x': 'displ', 'y': 'hwy'}, {'x': 'displ', 'y': 'hwy', 'color': 'class'})\n\n\n\npoint2=geom_point(a2)\n\n\nfig+point2"
  },
  {
    "objectID": "posts/2022-10-06-5wk-2.html#산점도-색깔-적합선",
    "href": "posts/2022-10-06-5wk-2.html#산점도-색깔-적합선",
    "title": "05wk-2",
    "section": "산점도 + 색깔 + 적합선",
    "text": "산점도 + 색깔 + 적합선\n- 일단 색깔이 없는 포인트 지옴부터 연습\n\nfig+point1\n\n\n\n\n\n\n\n\n\nline1 = geom_smooth(a1)\n\n\nfig+point1+line1\n\n/home/cgb4/anaconda3/envs/py37/lib/python3.7/site-packages/plotnine/stats/smoothers.py:311: PlotnineWarning: Confidence intervals are not yet implementedfor lowess smoothings.\n\n\n\n\n\n\n\n\n\n- point1(색깔없는 포인트 지옴)을 point2(색깔있는 포인트 지옴)으로 언제든지 바꿔치기 가능!\n\nfig+point2+line1\n\n/home/cgb4/anaconda3/envs/py37/lib/python3.7/site-packages/plotnine/stats/smoothers.py:311: PlotnineWarning: Confidence intervals are not yet implementedfor lowess smoothings.\n\n\n\n\n\n\n\n\n\n- 명령어로 한번에 그리기\n\nggplot(data=mpg) + \\\ngeom_point(mapping=aes(x='displ',y='hwy',color='class')) + \\\ngeom_smooth(mapping=aes(x='displ',y='hwy'))\n\n/home/cgb4/anaconda3/envs/py37/lib/python3.7/site-packages/plotnine/stats/smoothers.py:311: PlotnineWarning: Confidence intervals are not yet implementedfor lowess smoothings.\n\n\n\n\n\n\n\n\n\n- 공통적인 맵핑규칙은 ggplot()쪽으로 빼기도 한다. (figure를 선언하는 곳에서 공통으로 선언함)\n\nggplot(data=mpg,mapping=aes(x='displ',y='hwy')) + \\\ngeom_point(mapping=aes(color='class')) + \\\ngeom_smooth()\n\n/home/cgb4/anaconda3/envs/py37/lib/python3.7/site-packages/plotnine/stats/smoothers.py:311: PlotnineWarning: Confidence intervals are not yet implementedfor lowess smoothings.\n\n\n\n\n\n\n\n\n\n- R에서는 confidence interval도 geom_smooth()를 이용하여 확인할 수 있다.\n\n%%R -w 800\nggplot(data=mpg,mapping=aes(x=displ,y=hwy)) + geom_point(mapping=aes(color=class)) + geom_smooth()\n\nR[write to console]: `geom_smooth()` using method = 'loess' and formula 'y ~ x'"
  },
  {
    "objectID": "posts/2022-10-06-5wk-2.html#산점도-점크기변경-색깔",
    "href": "posts/2022-10-06-5wk-2.html#산점도-점크기변경-색깔",
    "title": "05wk-2",
    "section": "산점도 + 점크기변경 + 색깔",
    "text": "산점도 + 점크기변경 + 색깔\n- drv (전륜, 후륜, 4륜 구동)에 따라서 데이터를 시각화 하고 싶다.\n\nggplot(data=mpg, mapping=aes(x='displ',y='hwy')) + geom_point(mapping=aes(size='class',color='drv'),alpha=0.3)\n\n/home/cgb4/anaconda3/envs/py37/lib/python3.7/site-packages/plotnine/scales/scale_size.py:50: PlotnineWarning: Using size for a discrete variable is not advised.\n\n\n\n\n\n\n\n\n\n\n모든 \\(x\\)에 대하여 붉은색 점들이 대부분 초록색과 보라색 점들에 비하여 아래쪽에 있음 \\(\\to\\) 4륜구동방식이 연비가 좋지 않음"
  },
  {
    "objectID": "posts/2022-10-06-5wk-2.html#산점도-점크기변경-색깔-객체지향버전",
    "href": "posts/2022-10-06-5wk-2.html#산점도-점크기변경-색깔-객체지향버전",
    "title": "05wk-2",
    "section": "산점도 + 점크기변경 + 색깔 (객체지향버전)",
    "text": "산점도 + 점크기변경 + 색깔 (객체지향버전)\n- 맵핑규칙\n\na1,a2\n\n({'x': 'displ', 'y': 'hwy'}, {'x': 'displ', 'y': 'hwy', 'color': 'class'})\n\n\n\na3 = a2.copy() \n\n\na3['color'] = 'drv'\na3['size'] = 'class'\na3\n\n{'x': 'displ', 'y': 'hwy', 'color': 'drv', 'size': 'class'}\n\n\n\n아래와 같이 선언해도 괜찮음\n\na3= aes(x='displ',y='hwy',color='drv',size='class')\n\npoint3=geom_point(a3)\n\n\nfig+point3\n\n/home/cgb4/anaconda3/envs/py37/lib/python3.7/site-packages/plotnine/scales/scale_size.py:50: PlotnineWarning: Using size for a discrete variable is not advised.\n\n\n\n\n\n\n\n\n\n\n그림의 전체적인 투명도를 조절하면 좋겠음\n\n\npoint3=geom_point(a3,alpha=0.2)\nfig+point3\n\n/home/cgb4/anaconda3/envs/py37/lib/python3.7/site-packages/plotnine/scales/scale_size.py:50: PlotnineWarning: Using size for a discrete variable is not advised."
  },
  {
    "objectID": "posts/2022-10-06-5wk-2.html#산점도-점크기변경-색깔-선추가",
    "href": "posts/2022-10-06-5wk-2.html#산점도-점크기변경-색깔-선추가",
    "title": "05wk-2",
    "section": "산점도 + 점크기변경 + 색깔 + 선추가",
    "text": "산점도 + 점크기변경 + 색깔 + 선추가\n\nfig+point3+line1\n\n/home/cgb4/anaconda3/envs/py37/lib/python3.7/site-packages/plotnine/scales/scale_size.py:50: PlotnineWarning: Using size for a discrete variable is not advised.\n/home/cgb4/anaconda3/envs/py37/lib/python3.7/site-packages/plotnine/stats/smoothers.py:311: PlotnineWarning: Confidence intervals are not yet implementedfor lowess smoothings."
  },
  {
    "objectID": "posts/2022-10-06-5wk-2.html#산점도-점크기변경-색깔-drv별로-선추가",
    "href": "posts/2022-10-06-5wk-2.html#산점도-점크기변경-색깔-drv별로-선추가",
    "title": "05wk-2",
    "section": "산점도 + 점크기변경 + 색깔 + drv별로 선추가",
    "text": "산점도 + 점크기변경 + 색깔 + drv별로 선추가\n- 맵핑규칙\n\na1,a2,a3\n\n({'x': 'displ', 'y': 'hwy'},\n {'x': 'displ', 'y': 'hwy', 'color': 'class'},\n {'x': 'displ', 'y': 'hwy', 'color': 'drv', 'size': 'class'})\n\n\n\na4 = a2.copy() \na4['color']='drv'\na4\n\n{'x': 'displ', 'y': 'hwy', 'color': 'drv'}\n\n\n\nline2 = geom_smooth(a4)\n\n\nfig + point3 +line2\n\n/home/cgb4/anaconda3/envs/py37/lib/python3.7/site-packages/plotnine/scales/scale_size.py:50: PlotnineWarning: Using size for a discrete variable is not advised.\n/home/cgb4/anaconda3/envs/py37/lib/python3.7/site-packages/plotnine/stats/smoothers.py:311: PlotnineWarning: Confidence intervals are not yet implementedfor lowess smoothings.\n\n\n\n\n\n\n\n\n\n- 선의 색깔을 동일하게 하고 선의 타입을 변경하여 drv를 표시하고 싶다면?\n\na1,a2,a3,a4\n\n({'x': 'displ', 'y': 'hwy'},\n {'x': 'displ', 'y': 'hwy', 'color': 'class'},\n {'x': 'displ', 'y': 'hwy', 'color': 'drv', 'size': 'class'},\n {'x': 'displ', 'y': 'hwy', 'color': 'drv'})\n\n\n\na5=a1.copy()\na5['linetype']='drv' \na5\n\n{'x': 'displ', 'y': 'hwy', 'linetype': 'drv'}\n\n\n\nline3 = geom_smooth(a5,size=0.5,color='gray')\n\n\nfig+point3+line3\n\n/home/cgb4/anaconda3/envs/py37/lib/python3.7/site-packages/plotnine/scales/scale_size.py:50: PlotnineWarning: Using size for a discrete variable is not advised.\n/home/cgb4/anaconda3/envs/py37/lib/python3.7/site-packages/plotnine/stats/smoothers.py:311: PlotnineWarning: Confidence intervals are not yet implementedfor lowess smoothings.\n\n\n\n\n\n\n\n\n\n- 전체적인 추세선도 추가하고 싶다면?\n\nfig+point3+line3+line1\n\n/home/cgb4/anaconda3/envs/py37/lib/python3.7/site-packages/plotnine/scales/scale_size.py:50: PlotnineWarning: Using size for a discrete variable is not advised.\n/home/cgb4/anaconda3/envs/py37/lib/python3.7/site-packages/plotnine/stats/smoothers.py:311: PlotnineWarning: Confidence intervals are not yet implementedfor lowess smoothings.\n\n\n\n\n\n\n\n\n\n- 그려보니까 역시 drv별로 그려지는 추세선은 색깔별로 구분하는게 좋겠음.\n\nline2 = geom_smooth(a4,size=0.5,linetype='dashed')\nfig+point3+line2+line1\n\n/home/cgb4/anaconda3/envs/py37/lib/python3.7/site-packages/plotnine/scales/scale_size.py:50: PlotnineWarning: Using size for a discrete variable is not advised.\n/home/cgb4/anaconda3/envs/py37/lib/python3.7/site-packages/plotnine/stats/smoothers.py:311: PlotnineWarning: Confidence intervals are not yet implementedfor lowess smoothings.\n\n\n\n\n\n\n\n\n\n- 고차원을 변수를 표현할 수 있는 무기는 다양하다.\n\n산점도(포인트지옴): 점의크기, 점의형태, 점의색깔, 점의투명도\n라인플랏(스무스지옴,라인지옴): 선의형태, 선의색깔, 선의굵기"
  },
  {
    "objectID": "posts/2022-10-30-9wk-1-mid.html",
    "href": "posts/2022-10-30-9wk-1-mid.html",
    "title": "midterm",
    "section": "",
    "text": "중간고사\nimport numpy as np\nimport matplotlib.pyplot as plt \nimport pandas as pd\nimport seaborn as sns\nfrom plotnine import *"
  },
  {
    "objectID": "posts/2022-10-30-9wk-1-mid.html#시각화의-해석---다음을-잘-읽고-물음에-답하라.-20점",
    "href": "posts/2022-10-30-9wk-1-mid.html#시각화의-해석---다음을-잘-읽고-물음에-답하라.-20점",
    "title": "midterm",
    "section": "1. 시각화의 해석 - 다음을 잘 읽고 물음에 답하라. (20점)",
    "text": "1. 시각화의 해석 - 다음을 잘 읽고 물음에 답하라. (20점)\n(1) 아래의 그림을 보고 올바르게 해석한 것을 고르라. (모두 맞출경우만 정답으로 인정)\n\n#hide_input\nx = [10, 8, 13, 9, 11, 14, 6, 4, 12, 7, 5]\ny1 = [8.04, 6.95, 7.58, 8.81, 8.33, 9.96, 7.24, 4.26, 10.84, 4.82, 5.68]\ny2 = [9.14, 8.14, 8.74, 8.77, 9.26, 8.10, 6.13, 3.10, 9.13, 7.26, 4.74]\ny3 = [7.46, 6.77, 12.74, 7.11, 7.81, 8.84, 6.08, 5.39, 8.15, 6.42, 5.73]\nx4 = [8, 8, 8, 8, 8, 8, 8, 19, 8, 8, 8]\ny4 = [6.58, 5.76, 7.71, 8.84, 8.47, 7.04, 5.25, 12.50, 5.56, 7.91, 6.89]\nfig, ((ax1,ax2),(ax3,ax4)) = plt.subplots(2,2)\nax1.plot(x,y1,'.') \nax1.set_title(\"(a)\")\nax2.plot(x,y2,'.') \nax2.set_title(\"(b)\")\nax3.plot(x,y3,'.'); ax3.plot(x[2],y3[2],'o',color='C1') \nax3.set_title(\"(c)\")\nax4.plot(x4,y4,'.'); ax4.plot(x4[-4],y4[-4],'o',color='C1')\nax4.set_title(\"(d)\")\nfig.suptitle(\"Anscombe's quartet\",size=15)\nplt.tight_layout()\n\n\n\n\n\n\n\n\n\n소윤: (a)의 경우 \\((x_i,y_i)\\)의 산점도가 직선형태이므로 표본상관계수의 값을 해석하는 것이 두 자료의 관계를 파악할때 도움을 준다.\n다호: (b)의 경우 \\((x_i,y_i)\\)의 산점도가 이차곡선이므로 표본상관계수의 해석으로 두 자료의 관계를 모두 파악할 수 없다.\n하니: (c)의 경우 주황색으로 표시된 점을 제외한다면 표본상관계수로 자료를 해석하기에 바람직하다.\n도한: (d)도 (c)와 마찬가지로 주황색으로 표시된 점을 제외한다면 표본상관계수로 자료를 해석하기에 바람직하다.\n\n(풀이)\n\n정답: 소윤, 다호, 하니가 맞게 서술함.\n도한이 틀린이유: 주황색점을 제외할 경우 \\(x\\)의 변화량이 0이므로 분모가 0으로 수렴. 따라서 상관계수의 해석이 무의미하다.\n\n(2) 아래의 그림을 보고 올바르게 해석한 것을 모두 고르라. (모두 맞출경우만 정답으로 인정) - 그림에 대한 배경설명은 10월17일,19일의 “아이스크림을 많이 먹으면 걸리는 병”을 참고\n\n#hide_input\ndf=pd.read_csv('https://raw.githubusercontent.com/guebin/DV2022/master/_notebooks/icecream.csv')\nggplot(data=df.assign(temp=pd.cut(df.temp,[-np.inf,0,5,10,15,20,25,30,np.inf])))\\\n+geom_point(aes(x='icecream',y='disease',color='temp'))\\\n+geom_smooth(aes(x='icecream',y='disease',color='temp'))\n\n/home/cgb4/anaconda3/envs/py37/lib/python3.7/site-packages/plotnine/stats/smoothers.py:311: PlotnineWarning: Confidence intervals are not yet implementedfor lowess smoothings.\n\n\n\n\n\n\n\n\n\n\n소윤: 아이스크림과 소아마비는 상관계수는 양수이다.\n다호: 상관계수가 양수라는 정보만으로는 소아마비와 아이스크림사이에 인과성이 있다고 주장하기 어렵다.\n하니: 소아마비와 아이스크림 사이에 존재하는 은닉변수 온도를 통제한다면 소아마비와 아이스크림 사이의 상관계수는 0에 가깝다.\n도한: 하니의 분석에 따르면 소아마비와 아이스크림 사이의 인과성은 없다고 보아야 한다. (단 소아마비와 아이스크림 사이의 은닉된 변수는 온도가 유일하다고 가정한다)\n\n(풀이)\n\n정답: 소윤, 다호, 하니, 도한 모두 맞게 서술함"
  },
  {
    "objectID": "posts/2022-10-30-9wk-1-mid.html#시각화구현-i---다음을-잘-읽고-물음에-답하라.-10점",
    "href": "posts/2022-10-30-9wk-1-mid.html#시각화구현-i---다음을-잘-읽고-물음에-답하라.-10점",
    "title": "midterm",
    "section": "2. 시각화구현 I - 다음을 잘 읽고 물음에 답하라. (10점)",
    "text": "2. 시각화구현 I - 다음을 잘 읽고 물음에 답하라. (10점)\n(1)~(3) 주어진 자료에 대하여 다음을 시각화 하라. (maplotlib 이용)\n\nx=[1,2,3,4]\ny=[1,2,3,2]\n\n(1) 출제의도: 마커변경, 색깔변경\n\nplt.plot(x,y,'x',color='C1');\n\n\n\n\n\n\n\n\n\n채점기준: 색깔이 정확하게 일치하지 않을 경우 0점으로 처리\n\n(2) 출제의도: title설정\n\nplt.plot(x,y,)\nplt.title('TITLE',size=15);\n\n\n\n\n\n\n\n\n(3) 출제의도: linetype 변경, dot connected-plot\n\nplt.plot(x,y,'or--');\n\n\n\n\n\n\n\n\n\n(4) ~ (5) 주어진 자료에 대하여 다음을 시각화 하라.\n\nx=[1,2,3,4]\ny1=[1,2,4,3]\ny2=[1.1,1.9,3,5]\n\n(4) 출제의도: legend\n\nplt.plot(x,y1,'o--',label='y1')\nplt.plot(x,y2,'o--',label='y2')\nplt.legend();\n\n\n\n\n\n\n\n\n(5) 출제의도: linetype, linewidth 변경\n\nfig,ax = plt.subplots(1,2)\nax[0].plot(x,y1,'--',lw=2)\nax[1].plot(x,y2,'--',lw=4);\n\n\n\n\n\n\n\n\n\n채점기준: 선의두께가 예시와 조금 달라도 만점으로 인정 (두께의 변화만 있으면 정답으로 인정함)"
  },
  {
    "objectID": "posts/2022-10-30-9wk-1-mid.html#시각화구현-ii-다음을-잘-읽고-물음에-답하라.-10점",
    "href": "posts/2022-10-30-9wk-1-mid.html#시각화구현-ii-다음을-잘-읽고-물음에-답하라.-10점",
    "title": "midterm",
    "section": "3. 시각화구현 II – 다음을 잘 읽고 물음에 답하라. (10점)",
    "text": "3. 시각화구현 II – 다음을 잘 읽고 물음에 답하라. (10점)\n주어진 자료가 아래와 같다고 하자.\n\nnp.random.seed(43052)\nx1,y1 =  np.random.multivariate_normal([-2,-2],[[1,-0.8],[-0.8,1]],size=500).T\nx2,y2 =  np.random.multivariate_normal([2,2],[[1,-0.7],[-0.7,1]],size=500).T\n\n(1) matplotlib와 seaborn을 이용하여 아래와 같이 시각화 하라.\n\nalpha=0.1을 사용\n\n\nfig,ax = plt.subplots(2,2)\nax[0,0].plot(x1,y1,'.')\nax[0,0].plot(x2,y2,'.',alpha=0.1)\nax[0,0].set_title(\"(a) matplotlib - highlight (x1,y1)\")\nsns.scatterplot(x=x1,y=y1,ax=ax[0,1])\nsns.scatterplot(x=x2,y=y2,ax=ax[0,1],alpha=0.1)\nax[0,1].set_title(\"(b) seaborn - highlight (x1,y1)\")\nax[1,0].plot(x1,y1,'.',alpha=0.1)\nax[1,0].plot(x2,y2,'.')\nsns.scatterplot(x=x1,y=y1,ax=ax[1,1],alpha=0.1)\nax[1,0].set_title(\"(c) matplotlib - highlight (x2,y2)\")\nsns.scatterplot(x=x2,y=y2,ax=ax[1,1])\nax[1,1].set_title(\"(d) seaborn - highlight (x2,y2)\")\nplt.tight_layout()\n\n\n\n\n\n\n\n\n\n채점기준: (b)와 (d)의 그림을 seaborn으로 생성하지 않을 경우 정답으로 인정안함\n\n(2) plotnine을 이용하여 아래와 같이 시각화하라. - alpha=0.1을 사용\n\nx=np.concatenate([x1,x2])\ny=np.concatenate([y1,y2])\ndf = pd.DataFrame({'x':x,'y':y,'cat':['A']*len(x1)+['B']*len(x2)})\nggplot(df)+geom_point(aes(x='x',y='y',color='cat'),alpha=0.1)\\\n+geom_smooth(aes(x='x',y='y',color='cat'))\\\n+geom_smooth(aes(x='x',y='y'))\n\n/home/cgb4/anaconda3/envs/py37/lib/python3.7/site-packages/plotnine/stats/smoothers.py:311: PlotnineWarning: Confidence intervals are not yet implementedfor lowess smoothings.\n\n\n\n\n\n\n\n\n\n\n채점기준: 산점도, 그룹별추세선, 전체추세선이 모두 있을 경우만 정답으로 인정"
  },
  {
    "objectID": "posts/2022-10-30-9wk-1-mid.html#자료분석-및-시각화-i-40점-fifa22자료",
    "href": "posts/2022-10-30-9wk-1-mid.html#자료분석-및-시각화-i-40점-fifa22자료",
    "title": "midterm",
    "section": "4. 자료분석 및 시각화 I (40점) – FIFA22자료",
    "text": "4. 자료분석 및 시각화 I (40점) – FIFA22자료\n아래의 코드를 활용하여 FIFA22의 자료를 불러온뒤 물음에 답하라.\n\ndf = pd.read_csv('https://raw.githubusercontent.com/guebin/DV2021/master/_notebooks/2021-10-25-FIFA22_official_data.csv')\ndf\n\n\n\n\n\n\n\n\nID\nName\nAge\nPhoto\nNationality\nFlag\nOverall\nPotential\nClub\nClub Logo\n...\nSlidingTackle\nGKDiving\nGKHandling\nGKKicking\nGKPositioning\nGKReflexes\nBest Position\nBest Overall Rating\nRelease Clause\nDefensiveAwareness\n\n\n\n\n0\n212198\nBruno Fernandes\n26\nhttps://cdn.sofifa.com/players/212/198/22_60.png\nPortugal\nhttps://cdn.sofifa.com/flags/pt.png\n88\n89\nManchester United\nhttps://cdn.sofifa.com/teams/11/30.png\n...\n65.0\n12.0\n14.0\n15.0\n8.0\n14.0\nCAM\n88.0\n€206.9M\n72.0\n\n\n1\n209658\nL. Goretzka\n26\nhttps://cdn.sofifa.com/players/209/658/22_60.png\nGermany\nhttps://cdn.sofifa.com/flags/de.png\n87\n88\nFC Bayern München\nhttps://cdn.sofifa.com/teams/21/30.png\n...\n77.0\n13.0\n8.0\n15.0\n11.0\n9.0\nCM\n87.0\n€160.4M\n74.0\n\n\n2\n176580\nL. Suárez\n34\nhttps://cdn.sofifa.com/players/176/580/22_60.png\nUruguay\nhttps://cdn.sofifa.com/flags/uy.png\n88\n88\nAtlético de Madrid\nhttps://cdn.sofifa.com/teams/240/30.png\n...\n38.0\n27.0\n25.0\n31.0\n33.0\n37.0\nST\n88.0\n€91.2M\n42.0\n\n\n3\n192985\nK. De Bruyne\n30\nhttps://cdn.sofifa.com/players/192/985/22_60.png\nBelgium\nhttps://cdn.sofifa.com/flags/be.png\n91\n91\nManchester City\nhttps://cdn.sofifa.com/teams/10/30.png\n...\n53.0\n15.0\n13.0\n5.0\n10.0\n13.0\nCM\n91.0\n€232.2M\n68.0\n\n\n4\n224334\nM. Acuña\n29\nhttps://cdn.sofifa.com/players/224/334/22_60.png\nArgentina\nhttps://cdn.sofifa.com/flags/ar.png\n84\n84\nSevilla FC\nhttps://cdn.sofifa.com/teams/481/30.png\n...\n82.0\n8.0\n14.0\n13.0\n13.0\n14.0\nLB\n84.0\n€77.7M\n80.0\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n16705\n240558\n18 L. Clayton\n17\nhttps://cdn.sofifa.com/players/240/558/18_60.png\nEngland\nhttps://cdn.sofifa.com/flags/gb-eng.png\n53\n70\nCheltenham Town\nhttps://cdn.sofifa.com/teams/1936/30.png\n...\n12.0\n55.0\n54.0\n52.0\n50.0\n59.0\nGK\n52.0\n€238K\nNaN\n\n\n16706\n262846\n�. Dobre\n20\nhttps://cdn.sofifa.com/players/262/846/22_60.png\nRomania\nhttps://cdn.sofifa.com/flags/ro.png\n53\n63\nFC Academica Clinceni\nhttps://cdn.sofifa.com/teams/113391/30.png\n...\n12.0\n57.0\n52.0\n53.0\n48.0\n58.0\nGK\n53.0\n€279K\n5.0\n\n\n16707\n241317\n21 Xue Qinghao\n19\nhttps://cdn.sofifa.com/players/241/317/21_60.png\nChina PR\nhttps://cdn.sofifa.com/flags/cn.png\n47\n60\nShanghai Shenhua FC\nhttps://cdn.sofifa.com/teams/110955/30.png\n...\n9.0\n49.0\n48.0\n45.0\n38.0\n52.0\nGK\n47.0\n€223K\n21.0\n\n\n16708\n259646\nA. Shaikh\n18\nhttps://cdn.sofifa.com/players/259/646/22_60.png\nIndia\nhttps://cdn.sofifa.com/flags/in.png\n47\n67\nATK Mohun Bagan FC\nhttps://cdn.sofifa.com/teams/113146/30.png\n...\n13.0\n49.0\n41.0\n39.0\n45.0\n49.0\nGK\n47.0\n€259K\n7.0\n\n\n16709\n178453\n07 A. Censori\n17\nhttps://cdn.sofifa.com/players/178/453/07_60.png\nItaly\nhttps://cdn.sofifa.com/flags/it.png\n28\n38\nArezzo\nhttps://cdn.sofifa.com/teams/110907/30.png\n...\nNaN\n7.0\n1.0\n36.0\n6.0\n9.0\nST\n36.0\nNaN\nNaN\n\n\n\n\n16710 rows × 65 columns\n\n\n\n(1) 연령별로 선수들의 잠재력을 시각화하고 싶다. 여기에서 잠재력은 아래의 수식의 Potential2를 의미한다.\nPotential2 = Potential - Overall\n아래의 세부지침에 맞추어 연령별 Potential2의 산점도와 boxplot을 그려라. – (10점)\n(세부지침)\nstep1: 결측치가 가장 많은 2개의 컬럼을 찾고 이를 제거하라.\nstep2: dropna()를 이용하여 결측치를 제거하라.\nstep3: Potential2 = Potential - Overall 를 이용하여 Potential2를 구하라.\nstep4: 구간 [0,20,22,26,100]를 설정하고 이를 기준으로 Age를 그룹화하라. (총 4개의 그룹으로 나누어져야 한다)\nstep5: 그룹화된 Age를 x축으로, Potential2를 y축으로, 색깔을 그룹화된 Age로 설정한 뒤 산점도와 박스플랏을 겹쳐그려라. - 산점도의 파라메터: alpha=0.5,size=0.1,position=‘jitter’ - 박스플랏의 파라메터: alpha=0.8\n(풀이)\n\ndf.info()\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 16710 entries, 0 to 16709\nData columns (total 65 columns):\n #   Column                    Non-Null Count  Dtype  \n---  ------                    --------------  -----  \n 0   ID                        16710 non-null  int64  \n 1   Name                      16710 non-null  object \n 2   Age                       16710 non-null  int64  \n 3   Photo                     16710 non-null  object \n 4   Nationality               16710 non-null  object \n 5   Flag                      16710 non-null  object \n 6   Overall                   16710 non-null  int64  \n 7   Potential                 16710 non-null  int64  \n 8   Club                      16446 non-null  object \n 9   Club Logo                 16710 non-null  object \n 10  Value                     16710 non-null  object \n 11  Wage                      16710 non-null  object \n 12  Special                   16710 non-null  int64  \n 13  Preferred Foot            16710 non-null  object \n 14  International Reputation  16710 non-null  float64\n 15  Weak Foot                 16710 non-null  float64\n 16  Skill Moves               16710 non-null  float64\n 17  Work Rate                 16710 non-null  object \n 18  Body Type                 16681 non-null  object \n 19  Real Face                 16681 non-null  object \n 20  Position                  16684 non-null  object \n 21  Jersey Number             16684 non-null  float64\n 22  Joined                    15198 non-null  object \n 23  Loaned From               1132 non-null   object \n 24  Contract Valid Until      16359 non-null  object \n 25  Height                    16710 non-null  object \n 26  Weight                    16710 non-null  object \n 27  Crossing                  16710 non-null  float64\n 28  Finishing                 16710 non-null  float64\n 29  HeadingAccuracy           16710 non-null  float64\n 30  ShortPassing              16710 non-null  float64\n 31  Volleys                   16673 non-null  float64\n 32  Dribbling                 16710 non-null  float64\n 33  Curve                     16673 non-null  float64\n 34  FKAccuracy                16710 non-null  float64\n 35  LongPassing               16710 non-null  float64\n 36  BallControl               16710 non-null  float64\n 37  Acceleration              16710 non-null  float64\n 38  SprintSpeed               16710 non-null  float64\n 39  Agility                   16673 non-null  float64\n 40  Reactions                 16710 non-null  float64\n 41  Balance                   16673 non-null  float64\n 42  ShotPower                 16710 non-null  float64\n 43  Jumping                   16673 non-null  float64\n 44  Stamina                   16710 non-null  float64\n 45  Strength                  16710 non-null  float64\n 46  LongShots                 16710 non-null  float64\n 47  Aggression                16710 non-null  float64\n 48  Interceptions             16702 non-null  float64\n 49  Positioning               16702 non-null  float64\n 50  Vision                    16673 non-null  float64\n 51  Penalties                 16710 non-null  float64\n 52  Composure                 16459 non-null  float64\n 53  Marking                   892 non-null    float64\n 54  StandingTackle            16710 non-null  float64\n 55  SlidingTackle             16673 non-null  float64\n 56  GKDiving                  16710 non-null  float64\n 57  GKHandling                16710 non-null  float64\n 58  GKKicking                 16710 non-null  float64\n 59  GKPositioning             16710 non-null  float64\n 60  GKReflexes                16710 non-null  float64\n 61  Best Position             16710 non-null  object \n 62  Best Overall Rating       16710 non-null  float64\n 63  Release Clause            14961 non-null  object \n 64  DefensiveAwareness        15818 non-null  float64\ndtypes: float64(40), int64(5), object(20)\nmemory usage: 8.3+ MB\n\n\n\n’Loaned From’와 ’Marking’이 가장 결측치가 많이 포함되어있음\n\n\ndata1= df.drop(columns=['Loaned From', 'Marking']).dropna()\\\n.eval('Potential2 = Potential- Overall')\\\n.assign(Age = lambda df: pd.cut(df['Age'],[0,20,22,26,100]))\ndata1 \n\n\n\n\n\n\n\n\nID\nName\nAge\nPhoto\nNationality\nFlag\nOverall\nPotential\nClub\nClub Logo\n...\nGKDiving\nGKHandling\nGKKicking\nGKPositioning\nGKReflexes\nBest Position\nBest Overall Rating\nRelease Clause\nDefensiveAwareness\nPotential2\n\n\n\n\n0\n212198\nBruno Fernandes\n(22, 26]\nhttps://cdn.sofifa.com/players/212/198/22_60.png\nPortugal\nhttps://cdn.sofifa.com/flags/pt.png\n88\n89\nManchester United\nhttps://cdn.sofifa.com/teams/11/30.png\n...\n12.0\n14.0\n15.0\n8.0\n14.0\nCAM\n88.0\n€206.9M\n72.0\n1\n\n\n1\n209658\nL. Goretzka\n(22, 26]\nhttps://cdn.sofifa.com/players/209/658/22_60.png\nGermany\nhttps://cdn.sofifa.com/flags/de.png\n87\n88\nFC Bayern München\nhttps://cdn.sofifa.com/teams/21/30.png\n...\n13.0\n8.0\n15.0\n11.0\n9.0\nCM\n87.0\n€160.4M\n74.0\n1\n\n\n2\n176580\nL. Suárez\n(26, 100]\nhttps://cdn.sofifa.com/players/176/580/22_60.png\nUruguay\nhttps://cdn.sofifa.com/flags/uy.png\n88\n88\nAtlético de Madrid\nhttps://cdn.sofifa.com/teams/240/30.png\n...\n27.0\n25.0\n31.0\n33.0\n37.0\nST\n88.0\n€91.2M\n42.0\n0\n\n\n3\n192985\nK. De Bruyne\n(26, 100]\nhttps://cdn.sofifa.com/players/192/985/22_60.png\nBelgium\nhttps://cdn.sofifa.com/flags/be.png\n91\n91\nManchester City\nhttps://cdn.sofifa.com/teams/10/30.png\n...\n15.0\n13.0\n5.0\n10.0\n13.0\nCM\n91.0\n€232.2M\n68.0\n0\n\n\n4\n224334\nM. Acuña\n(26, 100]\nhttps://cdn.sofifa.com/players/224/334/22_60.png\nArgentina\nhttps://cdn.sofifa.com/flags/ar.png\n84\n84\nSevilla FC\nhttps://cdn.sofifa.com/teams/481/30.png\n...\n8.0\n14.0\n13.0\n13.0\n14.0\nLB\n84.0\n€77.7M\n80.0\n0\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n16703\n259718\nF. Gebhardt\n(0, 20]\nhttps://cdn.sofifa.com/players/259/718/22_60.png\nGermany\nhttps://cdn.sofifa.com/flags/de.png\n52\n66\nFC Basel 1893\nhttps://cdn.sofifa.com/teams/896/30.png\n...\n53.0\n45.0\n47.0\n52.0\n57.0\nGK\n52.0\n€361K\n6.0\n14\n\n\n16704\n251433\nB. Voll\n(0, 20]\nhttps://cdn.sofifa.com/players/251/433/22_60.png\nGermany\nhttps://cdn.sofifa.com/flags/de.png\n58\n69\nF.C. Hansa Rostock\nhttps://cdn.sofifa.com/teams/27/30.png\n...\n59.0\n60.0\n56.0\n55.0\n61.0\nGK\n58.0\n€656K\n5.0\n11\n\n\n16706\n262846\n�. Dobre\n(0, 20]\nhttps://cdn.sofifa.com/players/262/846/22_60.png\nRomania\nhttps://cdn.sofifa.com/flags/ro.png\n53\n63\nFC Academica Clinceni\nhttps://cdn.sofifa.com/teams/113391/30.png\n...\n57.0\n52.0\n53.0\n48.0\n58.0\nGK\n53.0\n€279K\n5.0\n10\n\n\n16707\n241317\n21 Xue Qinghao\n(0, 20]\nhttps://cdn.sofifa.com/players/241/317/21_60.png\nChina PR\nhttps://cdn.sofifa.com/flags/cn.png\n47\n60\nShanghai Shenhua FC\nhttps://cdn.sofifa.com/teams/110955/30.png\n...\n49.0\n48.0\n45.0\n38.0\n52.0\nGK\n47.0\n€223K\n21.0\n13\n\n\n16708\n259646\nA. Shaikh\n(0, 20]\nhttps://cdn.sofifa.com/players/259/646/22_60.png\nIndia\nhttps://cdn.sofifa.com/flags/in.png\n47\n67\nATK Mohun Bagan FC\nhttps://cdn.sofifa.com/teams/113146/30.png\n...\n49.0\n41.0\n39.0\n45.0\n49.0\nGK\n47.0\n€259K\n7.0\n20\n\n\n\n\n14398 rows × 64 columns\n\n\n\n\nfig = ggplot(data=data1)\nscatter = geom_point(aes(x='Age',y='Potential2',colour='Age'),alpha=0.5,size=0.1,position='jitter')\nboxplot = geom_boxplot(aes(x='Age',y='Potential2',colour='Age'),alpha=0.8)\nfig+scatter+boxplot\n\n\n\n\n\n\n\n\n\n채점기준: Age의 Label을 사용하지 않아도 만점으로 인정함.\n\n(2) 포지션별로 선수들의 능력치와 Wage를 시각화하고 싶다. 아래의 dictionary를 이용하여 Position을 재정의하라.\n\nposition_dict = {\n    'GOALKEEPER':{'GK'},\n    'DEFENDER':{'CB','RCB','LCB','RB','LB','RWB','LWB'},\n    'MIDFIELDER':{'CM','RCM','LCM','CDM','RDM','LDM','CAM','RAM','LAM','RM','LM'},\n    'FORWARD':{'ST','CF','RF','LF','RW','LW','RS','LS'},\n    'SUB':{'SUB'},\n    'RES':{'RES'}\n}\nposition_dict\n\n{'GOALKEEPER': {'GK'},\n 'DEFENDER': {'CB', 'LB', 'LCB', 'LWB', 'RB', 'RCB', 'RWB'},\n 'MIDFIELDER': {'CAM',\n  'CDM',\n  'CM',\n  'LAM',\n  'LCM',\n  'LDM',\n  'LM',\n  'RAM',\n  'RCM',\n  'RDM',\n  'RM'},\n 'FORWARD': {'CF', 'LF', 'LS', 'LW', 'RF', 'RS', 'RW', 'ST'},\n 'SUB': {'SUB'},\n 'RES': {'RES'}}\n\n\n아래의 세부지침에 맞추어 포지션별 ShotPower와 SlidingTackle의 산점도를 그려라. – (30점)\n세부지침\nstep1: 결측치가 가장 많은 2개의 컬럼을 찾고 이를 제거하라.\nstep2: dropna()를 이용하여 결측치를 제거하라.\nstep3: hint1과 position_dict을 참고하여 Position을 적절하게 변환하라. (변환된 값을 Position으로 저장할 것)\nstep4: hint2를 참고하여 Wage를 적절하게 변환하라. (변환된 값을 Wage에 저장할 것)\nstep5: Position==“DEFENDER” or Position==“FORWARD”에 해당하는 관측치를 고른 뒤 x축에 ShotPower, y축에 SlidingTackle 을 시각화하라. Position은 color로 구분하고 Wage는 size와 alpha로 구분하라.\nhint1: Position column의 변환을 위한 코드\n\n'&lt;span class=\"pos pos18\"&gt;CAM'.split('&gt;')\n\n['&lt;span class=\"pos pos18\"', 'CAM']\n\n\nhint2: Wage column의 변환을 위한 함수\n\ndef f(x):\n    if x[-1] == 'K' :\n        y= float(x[1:-1])*1000\n    elif x[-1] == 'M' : \n        y= float(x[1:-1])*1000000\n    else:\n        y= 0 \n    return y \n\n(풀이)\n\ndata2=df.drop(columns=['Loaned From', 'Marking']).dropna()\\\n.assign(Wage = lambda df: list(map(f,df['Wage'])))\\\n.assign(Position = lambda df: list(map(lambda x: x.split('&gt;')[-1], df.Position)))\\\n.assign(Position = lambda df: \n        [key for x in df.Position for key in position_dict if x in position_dict[key]]\n       )\ndata2\n\n\n\n\n\n\n\n\nID\nName\nAge\nPhoto\nNationality\nFlag\nOverall\nPotential\nClub\nClub Logo\n...\nSlidingTackle\nGKDiving\nGKHandling\nGKKicking\nGKPositioning\nGKReflexes\nBest Position\nBest Overall Rating\nRelease Clause\nDefensiveAwareness\n\n\n\n\n0\n212198\nBruno Fernandes\n26\nhttps://cdn.sofifa.com/players/212/198/22_60.png\nPortugal\nhttps://cdn.sofifa.com/flags/pt.png\n88\n89\nManchester United\nhttps://cdn.sofifa.com/teams/11/30.png\n...\n65.0\n12.0\n14.0\n15.0\n8.0\n14.0\nCAM\n88.0\n€206.9M\n72.0\n\n\n1\n209658\nL. Goretzka\n26\nhttps://cdn.sofifa.com/players/209/658/22_60.png\nGermany\nhttps://cdn.sofifa.com/flags/de.png\n87\n88\nFC Bayern München\nhttps://cdn.sofifa.com/teams/21/30.png\n...\n77.0\n13.0\n8.0\n15.0\n11.0\n9.0\nCM\n87.0\n€160.4M\n74.0\n\n\n2\n176580\nL. Suárez\n34\nhttps://cdn.sofifa.com/players/176/580/22_60.png\nUruguay\nhttps://cdn.sofifa.com/flags/uy.png\n88\n88\nAtlético de Madrid\nhttps://cdn.sofifa.com/teams/240/30.png\n...\n38.0\n27.0\n25.0\n31.0\n33.0\n37.0\nST\n88.0\n€91.2M\n42.0\n\n\n3\n192985\nK. De Bruyne\n30\nhttps://cdn.sofifa.com/players/192/985/22_60.png\nBelgium\nhttps://cdn.sofifa.com/flags/be.png\n91\n91\nManchester City\nhttps://cdn.sofifa.com/teams/10/30.png\n...\n53.0\n15.0\n13.0\n5.0\n10.0\n13.0\nCM\n91.0\n€232.2M\n68.0\n\n\n4\n224334\nM. Acuña\n29\nhttps://cdn.sofifa.com/players/224/334/22_60.png\nArgentina\nhttps://cdn.sofifa.com/flags/ar.png\n84\n84\nSevilla FC\nhttps://cdn.sofifa.com/teams/481/30.png\n...\n82.0\n8.0\n14.0\n13.0\n13.0\n14.0\nLB\n84.0\n€77.7M\n80.0\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n16703\n259718\nF. Gebhardt\n19\nhttps://cdn.sofifa.com/players/259/718/22_60.png\nGermany\nhttps://cdn.sofifa.com/flags/de.png\n52\n66\nFC Basel 1893\nhttps://cdn.sofifa.com/teams/896/30.png\n...\n10.0\n53.0\n45.0\n47.0\n52.0\n57.0\nGK\n52.0\n€361K\n6.0\n\n\n16704\n251433\nB. Voll\n20\nhttps://cdn.sofifa.com/players/251/433/22_60.png\nGermany\nhttps://cdn.sofifa.com/flags/de.png\n58\n69\nF.C. Hansa Rostock\nhttps://cdn.sofifa.com/teams/27/30.png\n...\n10.0\n59.0\n60.0\n56.0\n55.0\n61.0\nGK\n58.0\n€656K\n5.0\n\n\n16706\n262846\n�. Dobre\n20\nhttps://cdn.sofifa.com/players/262/846/22_60.png\nRomania\nhttps://cdn.sofifa.com/flags/ro.png\n53\n63\nFC Academica Clinceni\nhttps://cdn.sofifa.com/teams/113391/30.png\n...\n12.0\n57.0\n52.0\n53.0\n48.0\n58.0\nGK\n53.0\n€279K\n5.0\n\n\n16707\n241317\n21 Xue Qinghao\n19\nhttps://cdn.sofifa.com/players/241/317/21_60.png\nChina PR\nhttps://cdn.sofifa.com/flags/cn.png\n47\n60\nShanghai Shenhua FC\nhttps://cdn.sofifa.com/teams/110955/30.png\n...\n9.0\n49.0\n48.0\n45.0\n38.0\n52.0\nGK\n47.0\n€223K\n21.0\n\n\n16708\n259646\nA. Shaikh\n18\nhttps://cdn.sofifa.com/players/259/646/22_60.png\nIndia\nhttps://cdn.sofifa.com/flags/in.png\n47\n67\nATK Mohun Bagan FC\nhttps://cdn.sofifa.com/teams/113146/30.png\n...\n13.0\n49.0\n41.0\n39.0\n45.0\n49.0\nGK\n47.0\n€259K\n7.0\n\n\n\n\n14398 rows × 63 columns\n\n\n\n\nfig = ggplot(data=data2.query('Position==\"DEFENDER\" or Position==\"FORWARD\"'))\nscatter = geom_point(aes(x='ShotPower',y='SlidingTackle',color='Position',size='Wage',alpha='Wage'))\nfig+scatter\n\n\n\n\n\n\n\n\n\n채점기준: df[‘Position’]이 아니라 df[‘Best Position’]을 이용하여 자료를 변형하고 시각화 하는 경우 부분점수 없이 0점임"
  },
  {
    "objectID": "posts/2022-10-30-9wk-1-mid.html#자료분석-및-시각화-ii-20점-hrdataset_v14",
    "href": "posts/2022-10-30-9wk-1-mid.html#자료분석-및-시각화-ii-20점-hrdataset_v14",
    "title": "midterm",
    "section": "5. 자료분석 및 시각화 II (20점) – HRDataset_v14",
    "text": "5. 자료분석 및 시각화 II (20점) – HRDataset_v14\n아래의 코드를 활용하여 Kaggle의 HRdataset을 불러오고 물음에 답하라.\n\ndf = pd.read_csv('https://raw.githubusercontent.com/guebin/DV2022/master/posts/HRDataset_v14.csv')\ndf\n\n\n\n\n\n\n\n\nEmployee_Name\nEmpID\nMarriedID\nMaritalStatusID\nGenderID\nEmpStatusID\nDeptID\nPerfScoreID\nFromDiversityJobFairID\nSalary\n...\nManagerName\nManagerID\nRecruitmentSource\nPerformanceScore\nEngagementSurvey\nEmpSatisfaction\nSpecialProjectsCount\nLastPerformanceReview_Date\nDaysLateLast30\nAbsences\n\n\n\n\n0\nAdinolfi, Wilson K\n10026\n0\n0\n1\n1\n5\n4\n0\n62506\n...\nMichael Albert\n22.0\nLinkedIn\nExceeds\n4.60\n5\n0\n1/17/2019\n0\n1\n\n\n1\nAit Sidi, Karthikeyan\n10084\n1\n1\n1\n5\n3\n3\n0\n104437\n...\nSimon Roup\n4.0\nIndeed\nFully Meets\n4.96\n3\n6\n2/24/2016\n0\n17\n\n\n2\nAkinkuolie, Sarah\n10196\n1\n1\n0\n5\n5\n3\n0\n64955\n...\nKissy Sullivan\n20.0\nLinkedIn\nFully Meets\n3.02\n3\n0\n5/15/2012\n0\n3\n\n\n3\nAlagbe,Trina\n10088\n1\n1\n0\n1\n5\n3\n0\n64991\n...\nElijiah Gray\n16.0\nIndeed\nFully Meets\n4.84\n5\n0\n1/3/2019\n0\n15\n\n\n4\nAnderson, Carol\n10069\n0\n2\n0\n5\n5\n3\n0\n50825\n...\nWebster Butler\n39.0\nGoogle Search\nFully Meets\n5.00\n4\n0\n2/1/2016\n0\n2\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n306\nWoodson, Jason\n10135\n0\n0\n1\n1\n5\n3\n0\n65893\n...\nKissy Sullivan\n20.0\nLinkedIn\nFully Meets\n4.07\n4\n0\n2/28/2019\n0\n13\n\n\n307\nYbarra, Catherine\n10301\n0\n0\n0\n5\n5\n1\n0\n48513\n...\nBrannon Miller\n12.0\nGoogle Search\nPIP\n3.20\n2\n0\n9/2/2015\n5\n4\n\n\n308\nZamora, Jennifer\n10010\n0\n0\n0\n1\n3\n4\n0\n220450\n...\nJanet King\n2.0\nEmployee Referral\nExceeds\n4.60\n5\n6\n2/21/2019\n0\n16\n\n\n309\nZhou, Julia\n10043\n0\n0\n0\n1\n3\n3\n0\n89292\n...\nSimon Roup\n4.0\nEmployee Referral\nFully Meets\n5.00\n3\n5\n2/1/2019\n0\n11\n\n\n310\nZima, Colleen\n10271\n0\n4\n0\n1\n5\n3\n0\n45046\n...\nDavid Stanley\n14.0\nLinkedIn\nFully Meets\n4.50\n5\n0\n1/30/2019\n0\n2\n\n\n\n\n311 rows × 36 columns\n\n\n\n(1) 데이터를 조사하고 올바르게 분석한 사람을 모두 고르라. (모두 맞칠경우만 정답으로 인정)\n\n소윤: 근무인원수가 가장 많은 인종(RaceDesc)은 ’White’이며 이는 ’Asian’인종과 ’Black or African American’의 합보다 많다.\n다호: ’RaceDesc==White’의 성별(Sex)임금차이는 2000이상이다.\n하니: 퇴직한사람(Termd==1)은 모두 104명이며 백인여성의 퇴직자수가 가장 많다.\n도한: 퇴직한사람중 아시아인의 비율은 10%가 넘지 않는다.\n\n(풀이)\n모두 참이다.\n데이터조사\n\ndf.info()\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 311 entries, 0 to 310\nData columns (total 36 columns):\n #   Column                      Non-Null Count  Dtype  \n---  ------                      --------------  -----  \n 0   Employee_Name               311 non-null    object \n 1   EmpID                       311 non-null    int64  \n 2   MarriedID                   311 non-null    int64  \n 3   MaritalStatusID             311 non-null    int64  \n 4   GenderID                    311 non-null    int64  \n 5   EmpStatusID                 311 non-null    int64  \n 6   DeptID                      311 non-null    int64  \n 7   PerfScoreID                 311 non-null    int64  \n 8   FromDiversityJobFairID      311 non-null    int64  \n 9   Salary                      311 non-null    int64  \n 10  Termd                       311 non-null    int64  \n 11  PositionID                  311 non-null    int64  \n 12  Position                    311 non-null    object \n 13  State                       311 non-null    object \n 14  Zip                         311 non-null    int64  \n 15  DOB                         311 non-null    object \n 16  Sex                         311 non-null    object \n 17  MaritalDesc                 311 non-null    object \n 18  CitizenDesc                 311 non-null    object \n 19  HispanicLatino              311 non-null    object \n 20  RaceDesc                    311 non-null    object \n 21  DateofHire                  311 non-null    object \n 22  DateofTermination           104 non-null    object \n 23  TermReason                  311 non-null    object \n 24  EmploymentStatus            311 non-null    object \n 25  Department                  311 non-null    object \n 26  ManagerName                 311 non-null    object \n 27  ManagerID                   303 non-null    float64\n 28  RecruitmentSource           311 non-null    object \n 29  PerformanceScore            311 non-null    object \n 30  EngagementSurvey            311 non-null    float64\n 31  EmpSatisfaction             311 non-null    int64  \n 32  SpecialProjectsCount        311 non-null    int64  \n 33  LastPerformanceReview_Date  311 non-null    object \n 34  DaysLateLast30              311 non-null    int64  \n 35  Absences                    311 non-null    int64  \ndtypes: float64(2), int64(16), object(18)\nmemory usage: 87.6+ KB\n\n\n\nEmpID가 missing이 없는 열임\n\n소윤: 근무인원수가 가장 많은 인종(RaceDesc)은 ’White’이며 이는 ’Asian’인종과 ’Black or African American’의 합보다 많다. — 참\n\ndf.groupby(by='RaceDesc').agg({'EmpID':len})\n\n\n\n\n\n\n\n\nEmpID\n\n\nRaceDesc\n\n\n\n\n\nAmerican Indian or Alaska Native\n3\n\n\nAsian\n29\n\n\nBlack or African American\n80\n\n\nHispanic\n1\n\n\nTwo or more races\n11\n\n\nWhite\n187\n\n\n\n\n\n\n\n\n29+80\n\n109\n\n\n다호: ’RaceDesc==White’의 성별(Sex)임금차이는 2000이상이다. — 참\n\ndf.groupby(by=['RaceDesc','Sex']).agg({'Salary':np.mean})\n\n\n\n\n\n\n\n\n\nSalary\n\n\nRaceDesc\nSex\n\n\n\n\n\nAmerican Indian or Alaska Native\nF\n63436.500000\n\n\nM\n70545.000000\n\n\nAsian\nF\n67520.117647\n\n\nM\n69939.416667\n\n\nBlack or African American\nF\n66963.829787\n\n\nM\n85066.121212\n\n\nHispanic\nM\n83667.000000\n\n\nTwo or more races\nF\n58068.500000\n\n\nM\n62313.800000\n\n\nWhite\nF\n68846.519231\n\n\nM\n65334.132530\n\n\n\n\n\n\n\n\n68846.519231 - 65334.132530\n\n3512.386700999996\n\n\n하니: 퇴직한사람(Termd==1)은 모두 104명이며 백인여성의 퇴직자수가 가장 많다. — 참\n\n(df.Termd==1).sum()\n\n104\n\n\n\ndf.groupby(by=['RaceDesc','Sex']).agg({'Termd':np.sum})\n\n\n\n\n\n\n\n\n\nTermd\n\n\nRaceDesc\nSex\n\n\n\n\n\nAmerican Indian or Alaska Native\nF\n0\n\n\nM\n0\n\n\nAsian\nF\n6\n\n\nM\n3\n\n\nBlack or African American\nF\n15\n\n\nM\n14\n\n\nHispanic\nM\n0\n\n\nTwo or more races\nF\n2\n\n\nM\n1\n\n\nWhite\nF\n37\n\n\nM\n26\n\n\n\n\n\n\n\n도한: 퇴직한사람중 아시아인의 비율은 10%가 넘지 않는다. — 참\n\n(df.Termd==1).sum()\n\n104\n\n\n\ndf.groupby(by=['RaceDesc']).agg({'Termd':np.sum})\n\n\n\n\n\n\n\n\nTermd\n\n\nRaceDesc\n\n\n\n\n\nAmerican Indian or Alaska Native\n0\n\n\nAsian\n9\n\n\nBlack or African American\n29\n\n\nHispanic\n0\n\n\nTwo or more races\n3\n\n\nWhite\n63\n\n\n\n\n\n\n\n\n9/104\n\n0.08653846153846154\n\n\n(2) White, Black or African American, Asian 인종(RaceDesc)에 대하여 남여급여차이를 조사하고자 한다. 아래와 같은 Boxplot을 생성하라.\n(풀이)\n\nggplot(data=df.query('RaceDesc == \"White\" or RaceDesc == \"Black or African American\" or RaceDesc == \"Asian\"'))\\\n+geom_boxplot(aes(x='RaceDesc',y='Salary',color='Sex'))"
  },
  {
    "objectID": "posts/2022-10-03-5wk-1.html",
    "href": "posts/2022-10-03-5wk-1.html",
    "title": "05wk-1",
    "section": "",
    "text": "seaborn(2)–scatterplot, mpl미세먼지팁(2)"
  },
  {
    "objectID": "posts/2022-10-03-5wk-1.html#plt-복습",
    "href": "posts/2022-10-03-5wk-1.html#plt-복습",
    "title": "05wk-1",
    "section": "plt 복습",
    "text": "plt 복습\n\nplt.plot(x1,y1,'o')\nplt.plot(x2,y2,'o')"
  },
  {
    "objectID": "posts/2022-10-03-5wk-1.html#sns-array",
    "href": "posts/2022-10-03-5wk-1.html#sns-array",
    "title": "05wk-1",
    "section": "sns: array",
    "text": "sns: array\n\nsns.scatterplot(data=None,x=x1,y=y1)\nsns.scatterplot(data=None,x=x2,y=y2)"
  },
  {
    "objectID": "posts/2022-10-03-5wk-1.html#sns-wide-df",
    "href": "posts/2022-10-03-5wk-1.html#sns-wide-df",
    "title": "05wk-1",
    "section": "sns: wide df",
    "text": "sns: wide df\n\nsns.scatterplot(data=pd.DataFrame({'x':x1,'y':y1}),x='x',y='y')\nsns.scatterplot(data=pd.DataFrame({'x':x2,'y':y2}),x='x',y='y')\n#sns.scatterplot(data=None,x=x2,y=y2)\n\n\n\n\n\n\n\n\n\n억지로 그리긴 했는데 이 경우는 wide하게 만든 df는 별로 경쟁력이 없음"
  },
  {
    "objectID": "posts/2022-10-03-5wk-1.html#sns-long-df",
    "href": "posts/2022-10-03-5wk-1.html#sns-long-df",
    "title": "05wk-1",
    "section": "sns: long df",
    "text": "sns: long df\n\nx= np.concatenate([x1,x2])\ny= np.concatenate([y1,y2])\ncat = ['x1']*len(x1) + ['x2']*len(x2)\ndf2 = pd.DataFrame({'x':x,'y':y,'cat':cat})\ndf2\n\n\n\n\n\n\n\n\nx\ny\ncat\n\n\n\n\n0\n2.023919\n-0.400176\nx1\n\n\n1\n1.229622\n-1.763752\nx1\n\n\n2\n-0.413211\n2.293004\nx1\n\n\n3\n-1.343073\n0.404232\nx1\n\n\n4\n1.062845\n0.030775\nx1\n\n\n...\n...\n...\n...\n\n\n1995\n2.226805\n3.683857\nx2\n\n\n1996\n2.768263\n2.678292\nx2\n\n\n1997\n2.525295\n2.815478\nx2\n\n\n1998\n1.750193\n2.289812\nx2\n\n\n1999\n1.153290\n2.095922\nx2\n\n\n\n\n2000 rows × 3 columns\n\n\n\n\nsns.scatterplot(data=df2,x='x',y='y',hue='cat')"
  },
  {
    "objectID": "posts/2022-10-03-5wk-1.html#예제1",
    "href": "posts/2022-10-03-5wk-1.html#예제1",
    "title": "05wk-1",
    "section": "예제1",
    "text": "예제1\n\nfig,ax = plt.subplots(1,3,figsize=(12,4))\nax[0].plot([1,2,4,3],'--o')\nsns.scatterplot(x=x1,y=y1,ax=ax[1])\nsns.scatterplot(x=x1,y=y1,ax=ax[2])\nsns.scatterplot(x=x2,y=y2,ax=ax[2])\nax[2].plot([1,2,4,3],'-r',lw=5)"
  },
  {
    "objectID": "posts/2022-10-03-5wk-1.html#예제2",
    "href": "posts/2022-10-03-5wk-1.html#예제2",
    "title": "05wk-1",
    "section": "예제2",
    "text": "예제2\n\nimport cv2\n\n\n!wget https://upload.wikimedia.org/wikipedia/commons/0/08/Unequalized_Hawkes_Bay_NZ.jpg \nimg = cv2.imread('Unequalized_Hawkes_Bay_NZ.jpg',0)\n!rm Unequalized_Hawkes_Bay_NZ.jpg \n\n--2022-10-05 16:33:56--  https://upload.wikimedia.org/wikipedia/commons/0/08/Unequalized_Hawkes_Bay_NZ.jpg\nResolving upload.wikimedia.org (upload.wikimedia.org)... 103.102.166.240, 2001:df2:e500:ed1a::2:b\nConnecting to upload.wikimedia.org (upload.wikimedia.org)|103.102.166.240|:443... connected.\nHTTP request sent, awaiting response... 200 OK\nLength: 110895 (108K) [image/jpeg]\nSaving to: ‘Unequalized_Hawkes_Bay_NZ.jpg’\n\nUnequalized_Hawkes_ 100%[===================&gt;] 108.30K   548KB/s    in 0.2s    \n\n2022-10-05 16:33:57 (548 KB/s) - ‘Unequalized_Hawkes_Bay_NZ.jpg’ saved [110895/110895]\n\n\n\n\nimg2 = cv2.equalizeHist(img)\n\n\nimg.reshape(-1)\n\narray([127, 145, 149, ..., 146, 145, 144], dtype=uint8)\n\n\n\nfig,ax = plt.subplots(2,2,figsize=(10,5))\nax[0,0].imshow(img,vmin=0,vmax=255,cmap='gray')\nsns.histplot(img.reshape(-1),ax=ax[0,1],bins=15,lw=0,kde=True,color='C1')\nax[0,1].set_xlim(0,255)\nax[1,0].imshow(img2,vmin=0,vmax=255,cmap='gray')\nsns.histplot(img2.reshape(-1),ax=ax[1,1],bins=15,lw=0,kde=True,color='C1')\n\n\n\n\n\n\n\n\n- seaborn: figure-level vs axes-level 의 개념\nref: https://seaborn.pydata.org/tutorial/function_overview.html#figure-level-vs-axes-level-functions"
  },
  {
    "objectID": "posts/2022-10-03-5wk-1.html#축-간격조정",
    "href": "posts/2022-10-03-5wk-1.html#축-간격조정",
    "title": "05wk-1",
    "section": "축 간격조정",
    "text": "축 간격조정\n\nimport matplotlib as mpl\n\n\nfig, ax = plt.subplots()\nax.plot([(xi/30)**2 for xi in range(30)],'--o')\nax.xaxis.set_major_locator(mpl.ticker.MultipleLocator(3)) # 큰 눈금간격을 3으로\nax.xaxis.set_minor_locator(mpl.ticker.MultipleLocator(1)) # 작은 눈금간격을 1로"
  },
  {
    "objectID": "posts/2022-10-03-5wk-1.html#축-삭제",
    "href": "posts/2022-10-03-5wk-1.html#축-삭제",
    "title": "05wk-1",
    "section": "축 삭제",
    "text": "축 삭제\n\nfig, ax = plt.subplots()\nax.plot([(xi/30)**2 for xi in range(30)],'--o')\nax.xaxis.set_major_locator(mpl.ticker.NullLocator()) # x축 눈금삭제\nax.yaxis.set_major_locator(mpl.ticker.NullLocator()) # y축 눈금삭제"
  },
  {
    "objectID": "posts/2022-10-03-5wk-1.html#축-범위조정",
    "href": "posts/2022-10-03-5wk-1.html#축-범위조정",
    "title": "05wk-1",
    "section": "축 범위조정",
    "text": "축 범위조정\n\nfig, ax = plt.subplots()\nax.plot([(xi/30)**2 for xi in range(30)],'--o')\nax.set_ylim(-1,2) \nax.set_xlim(-5,35)\n#plt.ylim(-1,2)\n#plt.xlim(-5,35)"
  },
  {
    "objectID": "posts/2022-10-03-5wk-1.html#gcf-gca",
    "href": "posts/2022-10-03-5wk-1.html#gcf-gca",
    "title": "05wk-1",
    "section": "gcf, gca",
    "text": "gcf, gca\n- gcf\n\nplt.plot([1,2,3,2])\nfig = plt.gcf()\n\n\n\n\n\n\n\n\n\nfig.suptitle('suptitle')\n\nText(0.5, 0.98, 'suptitle')\n\n\n\nfig\n\n\n\n\n\n\n\n\n- gca\n\nfig\n\n\n\n\n\n\n\n\n\nax = fig.gca()\n\n\nax.set_title('title') \nfig"
  },
  {
    "objectID": "posts/2022-09-26-4wk-1.html",
    "href": "posts/2022-09-26-4wk-1.html",
    "title": "04wk-1",
    "section": "",
    "text": "산점도 응용예제 4 (무상관과 독립), mpl의 미세먼지 팁 (1)"
  },
  {
    "objectID": "posts/2022-09-26-4wk-1.html#예제자료",
    "href": "posts/2022-09-26-4wk-1.html#예제자료",
    "title": "04wk-1",
    "section": "예제자료",
    "text": "예제자료\n예시1: 사각형\n\nx1 = np.random.uniform(low=-1,high=1,size=10000)\ny1 = np.random.uniform(low=-1,high=1,size=10000)\n\n\nplt.plot(x1,y1,',')\n\n\n\n\n\n\n\n\n예시2: 원\n\n_r2 = x1**2+y1**2\n\n\nx2=x1[_r2&lt;1]\ny2=y1[_r2&lt;1]\n\n\nplt.plot(x2,y2,',')\n\n\n\n\n\n\n\n\n예시3: 이변량정규분포\n\nx3 = np.random.randn(10000)\ny3 = np.random.randn(10000)\n\n\nplt.plot(x3,y3,',')"
  },
  {
    "objectID": "posts/2022-09-26-4wk-1.html#상관계수",
    "href": "posts/2022-09-26-4wk-1.html#상관계수",
    "title": "04wk-1",
    "section": "상관계수",
    "text": "상관계수\n- 예시1, 예시2, 예시3의 산점도를 보고 상관계수가 얼마인지 예상해보라. 실제 계산결과와 확인하라.\n\nnp.corrcoef([x1,y1])\n\narray([[ 1.        , -0.00255095],\n       [-0.00255095,  1.        ]])\n\n\n\nnp.corrcoef([x2,y2])\n\narray([[ 1.        , -0.01437794],\n       [-0.01437794,  1.        ]])\n\n\n\nnp.corrcoef([x3,y3])\n\narray([[ 1.        , -0.02282708],\n       [-0.02282708,  1.        ]])"
  },
  {
    "objectID": "posts/2022-09-26-4wk-1.html#독립",
    "href": "posts/2022-09-26-4wk-1.html#독립",
    "title": "04wk-1",
    "section": "독립",
    "text": "독립\n- 예시1,2,3 중 독립인것은 무엇인가?\n- 예시1 vs 예시2\n\nfig, ax = plt.subplots(1,2,figsize=(8,4)) \nax[0].plot(x1,y1,',',color='gray')\nax[1].plot(x2,y2,',',color='gray')\n\n\n\n\n\n\n\n\n\ndef g(intval, data, ax, col = 'r'):\n    a,b = intval\n    x,y = data\n    idx = (a&lt;x)&(x&lt;b) \n    ax.plot(x[idx],y[idx],',',color=col)\n\n\ng([-0.1,0.1],[x1,y1],ax[0])\ng([-0.1,0.1],[x2,y2],ax[1])\nfig\n\n\n\n\n\n\n\n\n\ng([0.79,0.99],[x1,y1],ax[0],col='b')\ng([0.79,0.99],[x2,y2],ax[1],col='b')\nfig\n\n\n\n\n\n\n\n\n- 예시3\n\nfig,ax = plt.subplots()\nax.plot(x3,y3,',',color='gray')\n\n\n\n\n\n\n\n\n\ng([-2.5,-1.5],[x3,y3],ax,col='r')\ng([-0.5,+0.5],[x3,y3],ax,col='b')\ng([+1.5,+2.5],[x3,y3],ax,col='g')\nfig\n\n\n\n\n\n\n\n\n\ndef h(intval, data, ax, col):\n    a,b = intval\n    x,y = data \n    idx = (a&lt;x) & (x&lt;b) \n    ax.hist(y[idx],color=col) \n\n\nfig,ax = plt.subplots(5,2,figsize=(8,16))\nax[0,0].plot(x3,y3,',',color='gray'); g([-2.5,-1.5],[x3,y3],ax[0,0],col='r')\nax[1,0].plot(x3,y3,',',color='gray'); g([-1.5,-0.5],[x3,y3],ax[1,0],col='g')\nax[2,0].plot(x3,y3,',',color='gray'); g([-0.5,+0.5],[x3,y3],ax[2,0],col='b')\nax[3,0].plot(x3,y3,',',color='gray'); g([+0.5,+1.5],[x3,y3],ax[3,0],col='m')\nax[4,0].plot(x3,y3,',',color='gray'); g([+1.5,+2.5],[x3,y3],ax[4,0],col='lime')\n\nh([-2.5,-1.5],[x3,y3],ax[0,1],col='r')\nh([-1.5,-0.5],[x3,y3],ax[1,1],col='g')\nh([-0.5,+0.5],[x3,y3],ax[2,1],col='b')\nh([+0.5,+1.5],[x3,y3],ax[3,1],col='m')\nh([+1.5,+2.5],[x3,y3],ax[4,1],col='lime')"
  },
  {
    "objectID": "posts/2022-09-26-4wk-1.html#그림만-보고-싶을때",
    "href": "posts/2022-09-26-4wk-1.html#그림만-보고-싶을때",
    "title": "04wk-1",
    "section": "그림만 보고 싶을때",
    "text": "그림만 보고 싶을때\n\nplt.plot([1,2,3,4],[2,3,4,5]);"
  },
  {
    "objectID": "posts/2022-09-26-4wk-1.html#marker-size-line-width",
    "href": "posts/2022-09-26-4wk-1.html#marker-size-line-width",
    "title": "04wk-1",
    "section": "marker size, line width",
    "text": "marker size, line width\n\nplt.plot([1,2,3,4],[2,3,4,2],'o',ms=10)\n\n\n\n\n\n\n\n\n\nplt.plot([1,2,3,4],[2,3,4,5],'--',lw=10)"
  },
  {
    "objectID": "posts/2022-09-26-4wk-1.html#label-legend",
    "href": "posts/2022-09-26-4wk-1.html#label-legend",
    "title": "04wk-1",
    "section": "label + legend",
    "text": "label + legend\n\nplt.plot([1,2,3,4],[1,2,3,2],'--o',label='A')\nplt.plot([1,2,3,4],[3,2.1,1,3],'--o',label='B')\nplt.legend()"
  },
  {
    "objectID": "posts/2022-09-26-4wk-1.html#색깔조정-c0c1",
    "href": "posts/2022-09-26-4wk-1.html#색깔조정-c0c1",
    "title": "04wk-1",
    "section": "색깔조정 (C0,C1,…)",
    "text": "색깔조정 (C0,C1,…)\n\nplt.plot([1,2,3,4],[1,2,3,2],'--o',label='A',color='C1')\nplt.plot([1,2,3,4],[3,2.1,1,3],'--o',label='B',color='C0')\nplt.legend()"
  },
  {
    "objectID": "posts/2022-09-26-4wk-1.html#title-설정",
    "href": "posts/2022-09-26-4wk-1.html#title-설정",
    "title": "04wk-1",
    "section": "title 설정",
    "text": "title 설정\n- (방법1)\n\nplt.plot([1,2,3,4],[1,2,3,2],'--o',label='A',color='C1')\nplt.plot([1,2,3,4],[3,2.1,1,3],'--o',label='B',color='C0')\nplt.legend()\nplt.title('title')\n\nText(0.5, 1.0, 'title')\n\n\n\n\n\n\n\n\n\n- (방법2)\n\nfig, ax = plt.subplots()\nax.plot([1,2,3,4],[1,2,3,2],'--o',label='A',color='C1')\nax.plot([1,2,3,4],[3,2.1,1,3],'--o',label='B',color='C0')\nax.legend()\nax.set_title('title')\n\nText(0.5, 1.0, 'title')"
  },
  {
    "objectID": "posts/2022-09-26-4wk-1.html#suptitle-설정",
    "href": "posts/2022-09-26-4wk-1.html#suptitle-설정",
    "title": "04wk-1",
    "section": "suptitle 설정",
    "text": "suptitle 설정\n\nfig, ax = plt.subplots(2,2)\nax[0,0].plot([1,2,3,2],'--o',label='A',color='C0')\nax[0,0].set_title('(a)')\nax[0,1].plot([3,2.1,1,3],'--o',label='B',color='C1')\nax[0,1].set_title('(b)')\nax[1,0].plot([-3,-2.1,-1,-3],'--o',label='B',color='C2')\nax[1,0].set_title('(c)')\nax[1,1].plot([3,-2.1,1,-3],'--o',label='B',color='C3')\nax[1,1].set_title('(d)')\n#plt.suptitle('suptitle')\nfig.suptitle('suptitle')\n\nText(0.5, 0.98, 'suptitle')"
  },
  {
    "objectID": "posts/2022-09-26-4wk-1.html#tight_layout",
    "href": "posts/2022-09-26-4wk-1.html#tight_layout",
    "title": "04wk-1",
    "section": "tight_layout()",
    "text": "tight_layout()\n\nfig\n\n\n\n\n\n\n\n\n\nfig.tight_layout()\n\n\nfig"
  },
  {
    "objectID": "posts/2022-09-26-4wk-1.html#fig-ax-plt-소속",
    "href": "posts/2022-09-26-4wk-1.html#fig-ax-plt-소속",
    "title": "04wk-1",
    "section": "fig, ax, plt 소속",
    "text": "fig, ax, plt 소속\n- 일단 그림 하나 그리고 이야기좀 해보자.\n\nfig, ax = plt.subplots()\nax.plot([1,2,3,1])\n\n\n\n\n\n\n\n\n- fig에는 있고 ax에는 없는 것\nadd_axes, tight_layout, suptitle, …\n- ax에는 있고 fig에는 없는 것\nboxplot, hist, plot, set_title, …\n- plt는 대부분 다 있음. (의미상 명확한건 대충 알아서 fig, ax에 접근해서 처리해준다)\n\nplt.tight_layout, plt.suptitle, plt.boxplot, plt.hist, plot.plot\nplt.set_title 은 없지만 plt.title 은 있음\nplt.add_axes 는 없음.."
  },
  {
    "objectID": "posts/2022-09-26-4wk-1.html#x축-y축-label-설정",
    "href": "posts/2022-09-26-4wk-1.html#x축-y축-label-설정",
    "title": "04wk-1",
    "section": "x축, y축 label 설정",
    "text": "x축, y축 label 설정\n\nax.xaxis.set_label_text('xlabel',size=16,family='serif',weight=1000,style='italic')\n#_fontsettings={'size':16,'family':'serif','weight'=1000,'style':'italic'}\n#ax.xaxis.set_label_text('xlabel',_fontsettings)\nfig\n\n\n\n\n\n\n\n\n폰트ref - size: - fontweight: 0~1000 - family: ‘serif’, ‘sans-serif’, ‘monospace’ - style: ‘normal’, ‘italic’\n\nax.set_ylabel('ylabel',size=16)\nfig"
  },
  {
    "objectID": "posts/2022-09-28-4wk-2.html",
    "href": "posts/2022-09-28-4wk-2.html",
    "title": "04wk-2",
    "section": "",
    "text": "seaborn(1)–seaborn특징,boxplot,lineplot"
  },
  {
    "objectID": "posts/2022-09-28-4wk-2.html#plt-복습",
    "href": "posts/2022-09-28-4wk-2.html#plt-복습",
    "title": "04wk-2",
    "section": "plt 복습",
    "text": "plt 복습\n\nplt.boxplot([y1,y2]);"
  },
  {
    "objectID": "posts/2022-09-28-4wk-2.html#sns-wide-df",
    "href": "posts/2022-09-28-4wk-2.html#sns-wide-df",
    "title": "04wk-2",
    "section": "sns wide df",
    "text": "sns wide df\n\ndf1=pd.DataFrame({1:y1,2:y2})\ndf1\n\n\n\n\n\n\n\n\n1\n2\n\n\n\n\n0\n75\n76\n\n\n1\n75\n76\n\n\n2\n76\n77\n\n\n3\n76\n77\n\n\n4\n77\n78\n\n\n5\n77\n78\n\n\n6\n79\n80\n\n\n7\n79\n80\n\n\n8\n79\n80\n\n\n9\n98\n81\n\n\n\n\n\n\n\n- 예시1\n\nsns.boxplot(data=df1) \n#sns.boxplot(data=np.stack([y1,y2],axis=1))  # &lt;- 잘 쓰진 않아요, 그냥 심심해서 해봤는데 되더라고요..?"
  },
  {
    "objectID": "posts/2022-09-28-4wk-2.html#sns-long-df",
    "href": "posts/2022-09-28-4wk-2.html#sns-long-df",
    "title": "04wk-2",
    "section": "sns long df",
    "text": "sns long df\n\ndf2=pd.DataFrame({'score':y1+y2,'class':['A']*len(y1)+['B']*len(y2)})\ndf2\n\n\n\n\n\n\n\n\nscore\nclass\n\n\n\n\n0\n75\nA\n\n\n1\n75\nA\n\n\n2\n76\nA\n\n\n3\n76\nA\n\n\n4\n77\nA\n\n\n5\n77\nA\n\n\n6\n79\nA\n\n\n7\n79\nA\n\n\n8\n79\nA\n\n\n9\n98\nA\n\n\n10\n76\nB\n\n\n11\n76\nB\n\n\n12\n77\nB\n\n\n13\n77\nB\n\n\n14\n78\nB\n\n\n15\n78\nB\n\n\n16\n80\nB\n\n\n17\n80\nB\n\n\n18\n80\nB\n\n\n19\n81\nB\n\n\n\n\n\n\n\n- 예시1\n\nsns.boxplot(data=df2,x='class',y='score')"
  },
  {
    "objectID": "posts/2022-09-28-4wk-2.html#sns-array",
    "href": "posts/2022-09-28-4wk-2.html#sns-array",
    "title": "04wk-2",
    "section": "sns: array",
    "text": "sns: array\n- 예시1\n\nsns.boxplot(data=y1)\n\n\n\n\n\n\n\n\n- 예시2\n\nsns.boxplot(y=y1)\n\n\n\n\n\n\n\n\n- 예시3\n\nsns.boxplot(x=y1)"
  },
  {
    "objectID": "posts/2022-09-28-4wk-2.html#plt-복습-1",
    "href": "posts/2022-09-28-4wk-2.html#plt-복습-1",
    "title": "04wk-2",
    "section": "plt 복습",
    "text": "plt 복습\n- 예시1\n\nplt.hist(x,alpha=0.5)\nplt.hist(y,alpha=0.5);\n\n\n\n\n\n\n\n\n- 예시2\n\nplt.hist([x,y]);"
  },
  {
    "objectID": "posts/2022-09-28-4wk-2.html#sns-wide-df-1",
    "href": "posts/2022-09-28-4wk-2.html#sns-wide-df-1",
    "title": "04wk-2",
    "section": "sns: wide df",
    "text": "sns: wide df\n\ndf1=pd.DataFrame({'x':x,'y':y})\ndf1\n\n\n\n\n\n\n\n\nx\ny\n\n\n\n\n0\n-2.110587\n0.712687\n\n\n1\n0.176404\n1.587615\n\n\n2\n0.592212\n0.362025\n\n\n3\n0.957655\n0.485939\n\n\n4\n1.689412\n0.582304\n\n\n...\n...\n...\n\n\n9995\n-0.935895\n0.047778\n\n\n9996\n1.521599\n1.946658\n\n\n9997\n-0.595255\n0.671715\n\n\n9998\n0.952991\n2.263997\n\n\n9999\n0.850642\n1.578771\n\n\n\n\n10000 rows × 2 columns\n\n\n\n- 예시1\n\nsns.histplot(data=df1)\n\n\n\n\n\n\n\n\n- 예시2\n\nsns.histplot(data=df1,bins=20)\n\n\n\n\n\n\n\n\n- 예시3\n\nsns.histplot(data=df1,bins=20,kde=True)\n\n\n\n\n\n\n\n\n- 예시4\n\nsns.histplot(data=df1,bins=20,kde=True,element=\"step\")\n\n\n\n\n\n\n\n\n- 예시5\n\nsns.histplot(data=df1,bins=20,kde=True,element=\"step\",lw=5) # mpl에 대한 존경심 확인"
  },
  {
    "objectID": "posts/2022-09-28-4wk-2.html#sns-long-df-1",
    "href": "posts/2022-09-28-4wk-2.html#sns-long-df-1",
    "title": "04wk-2",
    "section": "sns: long df",
    "text": "sns: long df\n\ndf2=pd.DataFrame({'val':np.concatenate([x,y]), 'var':['x']*len(x) + ['y']*len(y)})\ndf2\n\n\n\n\n\n\n\n\nval\nvar\n\n\n\n\n0\n-2.110587\nx\n\n\n1\n0.176404\nx\n\n\n2\n0.592212\nx\n\n\n3\n0.957655\nx\n\n\n4\n1.689412\nx\n\n\n...\n...\n...\n\n\n19995\n0.047778\ny\n\n\n19996\n1.946658\ny\n\n\n19997\n0.671715\ny\n\n\n19998\n2.263997\ny\n\n\n19999\n1.578771\ny\n\n\n\n\n20000 rows × 2 columns\n\n\n\n- 예시1\n\nsns.histplot(data=df2,x='val',hue='var',bins=20,kde=True,lw=0)\n\n\n\n\n\n\n\n\n- 예시2\n\nsns.histplot(data=df2,y='val',hue='var',bins=20,lw=0,kde=True)"
  },
  {
    "objectID": "posts/2022-09-28-4wk-2.html#sns-array-1",
    "href": "posts/2022-09-28-4wk-2.html#sns-array-1",
    "title": "04wk-2",
    "section": "sns: array",
    "text": "sns: array\n- 예시1\n\nsns.histplot(data=x)\n\n\n\n\n\n\n\n\n- 예시2\n\nsns.histplot(x=x)\n\n\n\n\n\n\n\n\n- 예시3\n\nsns.histplot(x=x,color='C0',bins=20,lw=0)\nsns.histplot(x=y,color='C1',bins=20,lw=0)"
  },
  {
    "objectID": "posts/2022-09-28-4wk-2.html#plt-복습-2",
    "href": "posts/2022-09-28-4wk-2.html#plt-복습-2",
    "title": "04wk-2",
    "section": "plt 복습",
    "text": "plt 복습\n\nplt.plot(ϵ,'--o')\n\n\n\n\n\n\n\n\n\nplt.plot(y,'--o')"
  },
  {
    "objectID": "posts/2022-09-28-4wk-2.html#sns-array-2",
    "href": "posts/2022-09-28-4wk-2.html#sns-array-2",
    "title": "04wk-2",
    "section": "sns: array",
    "text": "sns: array\n- 예시1\n\nsns.lineplot(data=ϵ)\n\n\n\n\n\n\n\n\n- 예시2\n\nsns.lineplot(data=y)"
  },
  {
    "objectID": "posts/2022-09-28-4wk-2.html#sns-wide-df-2",
    "href": "posts/2022-09-28-4wk-2.html#sns-wide-df-2",
    "title": "04wk-2",
    "section": "sns: wide df",
    "text": "sns: wide df\n\ndf1=pd.DataFrame({'eps':ϵ, 'y':y})\ndf1\n\n\n\n\n\n\n\n\neps\ny\n\n\n\n\n0\n0.383420\n0.383420\n\n\n1\n1.084175\n1.467595\n\n\n2\n1.142778\n2.610373\n\n\n3\n0.307894\n2.918267\n\n\n4\n0.237787\n3.156054\n\n\n...\n...\n...\n\n\n95\n1.308688\n-10.598788\n\n\n96\n0.405376\n-10.193412\n\n\n97\n-0.185070\n-10.378481\n\n\n98\n1.055388\n-9.323094\n\n\n99\n1.187014\n-8.136079\n\n\n\n\n100 rows × 2 columns\n\n\n\n- 예시1\n\nsns.lineplot(data=df1)\n\n\n\n\n\n\n\n\n- 예시2\n\nsns.lineplot(data=df1,dashes=False)\n\n\n\n\n\n\n\n\n- 예시3\n\n# sns.lineplot(data=df1,dashes=[(3,1),(3,1)]) # 이코드는 최신버전의 sns에서 동작하지 않으므로 삭제합니다. (collab 에서는 정상동작)\n\n- 예시4\n\n# sns.lineplot(data=df1,dashes=[(3,1),(15,3)],markers=['o','o'])  # 이코드는 최신버전의 sns에서 동작하지 않으므로 삭제합니다. (collab 에서는 정상동작)"
  },
  {
    "objectID": "posts/2022-09-28-4wk-2.html#sns-long-df-2",
    "href": "posts/2022-09-28-4wk-2.html#sns-long-df-2",
    "title": "04wk-2",
    "section": "sns: long df",
    "text": "sns: long df\n\ndf2= pd.DataFrame({'idx':list(range(100))*2,'val':np.concatenate([ϵ,y]),'cat':['eps']*100 + ['y']*100 })\ndf2\n\n\n\n\n\n\n\n\nidx\nval\ncat\n\n\n\n\n0\n0\n0.383420\neps\n\n\n1\n1\n1.084175\neps\n\n\n2\n2\n1.142778\neps\n\n\n3\n3\n0.307894\neps\n\n\n4\n4\n0.237787\neps\n\n\n...\n...\n...\n...\n\n\n195\n95\n-10.598788\ny\n\n\n196\n96\n-10.193412\ny\n\n\n197\n97\n-10.378481\ny\n\n\n198\n98\n-9.323094\ny\n\n\n199\n99\n-8.136079\ny\n\n\n\n\n200 rows × 3 columns\n\n\n\n- 예시1\n\nsns.lineplot(data=df2, x='idx',y='val',hue='cat')\n\n\n\n\n\n\n\n\n- 예시2\n\nsns.lineplot(data=df2, x='idx',y='val',style='cat',hue='cat',markers=True)\n\n\n\n\n\n\n\n\n- 예시3\n\nsns.lineplot(data=df2, x='idx',y='val',style='cat',hue='cat',dashes=[(3,1),(3,3)],markers=['o','o'])"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "유재혁의 블로그",
    "section": "",
    "text": "midterm\n\n\n\n\n\n\n\n\n\n\n\nOct 30, 2022\n\n\n최규빈\n\n\n\n\n\n\n\n\n\n\n\n\n08wk-1,2\n\n\n\n\n\n\npandas\n\n\n자료분석\n\n\nplotnine\n\n\n\n\n\n\n\n\n\nOct 24, 2022\n\n\n최규빈\n\n\n\n\n\n\n\n\n\n\n\n\n07wk-2\n\n\n\n\n\n\n통계와 시각화\n\n\nplotnine\n\n\n\n\n\n\n\n\n\nOct 19, 2022\n\n\n최규빈\n\n\n\n\n\n\n\n\n\n\n\n\n07wk-1\n\n\n\n\n\n\npandas\n\n\n통계와 시각화\n\n\n\n\n\n\n\n\n\nOct 17, 2022\n\n\n최규빈\n\n\n\n\n\n\n\n\n\n\n\n\n06wk-1,2\n\n\n\n\n\n\npandas\n\n\n\n\n\n\n\n\n\nOct 12, 2022\n\n\n최규빈\n\n\n\n\n\n\n\n\n\n\n\n\n05wk-2\n\n\n\n\n\n\n훌륭한 시각화\n\n\nplotnine\n\n\n\n\n\n\n\n\n\nOct 6, 2022\n\n\n최규빈\n\n\n\n\n\n\n\n\n\n\n\n\n05wk-1\n\n\n\n\n\n\nseaborn\n\n\nmatplotlib\n\n\n\n\n\n\n\n\n\nOct 5, 2022\n\n\n최규빈\n\n\n\n\n\n\n\n\n\n\n\n\n04wk-2\n\n\n\n\n\n\nseaborn\n\n\n\n\n\n\n\n\n\nSep 28, 2022\n\n\n최규빈\n\n\n\n\n\n\n\n\n\n\n\n\n04wk-1\n\n\n\n\n\n\nmatplotlib\n\n\n\n\n\n\n\n\n\nSep 26, 2022\n\n\n최규빈\n\n\n\n\n\n\n\n\n\n\n\n\n03wk-2\n\n\n\n\n\n\nmatplotlib\n\n\n통계와 시각화\n\n\n\n\n\n\n\n\n\nSep 21, 2022\n\n\n최규빈\n\n\n\n\n\n\n\n\n\n\n\n\n03wk-1\n\n\n\n\n\n\nmatplotlib\n\n\n\n\n\n\n\n\n\nSep 19, 2022\n\n\n최규빈\n\n\n\n\n\n\n\n\n\n\n\n\n02wk-2\n\n\n\n\n\n\n통계와 시각화\n\n\n\n\n\n\n\n\n\nSep 14, 2022\n\n\n최규빈\n\n\n\n\n\n\n\n\n\n\n\n\n01wk-1\n\n\n\n\n\n\nmatplotlib\n\n\nseaborn\n\n\nplotnine\n\n\nplotly\n\n\n\n\n\n\n\n\n\nSep 10, 2022\n\n\n유재혁\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "posts/2022-09-10-1wk-1.html",
    "href": "posts/2022-09-10-1wk-1.html",
    "title": "01wk-1",
    "section": "",
    "text": "박스플랏, 히스토그램"
  },
  {
    "objectID": "posts/2022-09-10-1wk-1.html#motivating-example",
    "href": "posts/2022-09-10-1wk-1.html#motivating-example",
    "title": "01wk-1",
    "section": "motivating example",
    "text": "motivating example\n(예제1) 전북고등학교: 평균은 좋은 측정값인가?\n- 전북고등학교에서 통계학을 수업하는 A선생님과 B선생님의 있다. A선생님에게서 수업을 들을 학생들의 평균은 79.1이고 B선생님에게서 수업을 들은 학생들의 평균은 78.3이다.\n\ny1=[75,75,76,76,77,77,79,79,79,98] # A선생님에게 통계학을 배운 학생의 점수들\ny2=[76,76,77,77,78,78,80,80,80,81] # B선생님에게 통계학을 배운 학생의 점수들 \n\n\nnp.mean(y1),np.mean(y2)\n\n(79.1, 78.3)\n\n\n- 의사결정: A선생님에게 배운 학생들의 실력이 평균적으로 더 좋을 것이다.\n- 평균은 A반(=A선생님에게 통계학을 배운 반)이 더 높다. 그런데 98점을 받은 학생이 A반에 포함되어서 A반이 전체평균이 높게 나온것이고 나머지 학생들은 전체적으로 B반 학생들이 더 시험을 잘 보았다고 해석할 수 있다.\n- 교훈: 단순한 평균비교보다 학생들이 받은 점수의 분포를 비교해보는 것이 중요하다. 분포를 살펴보는 방법 중 유용한 방법이 박스플랏이다."
  },
  {
    "objectID": "posts/2022-09-10-1wk-1.html#matplotlib으로-boxplot-그리기",
    "href": "posts/2022-09-10-1wk-1.html#matplotlib으로-boxplot-그리기",
    "title": "01wk-1",
    "section": "matplotlib으로 boxplot 그리기",
    "text": "matplotlib으로 boxplot 그리기\n- A반 학생들의 박스플랏 그리기\n\nplt.boxplot(y1);\n\n\n\n\n\n\n\n\n- B반 학생들의 박스플랏 그리기\n\nplt.boxplot(y2);\n\n\n\n\n\n\n\n\n- A반 학생들의 점수와 B반 학생들의 점수를 나란히 박스플랏으로 그리자.\n\nplt.boxplot([y1,y2]);"
  },
  {
    "objectID": "posts/2022-09-10-1wk-1.html#boxplot이란",
    "href": "posts/2022-09-10-1wk-1.html#boxplot이란",
    "title": "01wk-1",
    "section": "boxplot이란?",
    "text": "boxplot이란?\n- ref: https://github.com/mGalarnyk/Python_Tutorials/blob/master/Statistics/boxplot/box_plot.ipynb\n\n\nCode\nnp.random.seed(916170)\n\n# connection path is here: https://stackoverflow.com/questions/6146290/plotting-a-line-over-several-graphs\nmu, sigma = 0, 1 # mean and standard deviation\ns = np.random.normal(mu, sigma, 1000)\n\nfig, axes = plt.subplots(nrows = 1, ncols = 1, figsize=(10, 5))\n\n# rectangular box plot\nbplot = axes.boxplot(s,\n                vert=False,\n                patch_artist=True, \n                showfliers=True, # This would show outliers (the remaining .7% of the data)\n                positions = [0],\n                boxprops = dict(linestyle='--', linewidth=2, color='Black', facecolor = 'red', alpha = .4),\n                medianprops = dict(linestyle='-', linewidth=2, color='Yellow'),\n                whiskerprops = dict(linestyle='-', linewidth=2, color='Blue', alpha = .4),\n                capprops = dict(linestyle='-', linewidth=2, color='Black'),\n                flierprops = dict(marker='o', markerfacecolor='green', markersize=10,\n                  linestyle='none', alpha = .4),\n                widths = .3,\n                zorder = 1)   \n\naxes.set_xlim(-4, 4)\nplt.xticks(fontsize = 14)\n\naxes.set_yticks([])\naxes.annotate(r'',\n            xy=(-.73, .205), xycoords='data',\n            xytext=(.66, .205), textcoords='data',\n            arrowprops=dict(arrowstyle=\"|-|\",\n                            connectionstyle=\"arc3\")\n            );\n\naxes.text(0, .25, \"Interquartile Range \\n(IQR)\",  horizontalalignment='center', fontsize=18)\naxes.text(0, -.21, r\"Median\", horizontalalignment='center', fontsize=16);\naxes.text(2.65, -.15, \"\\\"Maximum\\\"\", horizontalalignment='center', fontsize=18);\naxes.text(-2.65, -.15, \"\\\"Minimum\\\"\", horizontalalignment='center', fontsize=18);\naxes.text(-.68, -.24, r\"Q1\", horizontalalignment='center', fontsize=18);\naxes.text(-2.65, -.21, r\"(Q1 - 1.5*IQR)\", horizontalalignment='center', fontsize=16);\naxes.text(.6745, -.24, r\"Q3\", horizontalalignment='center', fontsize=18);\naxes.text(.6745, -.30, r\"(75th Percentile)\", horizontalalignment='center', fontsize=12);\naxes.text(-.68, -.30, r\"(25th Percentile)\", horizontalalignment='center', fontsize=12);\naxes.text(2.65, -.21, r\"(Q3 + 1.5*IQR)\", horizontalalignment='center', fontsize=16);\n\naxes.annotate('Outliers', xy=(2.93,0.015), xytext=(2.52,0.20), fontsize = 18,\n            arrowprops={'arrowstyle': '-&gt;', 'color': 'black', 'lw': 2},\n            va='center');\n\naxes.annotate('Outliers', xy=(-3.01,0.015), xytext=(-3.41,0.20), fontsize = 18,\n            arrowprops={'arrowstyle': '-&gt;', 'color': 'black', 'lw': 2},\n            va='center');"
  },
  {
    "objectID": "posts/2022-09-10-1wk-1.html#plotly로-boxplot-그리기",
    "href": "posts/2022-09-10-1wk-1.html#plotly로-boxplot-그리기",
    "title": "01wk-1",
    "section": "plotly로 boxplot 그리기",
    "text": "plotly로 boxplot 그리기\n- 로컬에서 하기 위해서는 아래를 설치 (코랩은 필요없음)\n!pip install plotly \n!pip install ipywidgets\n!pip install jupyter-dash\n!pip install dash \n!pip install pandas \n\nimport plotly.express as px \nimport pandas as pd\n\n\ndf= pd.DataFrame({'score':y1+y2,'class':['A']*len(y1) + ['B']*len(y2)})\ndf\n\n\n\n\n\n\n\n\nscore\nclass\n\n\n\n\n0\n75\nA\n\n\n1\n75\nA\n\n\n2\n76\nA\n\n\n3\n76\nA\n\n\n4\n77\nA\n\n\n5\n77\nA\n\n\n6\n79\nA\n\n\n7\n79\nA\n\n\n8\n79\nA\n\n\n9\n98\nA\n\n\n10\n76\nB\n\n\n11\n76\nB\n\n\n12\n77\nB\n\n\n13\n77\nB\n\n\n14\n78\nB\n\n\n15\n78\nB\n\n\n16\n80\nB\n\n\n17\n80\nB\n\n\n18\n80\nB\n\n\n19\n81\nB\n\n\n\n\n\n\n\n\npx.box(df,x='class',y='score')"
  },
  {
    "objectID": "posts/2022-09-10-1wk-1.html#motivating-example-1",
    "href": "posts/2022-09-10-1wk-1.html#motivating-example-1",
    "title": "01wk-1",
    "section": "motivating example",
    "text": "motivating example\n- 전북고예제에서 우리의 소망: 그냥 A반 B반 중에 어떤 반이 공부를 더 잘하냐?\n\n보통 이러한 질문은 중심경향값 중 하나를 골라서 비교하면 되었다.\n여기에서 중심경향값이란 데이터 분포의 중심을 보여주는 값으로 자료 전체를 대표할 수 있는 값을 말함. 평균, 중앙값등이 대표적인 중심경향값이다.\n\n- 전북고예제에서는 “A반 B반 중에서 어떤 반이 공부를 더 잘하냐?” 라는 질문의 대답으로 단순평균비교로는 의미가 없었다. 오히려 결과론적으로 보면 중앙값이 더 타당해 보인다.\n- 그런데 사실 생각해보면 중앙값을 기준으로 B반이 공부를 더 잘했다고 주장하는 것도 애매하다. 어쨌든 가장 공부잘한 학생은 A반에 있으니까! (에이 한명 뿐이잖아요? 라고 생각할 수 있는데 그 한명이 2명 3명으로 점점 늘어난다고 생각해보자, 합리적인 기준을 제시할 수 있는가?)\n- 사실 “A반 B반중에 누가 더 공부를 잘하냐?” 라는 질문은 굉장히 대답하기 곤란한 질문이다. 왜냐하면\n\n이슈1: 단순 평균비교로 이러한 질문에 답을 하기 어렵다.\n이슈2: 박스플랏으로 전체분포를 파악해도 어떠한 반이 더 공부를 잘한다는 기준을 잡는게 애매하다.\n\n그런데 특수한 경우에는 “A반 B반중에 누가 더 공부를 잘하냐?” 라는 질문에 대한 대답을 깔끔하게 할 수 있다.\n(예제2) 정규분포 전북고등학교: 평균은 좋은 측정값인가?\n- A반과 B반의 통계학 성적이 아래와 같다고 하자.\n\nnp.random.seed(43052)\ny1 = np.random.randn(10000)\ny2 = np.random.randn(10000) + 0.5 \n\n\nnp.mean(y1),np.mean(y2)\n\n(-0.011790879905079434, 0.4979147460611458)\n\n\n\nnp.mean(y2) - np.mean(y1)\n\n0.5097056259662253\n\n\ny2의 값이 y1의 값보다 전체적으로 0.5097056259662253 정도 높다고 볼 수 있다?\n\nplt.boxplot([y1,y2]);\n\n\n\n\n\n\n\n\n\n분포의 모양이 거의 비슷, 왼쪽그림을 컨트롤+C 하여 오른쪽에 붙인다음 0.5정도 y축으로 올린느낌이다!\n\n- 이러한 상황에서는 “B반의 성적 \\(\\approx\\) A반의 성적 + 0.5” 라고 주장해도 큰 무리가 없어보인다. 따라서 이 경우에는 “A반 B반 중에 어떤반이 더 공부를 잘하냐?” 라는 질문에 대하여 “B반이 평균적으로 0.5점정도 더 공부를 잘합니다” 라고 대답해도 괜찮다.\n- 결론: 정규분포 분포가정을 한다면 이슈1,2에 대한 문제를 한번에 해결가능함\n- 정규분포가정은 어떻게 할 수 있나? (= 데이터를 보고 어떻게 정규분포라고 알 수 있는가?): 데이터의 히스토그램을 그려서 종 모양이 되는지 확인해본다. (아직 초보단걔라서 이것밖에 모를 수 있어요)\n\nhistogram 이란?\n- 히스토그램: X축이 변수의 구간, Y축은 그 구간에 포함된 빈도를 의미하는 그림\n\n\nmatplotlib으로 histogram 그리기\n- 히스토그램의 예시1\n\ny=[10,11,12,15,16,20,21,22,23,24,25]\n\n\nplt.hist(y)\n\n(array([2., 1., 0., 1., 1., 0., 1., 1., 2., 2.]),\n array([10. , 11.5, 13. , 14.5, 16. , 17.5, 19. , 20.5, 22. , 23.5, 25. ]),\n &lt;BarContainer object of 10 artists&gt;)\n\n\n\n\n\n\n\n\n\n\nplt.hist(y,bins=10)\n\n(array([2., 1., 0., 1., 1., 0., 1., 1., 2., 2.]),\n array([10. , 11.5, 13. , 14.5, 16. , 17.5, 19. , 20.5, 22. , 23.5, 25. ]),\n &lt;BarContainer object of 10 artists&gt;)\n\n\n\n\n\n\n\n\n\n- 히스토그램 예시2\n\nplt.hist(y,bins=2)\n#plt.hist(y,bins=1)\n\n(array([5., 6.]),\n array([10. , 17.5, 25. ]),\n &lt;BarContainer object of 2 artists&gt;)\n\n\n\n\n\n\n\n\n\n- 히스토그램 예시3\n\nplt.hist(y,bins=3)\n\n(array([3., 2., 6.]),\n array([10., 15., 20., 25.]),\n &lt;BarContainer object of 3 artists&gt;)\n\n\n\n\n\n\n\n\n\n\n가장 큰 값은 25, 가장 작은 값은 10이므로 range는 15이다.\nrange / bins = 15 / 3 = 5 이므로 각 구간의 간격은 5이다.\n구간은 [10,15), [15,20), [20,25] 로 나눈다.\n각 구간에 포함된 자료의 수는 3,2,6 이다.\n\n- 히스토그램 예시4\n\nplt.hist(y,bins=7) \n\n(array([3., 0., 2., 0., 1., 2., 3.]),\n array([10.        , 12.14285714, 14.28571429, 16.42857143, 18.57142857,\n        20.71428571, 22.85714286, 25.        ]),\n &lt;BarContainer object of 7 artists&gt;)\n\n\n\n\n\n\n\n\n\n\n가장 큰 값은 25, 가장 작은 값은 10이므로 range는 15이다.\nrange / bins = 15 / 7 = 2.142857142857143 이므로 각 구간의 간격은 2.142857142857143이다.\n구간은 [10,12.14285714), [12.14285714,14.28571429,), [22.85714286,25] 로 나눈다.\n각 구간에 포함된 자료의 수는 3,0,2,0,1,2,3 이다.\n\n- 히스토그램 예시5\n\n# np.random.seed(43052)\n# y1 = np.random.randn(10000)\n# y2 = np.random.randn(10000) + 0.5 \nplt.hist([y1,y2],bins=50);\n\n\n\n\n\n\n\n\n\n\nseaborn으로 histogram 그리기\n\nimport seaborn as sns \n\n\ndf=pd.DataFrame({'score':np.concatenate([y1,y2]), 'class':['A']*len(y1)+['B']*len(y2)})\ndf\n\n\n\n\n\n\n\n\nscore\nclass\n\n\n\n\n0\n0.383420\nA\n\n\n1\n1.084175\nA\n\n\n2\n1.142778\nA\n\n\n3\n0.307894\nA\n\n\n4\n0.237787\nA\n\n\n...\n...\n...\n\n\n19995\n0.493276\nB\n\n\n19996\n0.619512\nB\n\n\n19997\n-0.500529\nB\n\n\n19998\n1.267551\nB\n\n\n19999\n1.004863\nB\n\n\n\n\n20000 rows × 2 columns\n\n\n\n\nsns.histplot(df,x='score',hue='class')\n\n\n\n\n\n\n\n\n\n\nplotnine으로 histogram 그리기\n\nfrom plotnine import *\n\n\nggplot(df) + geom_histogram(aes(x='score',fill='class'),position='identity',alpha=0.5)\n\n/home/cgb4/anaconda3/envs/py37/lib/python3.7/site-packages/plotnine/stats/stat_bin.py:95: PlotnineWarning: 'stat_bin()' using 'bins = 84'. Pick better value with 'binwidth'.\n\n\n\n\n\n\n\n\n\n\nggplot(df) + geom_histogram(aes(x='score',fill='class'),alpha=0.5) ## 비교를 위해서 관찰만 할것\n\n/home/cgb4/anaconda3/envs/py37/lib/python3.7/site-packages/plotnine/stats/stat_bin.py:95: PlotnineWarning: 'stat_bin()' using 'bins = 84'. Pick better value with 'binwidth'.\n\n\n\n\n\n\n\n\n\n\n\nplotly로 histogram 그리기\n\nimport plotly.figure_factory as ff\n\nhist_data = [y1, y2]\n\ngroup_labels = ['A', 'B']\n\n# Create distplot with curve_type set to 'normal'\nff.create_distplot(hist_data, group_labels,bin_size=.2, show_rug=False)"
  },
  {
    "objectID": "posts/2022-09-10-1wk-1.html#숙제",
    "href": "posts/2022-09-10-1wk-1.html#숙제",
    "title": "01wk-1",
    "section": "숙제",
    "text": "숙제\n(1) 자기학번으로 np.random.seed(202043052)를 만들고\n(2) y1, y2 // 10만개의 정규분포를 생성해서 저장\n\ny1: 평균 0, 표준편차=1\ny2: 평균 1, 표준편차=1\n\n(3) plotly 를 활용하여 히스토그램을 겹쳐서 그려보는것."
  },
  {
    "objectID": "posts/2022-09-14-2wk-2.html",
    "href": "posts/2022-09-14-2wk-2.html",
    "title": "02wk-2",
    "section": "",
    "text": "Histogram equalization"
  },
  {
    "objectID": "posts/2022-09-14-2wk-2.html#오늘-배울-내용",
    "href": "posts/2022-09-14-2wk-2.html#오늘-배울-내용",
    "title": "02wk-2",
    "section": "오늘 배울 내용?",
    "text": "오늘 배울 내용?\n- 히스토그램의 활용: 정규분포인지 판단 &lt;- 지난시간 내용\n- 히스토그램의 활용2: 이미지 보정! 히스토그램 이퀄라이제이션 &lt;– 오늘소개할 내용"
  },
  {
    "objectID": "posts/2022-09-14-2wk-2.html#이미지자료-다운로드",
    "href": "posts/2022-09-14-2wk-2.html#이미지자료-다운로드",
    "title": "02wk-2",
    "section": "이미지자료 다운로드",
    "text": "이미지자료 다운로드\n\n!wget https://upload.wikimedia.org/wikipedia/commons/0/08/Unequalized_Hawkes_Bay_NZ.jpg\nimg = cv2.imread('Unequalized_Hawkes_Bay_NZ.jpg')\n\n--2022-09-14 17:57:58--  https://upload.wikimedia.org/wikipedia/commons/0/08/Unequalized_Hawkes_Bay_NZ.jpg\nResolving upload.wikimedia.org (upload.wikimedia.org)... 103.102.166.240, 2001:df2:e500:ed1a::2:b\nConnecting to upload.wikimedia.org (upload.wikimedia.org)|103.102.166.240|:443... connected.\nHTTP request sent, awaiting response... 200 OK\nLength: 110895 (108K) [image/jpeg]\nSaving to: ‘Unequalized_Hawkes_Bay_NZ.jpg.5’\n\nUnequalized_Hawkes_ 100%[===================&gt;] 108.30K   505KB/s    in 0.2s    \n\n2022-09-14 17:57:59 (505 KB/s) - ‘Unequalized_Hawkes_Bay_NZ.jpg.5’ saved [110895/110895]\n\n\n\n\nimg.shape\n\n(683, 1024, 3)\n\n\n\nplt.imshow(img)"
  },
  {
    "objectID": "posts/2022-09-14-2wk-2.html#이미지자료의-이해",
    "href": "posts/2022-09-14-2wk-2.html#이미지자료의-이해",
    "title": "02wk-2",
    "section": "이미지자료의 이해",
    "text": "이미지자료의 이해"
  },
  {
    "objectID": "posts/2022-09-14-2wk-2.html#비밀1-이미지는-사실-숫자들의-집합이었음.",
    "href": "posts/2022-09-14-2wk-2.html#비밀1-이미지는-사실-숫자들의-집합이었음.",
    "title": "02wk-2",
    "section": "비밀1: 이미지는 사실 숫자들의 집합이었음.",
    "text": "비밀1: 이미지는 사실 숫자들의 집합이었음.\n- 예시1\n\n_img1 = np.array([0,30,90,120,150,180,210,240,255]).reshape(3,3)\n_img1\n\narray([[  0,  30,  90],\n       [120, 150, 180],\n       [210, 240, 255]])\n\n\n\nplt.imshow(_img1,cmap='gray')\nplt.colorbar()\n\n\n\n\n\n\n\n\n- 예시2\n\n_img2 = np.array([0,20,40,60,80,100,120,140,160]).reshape(3,3)\n_img2\n\narray([[  0,  20,  40],\n       [ 60,  80, 100],\n       [120, 140, 160]])\n\n\n\nplt.imshow(_img2,cmap='gray',vmin=0,vmax=255)\nplt.colorbar()\n\n\n\n\n\n\n\n\n- 예시3\n\n_img3 = np.concatenate([_img1,_img2],axis=1)\n_img3\n\narray([[  0,  30,  90,   0,  20,  40],\n       [120, 150, 180,  60,  80, 100],\n       [210, 240, 255, 120, 140, 160]])\n\n\n\nplt.imshow(_img3,cmap='gray')"
  },
  {
    "objectID": "posts/2022-09-14-2wk-2.html#비밀2-칼라이미지는-red-green-blue-의-조합으로-표현가능-다른방식도-가능",
    "href": "posts/2022-09-14-2wk-2.html#비밀2-칼라이미지는-red-green-blue-의-조합으로-표현가능-다른방식도-가능",
    "title": "02wk-2",
    "section": "비밀2: 칼라이미지는 red + green + blue 의 조합으로 표현가능 (다른방식도 가능)",
    "text": "비밀2: 칼라이미지는 red + green + blue 의 조합으로 표현가능 (다른방식도 가능)\n- 예시1\n\nr = np.array([0]*25*3).reshape(5,5,3) \ng = np.array([0]*25*3).reshape(5,5,3) \nb = np.array([0]*25*3).reshape(5,5,3) \n\n\nr[:3,:3,0] = 255   \ng[:3,2:,1] = 255\nb[2:,:,2] = 255 \n\n\nplt.imshow(r)\n\n\n\n\n\n\n\n\n\nplt.imshow(g)\n\n\n\n\n\n\n\n\n\nplt.imshow(b)\n\n\n\n\n\n\n\n\n\nplt.imshow(r+g+b)\n\n\n\n\n\n\n\n\n- 예시2: R,G,B를 같은 비율로 섞으면 무채색이 된다.\n\nr = np.array([0]*25*3).reshape(5,5,3) \ng = np.array([0]*25*3).reshape(5,5,3) \nb = np.array([0]*25*3).reshape(5,5,3) \nr[:3,:3,0] = 80   \ng[:3,2:,1] = 80\nb[2:,:,2] = 80 \n\n\nplt.imshow(r+g+b)\n\n\n\n\n\n\n\n\n- 예시3: 우리가 관심있는 자료\n\nimg.shape\n\n(683, 1024, 3)\n\n\n\nimg_red = img * 0 \nimg_green = img * 0 \nimg_blue = img * 0 \n\n\nimg_red[...,0] = img[...,0] \nimg_green[...,1] = img[...,1] \nimg_blue[...,2] = img[...,2] \n\n\nplt.imshow(img_blue)"
  },
  {
    "objectID": "posts/2022-09-19-3wk-1.html",
    "href": "posts/2022-09-19-3wk-1.html",
    "title": "03wk-1",
    "section": "",
    "text": "라인플랏, 산점도, 여러 그림 그리기, fig와 axes의 이해"
  },
  {
    "objectID": "posts/2022-09-19-3wk-1.html#기본플랏",
    "href": "posts/2022-09-19-3wk-1.html#기본플랏",
    "title": "03wk-1",
    "section": "기본플랏",
    "text": "기본플랏\n- 예시1\n\nx=[1,2,3,4]\ny=[1,2,4,3] \n\n\nplt.plot(x,y)"
  },
  {
    "objectID": "posts/2022-09-19-3wk-1.html#모양변경",
    "href": "posts/2022-09-19-3wk-1.html#모양변경",
    "title": "03wk-1",
    "section": "모양변경",
    "text": "모양변경\n- 예시1\n\nplt.plot(x,y,'--')\n\n\n\n\n\n\n\n\n- 예시2\n\nplt.plot(x,y,':')\n\n\n\n\n\n\n\n\n- 예시3\n\nplt.plot(x,y,'-.')"
  },
  {
    "objectID": "posts/2022-09-19-3wk-1.html#색상변경",
    "href": "posts/2022-09-19-3wk-1.html#색상변경",
    "title": "03wk-1",
    "section": "색상변경",
    "text": "색상변경\n- 예시1\n\nplt.plot(x,y,'r')\n\n\n\n\n\n\n\n\n- 예시2\n\nplt.plot(x,y,'k')"
  },
  {
    "objectID": "posts/2022-09-19-3wk-1.html#모양-색상변경",
    "href": "posts/2022-09-19-3wk-1.html#모양-색상변경",
    "title": "03wk-1",
    "section": "모양 + 색상변경",
    "text": "모양 + 색상변경\n- 예시1\n\nplt.plot(x,y,'--r')\n\n\n\n\n\n\n\n\n- 예시2: 순서변경 가능\n\nplt.plot(x,y,'r--')"
  },
  {
    "objectID": "posts/2022-09-19-3wk-1.html#원리",
    "href": "posts/2022-09-19-3wk-1.html#원리",
    "title": "03wk-1",
    "section": "원리?",
    "text": "원리?\n- r--등의 옵션은 Markers + Line Styles + Colors 의 조합으로 표현가능\nref: https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.plot.html\n\n--r: 점선(dashed)스타일 + 빨간색\nr--: 빨간색 + 점선(dashed)스타일\n:k: 점선(dotted)스타일 + 검은색\nk:: 검은색 + 점선(dotted)스타일\n\n- 우선 Marker를 무시하면 Line Styles + Color로 표현가능한 조합은 \\(4\\times 8=32\\) 개\n(Line Styles) 모두 4개\n\n\n\ncharacter\ndescription\n\n\n\n\n‘-’\nsolid line style\n\n\n‘–’\ndashed line style\n\n\n‘-.’\ndash-dot line style\n\n\n‘:’\ndotted line style\n\n\n\n(Color) 모두 8개\n\n\n\ncharacter\ncolor\n\n\n\n\n‘b’\nblue\n\n\n‘g’\ngreen\n\n\n‘r’\nred\n\n\n‘c’\ncyan\n\n\n‘m’\nmagenta\n\n\n‘y’\nyellow\n\n\n‘k’\nblack\n\n\n‘w’\nwhite\n\n\n\n- 예시1\n\nplt.plot(x,y,'--m')\n\n\n\n\n\n\n\n\n- 예시2\n\nplt.plot(x,y,'-.c')\n\n\n\n\n\n\n\n\n- 예시3: line style + color 조합으로 사용하든 color + line style 조합으로 사용하든 상관없음\n\nplt.plot(x,y,'-.c')\n\n\n\n\n\n\n\n\n\nplt.plot(x,y,'c-.')\n\n\n\n\n\n\n\n\n- 예시4: line style을 중복으로 사용하거나 color를 중복으로 쓸 수 는 없다.\n\nplt.plot(x,y,'--:')\n\nValueError: Illegal format string \"--:\"; two linestyle symbols\n\n\n\n\n\n\n\n\n\n\nplt.plot(x,y,'rb')\n\nValueError: Illegal format string \"rb\"; two color symbols\n\n\n\n\n\n\n\n\n\n- 예시5: 색이 사실 8개만 있는건 아니다.\nref: https://matplotlib.org/2.0.2/examples/color/named_colors.html\n\nplt.plot(x,y,'--',color='lime')\n\n\n\n\n\n\n\n\n- 예시6: 색을 바꾸려면 Hex코드를 밖아 넣는 방법이 젤 깔끔함\nref: https://htmlcolorcodes.com/\n\nplt.plot(x,y,color='#277E41') \n\n\n\n\n\n\n\n\n- 예시7: 당연히 라인스타일도 4개만 있진 않겠지\nref: https://matplotlib.org/stable/gallery/lines_bars_and_markers/linestyles.html\n\nplt.plot(x,y,linestyle='dashed')\n\n\n\n\n\n\n\n\n\nplt.plot(x,y,linestyle=(0, (20, 5)))"
  },
  {
    "objectID": "posts/2022-09-19-3wk-1.html#원리-1",
    "href": "posts/2022-09-19-3wk-1.html#원리-1",
    "title": "03wk-1",
    "section": "원리",
    "text": "원리\n- 그냥 마커를 설정하면 끝!\nref: https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.plot.html\n\n\n\ncharacter\ndescription\n\n\n\n\n‘.’\npoint marker\n\n\n‘,’\npixel marker\n\n\n‘o’\ncircle marker\n\n\n‘v’\ntriangle_down marker\n\n\n‘^’\ntriangle_up marker\n\n\n‘&lt;’\ntriangle_left marker\n\n\n‘&gt;’\ntriangle_right marker\n\n\n‘1’\ntri_down marker\n\n\n‘2’\ntri_up marker\n\n\n‘3’\ntri_left marker\n\n\n‘4’\ntri_right marker\n\n\n‘8’\noctagon marker\n\n\n‘s’\nsquare marker\n\n\n‘p’\npentagon marker\n\n\n‘P’\nplus (filled) marker\n\n\n’*’\nstar marker\n\n\n‘h’\nhexagon1 marker\n\n\n‘H’\nhexagon2 marker\n\n\n‘+’\nplus marker\n\n\n‘x’\nx marker\n\n\n‘X’\nx (filled) marker\n\n\n‘D’\ndiamond marker\n\n\n‘d’\nthin_diamond marker\n\n\n‘|’\nvline marker\n\n\n’_’\nhline marker\n\n\n\n\nplt.plot(x,y,'o')"
  },
  {
    "objectID": "posts/2022-09-19-3wk-1.html#기본플랏-1",
    "href": "posts/2022-09-19-3wk-1.html#기본플랏-1",
    "title": "03wk-1",
    "section": "기본플랏",
    "text": "기본플랏\n- 예시1\n\nplt.plot(x,y,'.')\n\n\n\n\n\n\n\n\n- 예시2\n\nplt.plot(x,y,'x')"
  },
  {
    "objectID": "posts/2022-09-19-3wk-1.html#색깔변경",
    "href": "posts/2022-09-19-3wk-1.html#색깔변경",
    "title": "03wk-1",
    "section": "색깔변경",
    "text": "색깔변경\n- 예시1\n\nplt.plot(x,y,'or')\n\n\n\n\n\n\n\n\n- 예시2\n\nplt.plot(x,y,'db')\n\n\n\n\n\n\n\n\n- 예시3\n\nplt.plot(x,y,'bx')"
  },
  {
    "objectID": "posts/2022-09-19-3wk-1.html#dot-connected-plot",
    "href": "posts/2022-09-19-3wk-1.html#dot-connected-plot",
    "title": "03wk-1",
    "section": "dot-connected plot",
    "text": "dot-connected plot\n- 예시1: 마커와 라인스타일을 동시에 사용하면 dot-connected plot이 된다.\n\nplt.plot(x,y,'o-')\n\n\n\n\n\n\n\n\n- 예시2: 당연히 색도 적용가능함\n\nplt.plot(x,y,'o--r')\n\n\n\n\n\n\n\n\n- 예시3: 서로 순서를 바꿔도 상관없다.\n\nplt.plot(x,y,'ro--')"
  },
  {
    "objectID": "posts/2022-09-19-3wk-1.html#겹쳐그리기",
    "href": "posts/2022-09-19-3wk-1.html#겹쳐그리기",
    "title": "03wk-1",
    "section": "겹쳐그리기",
    "text": "겹쳐그리기\n- 예시1\n\nx = np.arange(-5,5,0.1)\nϵ = np.random.randn(100) \ny = 2*x + ϵ\n\n\nplt.plot(x,y,'.b')\nplt.plot(x,2*x,'r')"
  },
  {
    "objectID": "posts/2022-09-19-3wk-1.html#따로그리기-subplot-외우세요-이거",
    "href": "posts/2022-09-19-3wk-1.html#따로그리기-subplot-외우세요-이거",
    "title": "03wk-1",
    "section": "따로그리기 (subplot) // 외우세요 이거",
    "text": "따로그리기 (subplot) // 외우세요 이거\n- 예시1\n\nfig, axs = plt.subplots(2) \naxs[0].plot(x,y,'.b')\naxs[1].plot(x,2*x,'r')\n\n\n\n\n\n\n\n\n- 예시2\n\nfig, axs = plt.subplots(2,2)\naxs[0,0].plot(x,2*x,'--b')\naxs[0,1].plot(x,ϵ,'.r')\naxs[1,0].plot(x,y,'.r')\naxs[1,1].plot(x,y,'.r')\naxs[1,1].plot(x,2*x,'-b')"
  },
  {
    "objectID": "posts/2022-09-19-3wk-1.html#예제2-예제1의-응용",
    "href": "posts/2022-09-19-3wk-1.html#예제2-예제1의-응용",
    "title": "03wk-1",
    "section": "예제2: 예제1의 응용",
    "text": "예제2: 예제1의 응용\n- 예제1상황\n\nfig\n\n\n\n\n\n\n\n\n- 여기서 축을 하나 더 추가할거에요\n\nfig.axes\n\n[&lt;Axes:&gt;]\n\n\n\nfig.add_axes([1,1,1,1])\n\n&lt;Axes:&gt;\n\n\n\nfig.axes\n\n[&lt;Axes:&gt;, &lt;Axes:&gt;]\n\n\n\nfig\n\n\n\n\n\n\n\n\n\nax1,ax2 = fig.axes\n\n- ax2에 파란선으로 그림을 그리자.\n\nax2.plot([1,2,3,4],[1,2,4,3],'--ob')\n\n\nfig"
  },
  {
    "objectID": "posts/2022-09-19-3wk-1.html#예제3-더-응용-미니맵",
    "href": "posts/2022-09-19-3wk-1.html#예제3-더-응용-미니맵",
    "title": "03wk-1",
    "section": "예제3: 더 응용! (미니맵)",
    "text": "예제3: 더 응용! (미니맵)\n- 지금 상황\n\nfig\n\n\n\n\n\n\n\n\n- 액시즈를 하나 더 추가\n\nfig.add_axes([0.65,0.1,0.3,0.3])\n\n&lt;Axes:&gt;\n\n\n\nfig\n\n\n\n\n\n\n\n\n\nfig.axes[-1].plot([1,2,3,4],[1,2,4,3],'xr')\n\n\nfig"
  },
  {
    "objectID": "posts/2022-09-19-3wk-1.html#예제4-재해석1",
    "href": "posts/2022-09-19-3wk-1.html#예제4-재해석1",
    "title": "03wk-1",
    "section": "예제4: 재해석1",
    "text": "예제4: 재해석1\n(ver1)\n\nplt.plot([1,2,3,4],[1,2,4,3])\n\n\n\n\n\n\n\n\n(ver2)\nver1은 사실 아래가 연속적으로 실행된 축약구문임\nfig = plt.figure() \nfig.add_axes([?,?,?,?])\nax1 = fig.axes[0]\nax1.plot([1,2,3,4],[1,2,4,3])\nfig"
  },
  {
    "objectID": "posts/2022-09-19-3wk-1.html#예제5-재해석2",
    "href": "posts/2022-09-19-3wk-1.html#예제5-재해석2",
    "title": "03wk-1",
    "section": "예제5: 재해석2",
    "text": "예제5: 재해석2\n- 아래의 코드도 재해석하자.\n\nfig, axs = plt.subplots(2,2)\n\n\n\n\n\n\n\n\n\nfig, axs = plt.subplots(2,2)\naxs[0,0].plot([1,2,3,4],[1,2,4,3],'.')\naxs[0,1].plot([1,2,3,4],[1,2,4,3],'--r')\naxs[1,0].plot([1,2,3,4],[1,2,4,3],'o--')\naxs[1,1].plot([1,2,3,4],[1,2,4,3],'o--',color='lime')\n\n\n\n\n\n\n\n\n- fig, axs = plt.subplots(2,2)의 축약버전을 이해하면된다.\n(ver1)\n\nfig, axs = plt.subplots(2,2)\n\n\n\n\n\n\n\n\n(ver2)\nver1은 사실 아래의 축약!\nfig = plt.figure()\nfig.add_axes([?,?,?,?]) \nfig.add_axes([?,?,?,?])\nfig.add_axes([?,?,?,?])\nfig.add_axes([?,?,?,?])\nax1,ax2,ax3,ax4 = fig.axes\naxs = np.array(((ax1,ax2),(ax3,ax4)))\n(ver3)\nver1은 아래와 같이 표현할 수도 있다.\n\nfig = plt.figure()\naxs = fig.subplots(2,2)"
  },
  {
    "objectID": "posts/2022-09-21-3wk-2.html",
    "href": "posts/2022-09-21-3wk-2.html",
    "title": "03wk-2",
    "section": "",
    "text": "산점도 응용예제 1,2,3 (표본상관계수, 앤스콤플랏, 무상관)"
  },
  {
    "objectID": "posts/2022-09-21-3wk-2.html#예제소개",
    "href": "posts/2022-09-21-3wk-2.html#예제소개",
    "title": "03wk-2",
    "section": "예제소개",
    "text": "예제소개\n- 아래와 같은 자료를 수집하였다고 하자.\n\n몸무게 = [44,48,49,58,62,68,69,70,76,79]\n키 = [159,160,162,165,167,162,165,175,165,172]\n\n\nx=[44,48,49,58,62,68,69,70,76,79]\ny=[159,160,162,165,167,162,165,175,165,172]\n\n\nplt.plot(x,y,'o')\n\n\n\n\n\n\n\n\n\n키가 큰 사람일수록 몸무게도 많이 나간다. (반대도 성립)\n키와 몸무게는 관계가 있어보인다. (정비례)\n\n- 얼만큼 정비례인지?\n\n이 질문에 대답하기 위해서는 상관계수의 개념을 알아야 한다.\n상관계수는 산점도에서 가장 중요한 개념중 하나."
  },
  {
    "objectID": "posts/2022-09-21-3wk-2.html#상관계수의-정의",
    "href": "posts/2022-09-21-3wk-2.html#상관계수의-정의",
    "title": "03wk-2",
    "section": "상관계수의 정의",
    "text": "상관계수의 정의\n- (표본)상관계수\n\\[r=\\frac{\\sum_{i=1}^{n}(x_i-\\bar{x})(y_i-\\bar{y}) }{\\sqrt{\\sum_{i=1}^{n}(x_i-\\bar{x})^2\\sum_{i=1}^{n}(y_i-\\bar{y})^2 }}=\\sum_{i=1}^{n}\\tilde{x}_i\\tilde{y}_i \\]\n\n단, \\(\\tilde{x}_i=\\frac{(x_i-\\bar{x})}{\\sqrt{\\sum_{i=1}^n(x_i-\\bar{x})^2}}\\), \\(\\tilde{y}_i=\\frac{(y_i-\\bar{y})}{\\sqrt{\\sum_{i=1}^n(y_i-\\bar{y})^2}}\\)\n\n* 표본의 의미\n평균과 표본평균\n\nnp.random.seed(43052)\nx = np.random.randn(10)\nx\n\narray([ 0.38342049,  1.0841745 ,  1.14277825,  0.30789368,  0.23778744,\n        0.35595116, -1.66307542, -1.38277318, -1.92684484, -1.4862163 ])\n\n\n\nx는 의 각 원소는 모두 평균이 0인 정규분포에서 추출했다고 표현\n\n\nnp.mean(x)\n\n0.09434107867212947\n\n\n\n\\({\\tt x}=(x_1,\\dots, x_{10})\\)의 표본평균은 \\({\\bar x}=0.09434107867212947\\) 라고 표현"
  },
  {
    "objectID": "posts/2022-09-21-3wk-2.html#상관계수의-의미",
    "href": "posts/2022-09-21-3wk-2.html#상관계수의-의미",
    "title": "03wk-2",
    "section": "상관계수의 의미",
    "text": "상관계수의 의미\n- 의미?\n\nx=np.array(x)\ny=np.array(y)\n\n\nfig, (ax1,ax2,ax3) = plt.subplots(1,3,figsize=(9,4)) \n\n\n\n\n\n\n\n\n\nax1.plot(x,y,'o')\nax2.plot(x-np.mean(x),y-np.mean(y),'o')\n\n\nfig\n\n\n\n\n\n\n\n\n- \\(\\tilde{x}_i\\)와 \\(\\tilde{y}_i\\)를 계산하기 위해서 \\(a=\\sqrt{\\sum_{i=1}^{n}(x_i-\\bar{x})^2}, b=\\sqrt{\\sum_{i=1}^{n}(y_i-\\bar{y})^2}\\)를 계산하자.\n(방법1)\n\na=np.sqrt(np.sum((x-np.mean(x))**2))\nb=np.sqrt(np.sum((y-np.mean(y))**2))\na,b\n\n(2.8842557251032446, 15.218409903797438)\n\n\n\n해석: \\(a&gt;b\\) 이므로 \\(\\{x_i\\}\\)들이 \\(\\{y_i\\}\\)들 보다 좀 더 퍼져있다. (=평균근처에 몰려있지 않다)\n\n(방법2)\n- 사실 \\(a,b\\)는 아래와 같이 계산할 수 있다.\n\\(a=\\sqrt{n}\\times{\\tt np.std(x)}\\)\n\\(b=\\sqrt{n}\\times{\\tt np.std(y)}\\)\n\nn=len(x)\nnp.sqrt(n)*np.std(x), np.sqrt(n)*np.std(y)\n\n(2.8842557251032446, 15.21840990379744)\n\n\n\n\\({\\tt np.std(x)}=\\sqrt{\\frac{1}{n}\\sum_{i=1}^{n}(x_i-\\bar{x})^2}\\)\n\\({\\tt np.std(y)}=\\sqrt{\\frac{1}{n}\\sum_{i=1}^{n}(y_i-\\bar{y})^2}\\)\n\n\nnote: \\({\\tt np.std(x,ddof=1)}=\\sqrt{\\frac{1}{n-1}\\sum_{i=1}^{n}(x_i-\\bar{x})^2}\\)\n\n- 이제 \\((\\tilde{x}_i,\\tilde{y}_i)\\)를 ax3에 그려보자.\n\nxx= (x-np.mean(x))/a\nyy= (y-np.mean(y))/b\nax3.plot(xx,yy,'o')\n\n\nfig\n\n\n\n\n\n\n\n\n질문: \\(r\\)의 값이 양수인가? 음수인가?\n- plotly 사용하여 \\((\\tilde{x}_i,\\tilde{y}_i)\\)를 그려보자.\n\nfig=px.scatter(x=xx, y=yy)\nHTML(fig.to_html(include_plotlyjs='cdn',include_mathjax=False))\n\n\n\n\n                            \n                                            \n\n\n\n\n\n\\(\\tilde{x}_i\\), \\(\\tilde{y}_i\\) 를 곱한값이 양수인것과 음수인것을 체크해보자.\n양수인쪽이 많은지 음수인쪽이 많은지 생각해보자.\n\\(r=\\sum_{i=1}^{n}\\tilde{x}_i \\tilde{y}_i\\) 의 부호는?"
  },
  {
    "objectID": "posts/2022-09-21-3wk-2.html#그림을-보고-상관계수의-부호를-알아내는-방법",
    "href": "posts/2022-09-21-3wk-2.html#그림을-보고-상관계수의-부호를-알아내는-방법",
    "title": "03wk-2",
    "section": "그림을 보고 상관계수의 부호를 알아내는 방법",
    "text": "그림을 보고 상관계수의 부호를 알아내는 방법\n- \\((x_i,y_i)\\)의 산점도를 보고 \\((\\tilde{x}_i, \\tilde{y}_i)\\) 의 산점도를 상상 \\(\\to\\) 1,3 분면에 점들이 많으면 양수, 2,4 분면에 점들이 많으면 음수"
  },
  {
    "objectID": "posts/2022-09-21-3wk-2.html#그림을-보고-상관계수의-절대값을-알아내는-방법",
    "href": "posts/2022-09-21-3wk-2.html#그림을-보고-상관계수의-절대값을-알아내는-방법",
    "title": "03wk-2",
    "section": "그림을 보고 상관계수의 절대값을 알아내는 방법",
    "text": "그림을 보고 상관계수의 절대값을 알아내는 방법\n- 이해를 위한 예시\n\nx=np.arange(0,10,0.1)\ny1=x+np.random.normal(loc=0,scale=1.0,size=len(x))\ny2=x+np.random.normal(loc=0,scale=7.0,size=len(x))\n\n\nplt.plot(x,y1,'o')\nplt.plot(x,y2,'x')\n\n\n\n\n\n\n\n\n각 데이터셋의 표준상관계수를 각각 \\(r_1\\)(파란색), \\(r_2\\)(주황색)라고 하자.\n(1) \\(r_1\\), \\(r_2\\)의 부호는 양수인가? 음수인가? –&gt; 양수\n(2) \\(r_1,r_2\\)의 값중 어떠한 값이 더 절대값이 큰가? –&gt; 잘모르겠음. 따져보자.\n\ndef tilde(x):\n    n= len(x)\n    return (x-np.mean(x)) / (np.std(x)*np.sqrt(n))    \n\n\nxx= tilde(x)\nyy1= tilde(y1)\nyy2= tilde(y2)\n\n\nfig, ax = plt.subplots(1,2)\nax[0].plot(x,y1,'o')\nax[0].plot(x,y2,'x')\nax[1].plot(x,yy1,'o')\nax[1].plot(x,yy2,'x')\n\n\n\n\n\n\n\n\n\nr1, r2 = sum(xx*yy1), sum(xx*yy2)\nr1, r2\n\n(0.9473089524539402, 0.4445681691326099)\n\n\n- 그림을 보고 상관계수의 절대값을 알아내는 방법!: 직선근처에 몰려있으면 절대값이 커요!"
  },
  {
    "objectID": "posts/2022-10-17-7wk-1.html",
    "href": "posts/2022-10-17-7wk-1.html",
    "title": "07wk-1",
    "section": "",
    "text": "판다스– 인덱싱(2), 판다스–새로운열의할당(1), 아이스크림을 많이 먹으면 걸리는 병(1)"
  },
  {
    "objectID": "posts/2022-10-17-7wk-1.html#데이터",
    "href": "posts/2022-10-17-7wk-1.html#데이터",
    "title": "07wk-1",
    "section": "데이터",
    "text": "데이터\n\ndf=pd.read_csv('https://raw.githubusercontent.com/PacktPublishing/Pandas-Cookbook/master/data/movie.csv')\ndf\n\n\n\n\n\n\n\n\ncolor\ndirector_name\nnum_critic_for_reviews\nduration\ndirector_facebook_likes\nactor_3_facebook_likes\nactor_2_name\nactor_1_facebook_likes\ngross\ngenres\n...\nnum_user_for_reviews\nlanguage\ncountry\ncontent_rating\nbudget\ntitle_year\nactor_2_facebook_likes\nimdb_score\naspect_ratio\nmovie_facebook_likes\n\n\n\n\n0\nColor\nJames Cameron\n723.0\n178.0\n0.0\n855.0\nJoel David Moore\n1000.0\n760505847.0\nAction|Adventure|Fantasy|Sci-Fi\n...\n3054.0\nEnglish\nUSA\nPG-13\n237000000.0\n2009.0\n936.0\n7.9\n1.78\n33000\n\n\n1\nColor\nGore Verbinski\n302.0\n169.0\n563.0\n1000.0\nOrlando Bloom\n40000.0\n309404152.0\nAction|Adventure|Fantasy\n...\n1238.0\nEnglish\nUSA\nPG-13\n300000000.0\n2007.0\n5000.0\n7.1\n2.35\n0\n\n\n2\nColor\nSam Mendes\n602.0\n148.0\n0.0\n161.0\nRory Kinnear\n11000.0\n200074175.0\nAction|Adventure|Thriller\n...\n994.0\nEnglish\nUK\nPG-13\n245000000.0\n2015.0\n393.0\n6.8\n2.35\n85000\n\n\n3\nColor\nChristopher Nolan\n813.0\n164.0\n22000.0\n23000.0\nChristian Bale\n27000.0\n448130642.0\nAction|Thriller\n...\n2701.0\nEnglish\nUSA\nPG-13\n250000000.0\n2012.0\n23000.0\n8.5\n2.35\n164000\n\n\n4\nNaN\nDoug Walker\nNaN\nNaN\n131.0\nNaN\nRob Walker\n131.0\nNaN\nDocumentary\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n12.0\n7.1\nNaN\n0\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n4911\nColor\nScott Smith\n1.0\n87.0\n2.0\n318.0\nDaphne Zuniga\n637.0\nNaN\nComedy|Drama\n...\n6.0\nEnglish\nCanada\nNaN\nNaN\n2013.0\n470.0\n7.7\nNaN\n84\n\n\n4912\nColor\nNaN\n43.0\n43.0\nNaN\n319.0\nValorie Curry\n841.0\nNaN\nCrime|Drama|Mystery|Thriller\n...\n359.0\nEnglish\nUSA\nTV-14\nNaN\nNaN\n593.0\n7.5\n16.00\n32000\n\n\n4913\nColor\nBenjamin Roberds\n13.0\n76.0\n0.0\n0.0\nMaxwell Moody\n0.0\nNaN\nDrama|Horror|Thriller\n...\n3.0\nEnglish\nUSA\nNaN\n1400.0\n2013.0\n0.0\n6.3\nNaN\n16\n\n\n4914\nColor\nDaniel Hsia\n14.0\n100.0\n0.0\n489.0\nDaniel Henney\n946.0\n10443.0\nComedy|Drama|Romance\n...\n9.0\nEnglish\nUSA\nPG-13\nNaN\n2012.0\n719.0\n6.3\n2.35\n660\n\n\n4915\nColor\nJon Gunn\n43.0\n90.0\n16.0\n16.0\nBrian Herzlinger\n86.0\n85222.0\nDocumentary\n...\n84.0\nEnglish\nUSA\nPG\n1100.0\n2004.0\n23.0\n6.6\n1.85\n456\n\n\n\n\n4916 rows × 28 columns\n\n\n\n- 열의 이름을 출력하여 보자."
  },
  {
    "objectID": "posts/2022-10-17-7wk-1.html#기본인덱싱-df-인덱싱공부-1단계-내용",
    "href": "posts/2022-10-17-7wk-1.html#기본인덱싱-df-인덱싱공부-1단계-내용",
    "title": "07wk-1",
    "section": "기본인덱싱 (df 인덱싱공부 1단계 내용)",
    "text": "기본인덱싱 (df 인덱싱공부 1단계 내용)\n- color ~ num_voted_user 를 뽑고 + aspect_ratio 도 추가적으로 뽑고싶다. -&gt; loc으로는 못하겠어요..\n\ndf.loc[:,['color':'num_voted_users','aspect_ratio']]\n\nSyntaxError: invalid syntax (1210972629.py, line 1)\n\n\n- (팁) 복잡한 조건은 iloc으로 쓰는게 편할때가 있다. \\(\\to\\) 그런데 df.columns 변수들이 몇번인지 알아보기 힘듬 \\(\\to\\) 아래와 같이 하면 열의 이름을 인덱스와 함께 출력할 수 있음\n\npd.Series(df.columns)\n\n0                         color\n1                 director_name\n2        num_critic_for_reviews\n3                      duration\n4       director_facebook_likes\n5        actor_3_facebook_likes\n6                  actor_2_name\n7        actor_1_facebook_likes\n8                         gross\n9                        genres\n10                 actor_1_name\n11                  movie_title\n12              num_voted_users\n13    cast_total_facebook_likes\n14                 actor_3_name\n15         facenumber_in_poster\n16                plot_keywords\n17              movie_imdb_link\n18         num_user_for_reviews\n19                     language\n20                      country\n21               content_rating\n22                       budget\n23                   title_year\n24       actor_2_facebook_likes\n25                   imdb_score\n26                 aspect_ratio\n27         movie_facebook_likes\ndtype: object\n\n\n\nlist(range(13))+[26]\n\n[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 26]\n\n\n\ndf.iloc[:,list(range(13))+[26]] \n\n\n\n\n\n\n\n\ncolor\ndirector_name\nnum_critic_for_reviews\nduration\ndirector_facebook_likes\nactor_3_facebook_likes\nactor_2_name\nactor_1_facebook_likes\ngross\ngenres\nactor_1_name\nmovie_title\nnum_voted_users\naspect_ratio\n\n\n\n\n0\nColor\nJames Cameron\n723.0\n178.0\n0.0\n855.0\nJoel David Moore\n1000.0\n760505847.0\nAction|Adventure|Fantasy|Sci-Fi\nCCH Pounder\nAvatar\n886204\n1.78\n\n\n1\nColor\nGore Verbinski\n302.0\n169.0\n563.0\n1000.0\nOrlando Bloom\n40000.0\n309404152.0\nAction|Adventure|Fantasy\nJohnny Depp\nPirates of the Caribbean: At World's End\n471220\n2.35\n\n\n2\nColor\nSam Mendes\n602.0\n148.0\n0.0\n161.0\nRory Kinnear\n11000.0\n200074175.0\nAction|Adventure|Thriller\nChristoph Waltz\nSpectre\n275868\n2.35\n\n\n3\nColor\nChristopher Nolan\n813.0\n164.0\n22000.0\n23000.0\nChristian Bale\n27000.0\n448130642.0\nAction|Thriller\nTom Hardy\nThe Dark Knight Rises\n1144337\n2.35\n\n\n4\nNaN\nDoug Walker\nNaN\nNaN\n131.0\nNaN\nRob Walker\n131.0\nNaN\nDocumentary\nDoug Walker\nStar Wars: Episode VII - The Force Awakens\n8\nNaN\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n4911\nColor\nScott Smith\n1.0\n87.0\n2.0\n318.0\nDaphne Zuniga\n637.0\nNaN\nComedy|Drama\nEric Mabius\nSigned Sealed Delivered\n629\nNaN\n\n\n4912\nColor\nNaN\n43.0\n43.0\nNaN\n319.0\nValorie Curry\n841.0\nNaN\nCrime|Drama|Mystery|Thriller\nNatalie Zea\nThe Following\n73839\n16.00\n\n\n4913\nColor\nBenjamin Roberds\n13.0\n76.0\n0.0\n0.0\nMaxwell Moody\n0.0\nNaN\nDrama|Horror|Thriller\nEva Boehnke\nA Plague So Pleasant\n38\nNaN\n\n\n4914\nColor\nDaniel Hsia\n14.0\n100.0\n0.0\n489.0\nDaniel Henney\n946.0\n10443.0\nComedy|Drama|Romance\nAlan Ruck\nShanghai Calling\n1255\n2.35\n\n\n4915\nColor\nJon Gunn\n43.0\n90.0\n16.0\n16.0\nBrian Herzlinger\n86.0\n85222.0\nDocumentary\nJohn August\nMy Date with Drew\n4285\n1.85\n\n\n\n\n4916 rows × 14 columns"
  },
  {
    "objectID": "posts/2022-10-17-7wk-1.html#actor라는-단어가-포함된-column-선택",
    "href": "posts/2022-10-17-7wk-1.html#actor라는-단어가-포함된-column-선택",
    "title": "07wk-1",
    "section": "actor라는 단어가 포함된 column 선택",
    "text": "actor라는 단어가 포함된 column 선택\n- 다시 열의 이름들을 확인\n\ndf.columns\n\nIndex(['color', 'director_name', 'num_critic_for_reviews', 'duration',\n       'director_facebook_likes', 'actor_3_facebook_likes', 'actor_2_name',\n       'actor_1_facebook_likes', 'gross', 'genres', 'actor_1_name',\n       'movie_title', 'num_voted_users', 'cast_total_facebook_likes',\n       'actor_3_name', 'facenumber_in_poster', 'plot_keywords',\n       'movie_imdb_link', 'num_user_for_reviews', 'language', 'country',\n       'content_rating', 'budget', 'title_year', 'actor_2_facebook_likes',\n       'imdb_score', 'aspect_ratio', 'movie_facebook_likes'],\n      dtype='object')\n\n\n- 방법1\n\ndf.iloc[:,list(map(lambda x : 'actor' in x, df.columns) )]\n\n\n\n\n\n\n\n\nactor_3_facebook_likes\nactor_2_name\nactor_1_facebook_likes\nactor_1_name\nactor_3_name\nactor_2_facebook_likes\n\n\n\n\n0\n855.0\nJoel David Moore\n1000.0\nCCH Pounder\nWes Studi\n936.0\n\n\n1\n1000.0\nOrlando Bloom\n40000.0\nJohnny Depp\nJack Davenport\n5000.0\n\n\n2\n161.0\nRory Kinnear\n11000.0\nChristoph Waltz\nStephanie Sigman\n393.0\n\n\n3\n23000.0\nChristian Bale\n27000.0\nTom Hardy\nJoseph Gordon-Levitt\n23000.0\n\n\n4\nNaN\nRob Walker\n131.0\nDoug Walker\nNaN\n12.0\n\n\n...\n...\n...\n...\n...\n...\n...\n\n\n4911\n318.0\nDaphne Zuniga\n637.0\nEric Mabius\nCrystal Lowe\n470.0\n\n\n4912\n319.0\nValorie Curry\n841.0\nNatalie Zea\nSam Underwood\n593.0\n\n\n4913\n0.0\nMaxwell Moody\n0.0\nEva Boehnke\nDavid Chandler\n0.0\n\n\n4914\n489.0\nDaniel Henney\n946.0\nAlan Ruck\nEliza Coupe\n719.0\n\n\n4915\n16.0\nBrian Herzlinger\n86.0\nJohn August\nJon Gunn\n23.0\n\n\n\n\n4916 rows × 6 columns\n\n\n\n- 방법2\n\ndf.loc[:,list(map(lambda x : 'actor' in x, df.columns) )]\n\n\n\n\n\n\n\n\nactor_3_facebook_likes\nactor_2_name\nactor_1_facebook_likes\nactor_1_name\nactor_3_name\nactor_2_facebook_likes\n\n\n\n\n0\n855.0\nJoel David Moore\n1000.0\nCCH Pounder\nWes Studi\n936.0\n\n\n1\n1000.0\nOrlando Bloom\n40000.0\nJohnny Depp\nJack Davenport\n5000.0\n\n\n2\n161.0\nRory Kinnear\n11000.0\nChristoph Waltz\nStephanie Sigman\n393.0\n\n\n3\n23000.0\nChristian Bale\n27000.0\nTom Hardy\nJoseph Gordon-Levitt\n23000.0\n\n\n4\nNaN\nRob Walker\n131.0\nDoug Walker\nNaN\n12.0\n\n\n...\n...\n...\n...\n...\n...\n...\n\n\n4911\n318.0\nDaphne Zuniga\n637.0\nEric Mabius\nCrystal Lowe\n470.0\n\n\n4912\n319.0\nValorie Curry\n841.0\nNatalie Zea\nSam Underwood\n593.0\n\n\n4913\n0.0\nMaxwell Moody\n0.0\nEva Boehnke\nDavid Chandler\n0.0\n\n\n4914\n489.0\nDaniel Henney\n946.0\nAlan Ruck\nEliza Coupe\n719.0\n\n\n4915\n16.0\nBrian Herzlinger\n86.0\nJohn August\nJon Gunn\n23.0\n\n\n\n\n4916 rows × 6 columns\n\n\n\n- 방법3\n\ndf.iloc[:,map(lambda x : 'actor' in x, df.columns)]\n\n\n\n\n\n\n\n\nactor_3_facebook_likes\nactor_2_name\nactor_1_facebook_likes\nactor_1_name\nactor_3_name\nactor_2_facebook_likes\n\n\n\n\n0\n855.0\nJoel David Moore\n1000.0\nCCH Pounder\nWes Studi\n936.0\n\n\n1\n1000.0\nOrlando Bloom\n40000.0\nJohnny Depp\nJack Davenport\n5000.0\n\n\n2\n161.0\nRory Kinnear\n11000.0\nChristoph Waltz\nStephanie Sigman\n393.0\n\n\n3\n23000.0\nChristian Bale\n27000.0\nTom Hardy\nJoseph Gordon-Levitt\n23000.0\n\n\n4\nNaN\nRob Walker\n131.0\nDoug Walker\nNaN\n12.0\n\n\n...\n...\n...\n...\n...\n...\n...\n\n\n4911\n318.0\nDaphne Zuniga\n637.0\nEric Mabius\nCrystal Lowe\n470.0\n\n\n4912\n319.0\nValorie Curry\n841.0\nNatalie Zea\nSam Underwood\n593.0\n\n\n4913\n0.0\nMaxwell Moody\n0.0\nEva Boehnke\nDavid Chandler\n0.0\n\n\n4914\n489.0\nDaniel Henney\n946.0\nAlan Ruck\nEliza Coupe\n719.0\n\n\n4915\n16.0\nBrian Herzlinger\n86.0\nJohn August\nJon Gunn\n23.0\n\n\n\n\n4916 rows × 6 columns\n\n\n\n- 방법4\n\ndf.loc[:,map(lambda x : 'actor' in x, df.columns)]\n\n\n\n\n\n\n\n\nactor_3_facebook_likes\nactor_2_name\nactor_1_facebook_likes\nactor_1_name\nactor_3_name\nactor_2_facebook_likes\n\n\n\n\n0\n855.0\nJoel David Moore\n1000.0\nCCH Pounder\nWes Studi\n936.0\n\n\n1\n1000.0\nOrlando Bloom\n40000.0\nJohnny Depp\nJack Davenport\n5000.0\n\n\n2\n161.0\nRory Kinnear\n11000.0\nChristoph Waltz\nStephanie Sigman\n393.0\n\n\n3\n23000.0\nChristian Bale\n27000.0\nTom Hardy\nJoseph Gordon-Levitt\n23000.0\n\n\n4\nNaN\nRob Walker\n131.0\nDoug Walker\nNaN\n12.0\n\n\n...\n...\n...\n...\n...\n...\n...\n\n\n4911\n318.0\nDaphne Zuniga\n637.0\nEric Mabius\nCrystal Lowe\n470.0\n\n\n4912\n319.0\nValorie Curry\n841.0\nNatalie Zea\nSam Underwood\n593.0\n\n\n4913\n0.0\nMaxwell Moody\n0.0\nEva Boehnke\nDavid Chandler\n0.0\n\n\n4914\n489.0\nDaniel Henney\n946.0\nAlan Ruck\nEliza Coupe\n719.0\n\n\n4915\n16.0\nBrian Herzlinger\n86.0\nJohn August\nJon Gunn\n23.0\n\n\n\n\n4916 rows × 6 columns"
  },
  {
    "objectID": "posts/2022-10-17-7wk-1.html#s로-끝나는-column-선택",
    "href": "posts/2022-10-17-7wk-1.html#s로-끝나는-column-선택",
    "title": "07wk-1",
    "section": "s로 끝나는 column 선택",
    "text": "s로 끝나는 column 선택\n- 방법1\n\ndf.iloc[:,map(lambda x: 's' == x[-1],df.columns )]\n\n\n\n\n\n\n\n\nnum_critic_for_reviews\ndirector_facebook_likes\nactor_3_facebook_likes\nactor_1_facebook_likes\ngross\ngenres\nnum_voted_users\ncast_total_facebook_likes\nplot_keywords\nnum_user_for_reviews\nactor_2_facebook_likes\nmovie_facebook_likes\n\n\n\n\n0\n723.0\n0.0\n855.0\n1000.0\n760505847.0\nAction|Adventure|Fantasy|Sci-Fi\n886204\n4834\navatar|future|marine|native|paraplegic\n3054.0\n936.0\n33000\n\n\n1\n302.0\n563.0\n1000.0\n40000.0\n309404152.0\nAction|Adventure|Fantasy\n471220\n48350\ngoddess|marriage ceremony|marriage proposal|pi...\n1238.0\n5000.0\n0\n\n\n2\n602.0\n0.0\n161.0\n11000.0\n200074175.0\nAction|Adventure|Thriller\n275868\n11700\nbomb|espionage|sequel|spy|terrorist\n994.0\n393.0\n85000\n\n\n3\n813.0\n22000.0\n23000.0\n27000.0\n448130642.0\nAction|Thriller\n1144337\n106759\ndeception|imprisonment|lawlessness|police offi...\n2701.0\n23000.0\n164000\n\n\n4\nNaN\n131.0\nNaN\n131.0\nNaN\nDocumentary\n8\n143\nNaN\nNaN\n12.0\n0\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n4911\n1.0\n2.0\n318.0\n637.0\nNaN\nComedy|Drama\n629\n2283\nfraud|postal worker|prison|theft|trial\n6.0\n470.0\n84\n\n\n4912\n43.0\nNaN\n319.0\n841.0\nNaN\nCrime|Drama|Mystery|Thriller\n73839\n1753\ncult|fbi|hideout|prison escape|serial killer\n359.0\n593.0\n32000\n\n\n4913\n13.0\n0.0\n0.0\n0.0\nNaN\nDrama|Horror|Thriller\n38\n0\nNaN\n3.0\n0.0\n16\n\n\n4914\n14.0\n0.0\n489.0\n946.0\n10443.0\nComedy|Drama|Romance\n1255\n2386\nNaN\n9.0\n719.0\n660\n\n\n4915\n43.0\n16.0\n16.0\n86.0\n85222.0\nDocumentary\n4285\n163\nactress name in title|crush|date|four word tit...\n84.0\n23.0\n456\n\n\n\n\n4916 rows × 12 columns\n\n\n\n- 방법2\n\ndf.loc[:,map(lambda x: 's' == x[-1],df.columns )]\n\n\n\n\n\n\n\n\nnum_critic_for_reviews\ndirector_facebook_likes\nactor_3_facebook_likes\nactor_1_facebook_likes\ngross\ngenres\nnum_voted_users\ncast_total_facebook_likes\nplot_keywords\nnum_user_for_reviews\nactor_2_facebook_likes\nmovie_facebook_likes\n\n\n\n\n0\n723.0\n0.0\n855.0\n1000.0\n760505847.0\nAction|Adventure|Fantasy|Sci-Fi\n886204\n4834\navatar|future|marine|native|paraplegic\n3054.0\n936.0\n33000\n\n\n1\n302.0\n563.0\n1000.0\n40000.0\n309404152.0\nAction|Adventure|Fantasy\n471220\n48350\ngoddess|marriage ceremony|marriage proposal|pi...\n1238.0\n5000.0\n0\n\n\n2\n602.0\n0.0\n161.0\n11000.0\n200074175.0\nAction|Adventure|Thriller\n275868\n11700\nbomb|espionage|sequel|spy|terrorist\n994.0\n393.0\n85000\n\n\n3\n813.0\n22000.0\n23000.0\n27000.0\n448130642.0\nAction|Thriller\n1144337\n106759\ndeception|imprisonment|lawlessness|police offi...\n2701.0\n23000.0\n164000\n\n\n4\nNaN\n131.0\nNaN\n131.0\nNaN\nDocumentary\n8\n143\nNaN\nNaN\n12.0\n0\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n4911\n1.0\n2.0\n318.0\n637.0\nNaN\nComedy|Drama\n629\n2283\nfraud|postal worker|prison|theft|trial\n6.0\n470.0\n84\n\n\n4912\n43.0\nNaN\n319.0\n841.0\nNaN\nCrime|Drama|Mystery|Thriller\n73839\n1753\ncult|fbi|hideout|prison escape|serial killer\n359.0\n593.0\n32000\n\n\n4913\n13.0\n0.0\n0.0\n0.0\nNaN\nDrama|Horror|Thriller\n38\n0\nNaN\n3.0\n0.0\n16\n\n\n4914\n14.0\n0.0\n489.0\n946.0\n10443.0\nComedy|Drama|Romance\n1255\n2386\nNaN\n9.0\n719.0\n660\n\n\n4915\n43.0\n16.0\n16.0\n86.0\n85222.0\nDocumentary\n4285\n163\nactress name in title|crush|date|four word tit...\n84.0\n23.0\n456\n\n\n\n\n4916 rows × 12 columns"
  },
  {
    "objectID": "posts/2022-10-17-7wk-1.html#c-혹은-d로-시작하는-column-선택",
    "href": "posts/2022-10-17-7wk-1.html#c-혹은-d로-시작하는-column-선택",
    "title": "07wk-1",
    "section": "c 혹은 d로 시작하는 column 선택",
    "text": "c 혹은 d로 시작하는 column 선택\n- 방법1\n\ndf.iloc[:,map(lambda x: 'c' == x[0] or 'd' == x[0] ,df.columns )]\n\n\n\n\n\n\n\n\ncolor\ndirector_name\nduration\ndirector_facebook_likes\ncast_total_facebook_likes\ncountry\ncontent_rating\n\n\n\n\n0\nColor\nJames Cameron\n178.0\n0.0\n4834\nUSA\nPG-13\n\n\n1\nColor\nGore Verbinski\n169.0\n563.0\n48350\nUSA\nPG-13\n\n\n2\nColor\nSam Mendes\n148.0\n0.0\n11700\nUK\nPG-13\n\n\n3\nColor\nChristopher Nolan\n164.0\n22000.0\n106759\nUSA\nPG-13\n\n\n4\nNaN\nDoug Walker\nNaN\n131.0\n143\nNaN\nNaN\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n4911\nColor\nScott Smith\n87.0\n2.0\n2283\nCanada\nNaN\n\n\n4912\nColor\nNaN\n43.0\nNaN\n1753\nUSA\nTV-14\n\n\n4913\nColor\nBenjamin Roberds\n76.0\n0.0\n0\nUSA\nNaN\n\n\n4914\nColor\nDaniel Hsia\n100.0\n0.0\n2386\nUSA\nPG-13\n\n\n4915\nColor\nJon Gunn\n90.0\n16.0\n163\nUSA\nPG\n\n\n\n\n4916 rows × 7 columns\n\n\n\n- 방법2\n\ndf.loc[:,map(lambda x: 'c' == x[0] or 'd' == x[0] ,df.columns )]\n\n\n\n\n\n\n\n\ncolor\ndirector_name\nduration\ndirector_facebook_likes\ncast_total_facebook_likes\ncountry\ncontent_rating\n\n\n\n\n0\nColor\nJames Cameron\n178.0\n0.0\n4834\nUSA\nPG-13\n\n\n1\nColor\nGore Verbinski\n169.0\n563.0\n48350\nUSA\nPG-13\n\n\n2\nColor\nSam Mendes\n148.0\n0.0\n11700\nUK\nPG-13\n\n\n3\nColor\nChristopher Nolan\n164.0\n22000.0\n106759\nUSA\nPG-13\n\n\n4\nNaN\nDoug Walker\nNaN\n131.0\n143\nNaN\nNaN\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n4911\nColor\nScott Smith\n87.0\n2.0\n2283\nCanada\nNaN\n\n\n4912\nColor\nNaN\n43.0\nNaN\n1753\nUSA\nTV-14\n\n\n4913\nColor\nBenjamin Roberds\n76.0\n0.0\n0\nUSA\nNaN\n\n\n4914\nColor\nDaniel Hsia\n100.0\n0.0\n2386\nUSA\nPG-13\n\n\n4915\nColor\nJon Gunn\n90.0\n16.0\n163\nUSA\nPG\n\n\n\n\n4916 rows × 7 columns"
  },
  {
    "objectID": "posts/2022-10-17-7wk-1.html#방법1-concat",
    "href": "posts/2022-10-17-7wk-1.html#방법1-concat",
    "title": "07wk-1",
    "section": "방법1: concat",
    "text": "방법1: concat\n\ndf = pd.DataFrame({'a':[1,2,3],'b':[2,3,4]})\ndf\n\n\n\n\n\n\n\n\na\nb\n\n\n\n\n0\n1\n2\n\n\n1\n2\n3\n\n\n2\n3\n4\n\n\n\n\n\n\n\n\n_df = pd.DataFrame({'c':[3,4,5]}) \n_df\n\n\n\n\n\n\n\n\nc\n\n\n\n\n0\n3\n\n\n1\n4\n\n\n2\n5\n\n\n\n\n\n\n\n\npd.concat([df,_df],axis=1)\n\n\n\n\n\n\n\n\na\nb\nc\n\n\n\n\n0\n1\n2\n3\n\n\n1\n2\n3\n4\n\n\n2\n3\n4\n5"
  },
  {
    "objectID": "posts/2022-10-17-7wk-1.html#방법2-4가지-컨셉에-따른-할당",
    "href": "posts/2022-10-17-7wk-1.html#방법2-4가지-컨셉에-따른-할당",
    "title": "07wk-1",
    "section": "방법2: 4가지 컨셉에 따른 할당",
    "text": "방법2: 4가지 컨셉에 따른 할당\n\n# 컨셉1: 불가능\n\ndf = pd.DataFrame({'a':[1,2,3],'b':[2,3,4]})\ndf\n\n\n\n\n\n\n\n\na\nb\n\n\n\n\n0\n1\n2\n\n\n1\n2\n3\n\n\n2\n3\n4\n\n\n\n\n\n\n\n\ndf.c = pd.Series([1,2,3]) \ndf\n\n/home/cgb4/anaconda3/envs/py37/lib/python3.7/site-packages/ipykernel_launcher.py:1: UserWarning: Pandas doesn't allow columns to be created via a new attribute name - see https://pandas.pydata.org/pandas-docs/stable/indexing.html#attribute-access\n  \"\"\"Entry point for launching an IPython kernel.\n\n\n\n\n\n\n\n\n\na\nb\n\n\n\n\n0\n1\n2\n\n\n1\n2\n3\n\n\n2\n3\n4\n\n\n\n\n\n\n\n\n\n# 컨셉2: 가능\n(예시1)\n\ndf = pd.DataFrame({'a':[1,2,3],'b':[2,3,4]})\ndf\n\n\n\n\n\n\n\n\na\nb\n\n\n\n\n0\n1\n2\n\n\n1\n2\n3\n\n\n2\n3\n4\n\n\n\n\n\n\n\n\ndf['c']=[3,4,5]\ndf\n\n\n\n\n\n\n\n\na\nb\nc\n\n\n\n\n0\n1\n2\n3\n\n\n1\n2\n3\n4\n\n\n2\n3\n4\n5\n\n\n\n\n\n\n\n(예시2)\n\ndf = pd.DataFrame({'a':[1,2,3],'b':[2,3,4]})\ndf\n\n\n\n\n\n\n\n\na\nb\n\n\n\n\n0\n1\n2\n\n\n1\n2\n3\n\n\n2\n3\n4\n\n\n\n\n\n\n\n\ndf[['c','d']]=np.array([[3,4,5],[4,5,6]]).T # 굳이.. \ndf\n\n\n\n\n\n\n\n\na\nb\nc\nd\n\n\n\n\n0\n1\n2\n3\n4\n\n\n1\n2\n3\n4\n5\n\n\n2\n3\n4\n5\n6\n\n\n\n\n\n\n\n(예시3)\n\ndf = pd.DataFrame({'a':[1,2,3],'b':[2,3,4]})\ndf\n\n\n\n\n\n\n\n\na\nb\n\n\n\n\n0\n1\n2\n\n\n1\n2\n3\n\n\n2\n3\n4\n\n\n\n\n\n\n\n\ndf['c'],df['d']=[3,4,5],[4,5,6]\ndf\n\n\n\n\n\n\n\n\na\nb\nc\nd\n\n\n\n\n0\n1\n2\n3\n4\n\n\n1\n2\n3\n4\n5\n\n\n2\n3\n4\n5\n6\n\n\n\n\n\n\n\n\n\n# 컨셉3: 불가능\n(예시1)\n\ndf = pd.DataFrame({'a':[1,2,3],'b':[2,3,4]})\ndf\n\n\n\n\n\n\n\n\na\nb\n\n\n\n\n0\n1\n2\n\n\n1\n2\n3\n\n\n2\n3\n4\n\n\n\n\n\n\n\n\ndf.iloc[:,2] = [3,4,5] \ndf\n\nIndexError: iloc cannot enlarge its target object\n\n\n\n\n# 컨셉4: 가능\n(예시1)\n\ndf = pd.DataFrame({'a':[1,2,3],'b':[2,3,4]})\ndf\n\n\n\n\n\n\n\n\na\nb\n\n\n\n\n0\n1\n2\n\n\n1\n2\n3\n\n\n2\n3\n4\n\n\n\n\n\n\n\n\ndf.loc[:,'c'] = [3,4,5] \ndf\n\n\n\n\n\n\n\n\na\nb\nc\n\n\n\n\n0\n1\n2\n3\n\n\n1\n2\n3\n4\n\n\n2\n3\n4\n5\n\n\n\n\n\n\n\n(예시2)\n\ndf = pd.DataFrame({'a':[1,2,3],'b':[2,3,4]})\ndf\n\n\n\n\n\n\n\n\na\nb\n\n\n\n\n0\n1\n2\n\n\n1\n2\n3\n\n\n2\n3\n4\n\n\n\n\n\n\n\n\ndf.loc[:,['c','d']] = np.array([[3,4,5],[4,5,6]]).T # 이거 솔직히 되는지 몰랐어요.. \ndf\n\n\n\n\n\n\n\n\na\nb\nc\nd\n\n\n\n\n0\n1\n2\n3\n4\n\n\n1\n2\n3\n4\n5\n\n\n2\n3\n4\n5\n6\n\n\n\n\n\n\n\n(예시3)\n\ndf = pd.DataFrame({'a':[1,2,3],'b':[2,3,4]})\ndf\n\n\n\n\n\n\n\n\na\nb\n\n\n\n\n0\n1\n2\n\n\n1\n2\n3\n\n\n2\n3\n4\n\n\n\n\n\n\n\n\ndf.loc[:,'c'],df.loc[:,'d'] = [3,4,5],[4,5,6] \ndf\n\n\n\n\n\n\n\n\na\nb\nc\nd\n\n\n\n\n0\n1\n2\n3\n4\n\n\n1\n2\n3\n4\n5\n\n\n2\n3\n4\n5\n6"
  },
  {
    "objectID": "posts/2022-10-17-7wk-1.html#방법3-.assign으로-할당-star-제-최애",
    "href": "posts/2022-10-17-7wk-1.html#방법3-.assign으로-할당-star-제-최애",
    "title": "07wk-1",
    "section": "방법3: .assign으로 할당 (\\(\\star\\)) – 제 최애",
    "text": "방법3: .assign으로 할당 (\\(\\star\\)) – 제 최애\n\ndf = pd.DataFrame({'a':[1,2,3],'b':[2,3,4]})\ndf\n\n\n\n\n\n\n\n\na\nb\n\n\n\n\n0\n1\n2\n\n\n1\n2\n3\n\n\n2\n3\n4\n\n\n\n\n\n\n\n\ndf.assign(c=[3,4,5])\n\n\n\n\n\n\n\n\na\nb\nc\n\n\n\n\n0\n1\n2\n3\n\n\n1\n2\n3\n4\n\n\n2\n3\n4\n5\n\n\n\n\n\n\n\n\ndf.assign(c=[3,4,5],d=[4,5,6])\n\n\n\n\n\n\n\n\na\nb\nc\nd\n\n\n\n\n0\n1\n2\n3\n4\n\n\n1\n2\n3\n4\n5\n\n\n2\n3\n4\n5\n6\n\n\n\n\n\n\n\n\ndf.assign(c=[3,4,5]).assign(d=[4,5,6])\n\n\n\n\n\n\n\n\na\nb\nc\nd\n\n\n\n\n0\n1\n2\n3\n4\n\n\n1\n2\n3\n4\n5\n\n\n2\n3\n4\n5\n6"
  },
  {
    "objectID": "posts/2022-10-17-7wk-1.html#방법4-.eval을-이용한-할당",
    "href": "posts/2022-10-17-7wk-1.html#방법4-.eval을-이용한-할당",
    "title": "07wk-1",
    "section": "방법4: .eval을 이용한 할당",
    "text": "방법4: .eval을 이용한 할당\n\ndf = pd.DataFrame({'a':[1,2,3],'b':[2,3,4]})\ndf\n\n\n\n\n\n\n\n\na\nb\n\n\n\n\n0\n1\n2\n\n\n1\n2\n3\n\n\n2\n3\n4\n\n\n\n\n\n\n\n\ndf.eval('c=[3,4,5]')\n\n\n\n\n\n\n\n\na\nb\nc\n\n\n\n\n0\n1\n2\n3\n\n\n1\n2\n3\n4\n\n\n2\n3\n4\n5\n\n\n\n\n\n\n\n\ndf.eval('c=[3,4,5]').eval('d=[4,5,6]')\n\n\n\n\n\n\n\n\na\nb\nc\nd\n\n\n\n\n0\n1\n2\n3\n4\n\n\n1\n2\n3\n4\n5\n\n\n2\n3\n4\n5\n6"
  },
  {
    "objectID": "posts/2022-10-17-7wk-1.html#연습해보기",
    "href": "posts/2022-10-17-7wk-1.html#연습해보기",
    "title": "07wk-1",
    "section": "연습해보기",
    "text": "연습해보기\n\n# 데이터프레임 생성\n\ndf=pd.DataFrame({'x':np.random.randn(1000),'y':np.random.randn(1000)})\ndf\n\n\n\n\n\n\n\n\nx\ny\n\n\n\n\n0\n1.085469\n-1.427839\n\n\n1\n-1.473272\n-1.527442\n\n\n2\n-1.007274\n-1.312202\n\n\n3\n1.220634\n-0.474995\n\n\n4\n-0.101496\n1.636326\n\n\n...\n...\n...\n\n\n995\n-0.668557\n-0.435391\n\n\n996\n0.455894\n0.796826\n\n\n997\n-1.004412\n1.843344\n\n\n998\n-2.115145\n-1.971965\n\n\n999\n0.861141\n-0.193742\n\n\n\n\n1000 rows × 2 columns\n\n\n\n\n\n# 새로운열 r을 생성하고 \\(r=\\sqrt{x^2 + y^2}\\)를 계산\n- 방법1: 브로드캐스팅\n\ndf.assign(r=np.sqrt(df.x**2 + df.y**2))\n\n\n\n\n\n\n\n\nx\ny\nr\n\n\n\n\n0\n1.085469\n-1.427839\n1.793590\n\n\n1\n-1.473272\n-1.527442\n2.122171\n\n\n2\n-1.007274\n-1.312202\n1.654229\n\n\n3\n1.220634\n-0.474995\n1.309796\n\n\n4\n-0.101496\n1.636326\n1.639470\n\n\n...\n...\n...\n...\n\n\n995\n-0.668557\n-0.435391\n0.797831\n\n\n996\n0.455894\n0.796826\n0.918026\n\n\n997\n-1.004412\n1.843344\n2.099229\n\n\n998\n-2.115145\n-1.971965\n2.891796\n\n\n999\n0.861141\n-0.193742\n0.882667\n\n\n\n\n1000 rows × 3 columns\n\n\n\n- 방법2: lambda + map을 이용한 개별원소 계산\n\ndf.assign(r=list(map(lambda x,y: np.sqrt(x**2+y**2), df.x,df.y)))\n\n\n\n\n\n\n\n\nx\ny\nr\n\n\n\n\n0\n1.085469\n-1.427839\n1.793590\n\n\n1\n-1.473272\n-1.527442\n2.122171\n\n\n2\n-1.007274\n-1.312202\n1.654229\n\n\n3\n1.220634\n-0.474995\n1.309796\n\n\n4\n-0.101496\n1.636326\n1.639470\n\n\n...\n...\n...\n...\n\n\n995\n-0.668557\n-0.435391\n0.797831\n\n\n996\n0.455894\n0.796826\n0.918026\n\n\n997\n-1.004412\n1.843344\n2.099229\n\n\n998\n-2.115145\n-1.971965\n2.891796\n\n\n999\n0.861141\n-0.193742\n0.882667\n\n\n\n\n1000 rows × 3 columns\n\n\n\n- 방법3: eval\n\ndf.eval('r=sqrt(x**2+y**2)')\n\n\n\n\n\n\n\n\nx\ny\nr\n\n\n\n\n0\n1.085469\n-1.427839\n1.793590\n\n\n1\n-1.473272\n-1.527442\n2.122171\n\n\n2\n-1.007274\n-1.312202\n1.654229\n\n\n3\n1.220634\n-0.474995\n1.309796\n\n\n4\n-0.101496\n1.636326\n1.639470\n\n\n...\n...\n...\n...\n\n\n995\n-0.668557\n-0.435391\n0.797831\n\n\n996\n0.455894\n0.796826\n0.918026\n\n\n997\n-1.004412\n1.843344\n2.099229\n\n\n998\n-2.115145\n-1.971965\n2.891796\n\n\n999\n0.861141\n-0.193742\n0.882667\n\n\n\n\n1000 rows × 3 columns"
  },
  {
    "objectID": "posts/2022-10-17-7wk-1.html#toy-exam",
    "href": "posts/2022-10-17-7wk-1.html#toy-exam",
    "title": "07wk-1",
    "section": "Toy exam",
    "text": "Toy exam\n- 교재의 예제상황은 예를들면 아래와 같다.\n(숨은진짜상황1)\n\\[\\text{아이스크림 판매량} = 20 + 2 \\times \\text{온도} + \\epsilon\\]\n\nnp.random.seed(1) \ntemp= np.array([-10.2, -5.2, 0.1, 10.1, 12.2, 14.7, \n                25.4, 26.8, 28.9, 35.1, 32.2, 34.6])\neps= np.random.normal(size=12,scale=5)\nicecream= 20 + temp * 2 + eps\n\n\nplt.plot(temp,icecream,'.')\n\n\n\n\n\n\n\n\n\n온도와 아이스크림 판매량의 산점도\n\n(숨은진짜상황2)\n\\[\\text{소아마비 반응수치} = 30 + 0.5 \\times \\text{온도} + \\epsilon\\] - 좌변은 소아마비임을 나타내는 어떠한 반응수치라고 생각하자.\n\nnp.random.seed(2) \neps = np.random.normal(size=12,scale=5) \ndisease = 30+ temp* 0.5 + eps\n\n\nplt.plot(temp,disease,'.')\n\n\n\n\n\n\n\n\n\n온도와 소아마비의 산점도\n\n(우리가 데이터로부터 관측한 상황)\n- 아이스크림과 질병의 산점도를 그려보자.\n\nplt.plot(icecream,disease,'.')\n\n\n\n\n\n\n\n\n\n양의 상관관계에 있다.\n\n- 아이스크림 중 어떠한 물질이 소아마비를 일으키는것이 분명하므로 (인과성이 분명해보이니까) 아래와 같은 모형을 세우자. &lt;– 여기서부터 틀렸음\n\\[{\\tt disease}_i =\\beta_0 +\\beta_1 {\\tt icecream}_i +\\epsilon_i,\\quad \\textbf{for} ~~ i=1,2,\\dots, 12\\]\n- 적절한 \\(\\beta_0\\)와 \\(\\beta_1\\)을 추정하면 우리는 아이스크림과 소아마비의 관계를 알 수 있다. &lt;– 틀린주장\n\n틀린 모형\n도데체 우리가 뭘 잘못했는가?\n\n- 두 변수 사이에 상관관계가 있어도 실제 원인은 다른 변수에 숨겨져 있는 경우가 많다.\n(ex1)\n\n온도 \\(\\to\\) 익사\n온도 \\(\\to\\) 아이스크림\n아이스크림과 익사자도 양의 상관관계에 있을것이다.\n아이스크림을 먹이면 물에 빠져 죽는다 \\(\\to\\) 틀린주장\n사실 기온이 숨겨진 원인이다. 기온이 증가하면 아이스크림 판매량도 증가하고 폭염때문에 익사사고율도 높아지는 구조이다.\n\n(ex2)\n\n인구수 \\(\\to\\) 교회\n인구수 \\(\\to\\) 범죄건수\n지역별 교회와 범죄건수를 살펴보면 상관관계가 높게 나올것임\n교회를 지으면 범죄건수도 증가한다? \\(\\to\\) 틀린주장\n사실 인구가 숨겨진 요인임\n\n- ex2, ex1에 대하여 바른 분석을 하려면?\n\nex2: 인구가 비슷한 도시끼리 묶어서 비교해보면 교회와 범죄의 건수는 양의 상관관계에 있지 않을것임\nex1: 온도가 비슷한 그룹끼리 묶어보자.\n\n- 올바른 분석: 온도가 비슷한 그룹끼리 묶어서 그려보자. \\(\\to\\) 상관계수가 줄어들 것이다.\n\nplt.plot(icecream[:6],disease[:6],'.')\n\n\n\n\n\n\n\n\n\nplt.plot(icecream[6:],disease[6:],'.')\n\n\n\n\n\n\n\n\n\n진짜로 선형관계가 약해졌다.."
  },
  {
    "objectID": "posts/2022-10-12-6wk-12.html",
    "href": "posts/2022-10-12-6wk-12.html",
    "title": "06wk-1,2",
    "section": "",
    "text": "lambda, map, 판다스–인덱싱(1)"
  },
  {
    "objectID": "posts/2022-10-12-6wk-12.html#lambda",
    "href": "posts/2022-10-12-6wk-12.html#lambda",
    "title": "06wk-1,2",
    "section": "lambda",
    "text": "lambda\n- 예제1: 람다표현식(lambda expression)자체가 하나의 오브젝트임\n\nlambda x: (x-2)**2 ### lambda x: (x-2)**2 가 실행되는 순간 메모리상에 함수 오브젝트가 저장됨 \n\n&lt;function __main__.&lt;lambda&gt;(x)&gt;\n\n\n\n“lambda x: (x-2)**2” 는 \\(lambda(x)=(x-2)^2\\)의 느낌으로 기억하면 쉬움\n\n(사용방법)\n\n(lambda x: (x-2)**2)(2) # 입력2 -&gt; 출력 (2-2)^2 =0 \n\n0\n\n\n\n(lambda x: (x-2)**2)(4) # 입력5 -&gt; 출력 (4-2)^2 =4 \n\n4\n\n\n\n(lambda x: (x-2)**2)(6) # 입력6 -&gt; 출력 (6-2)^2 =16\n\n16\n\n\n\n(lambda x: (x-2)**2)(-2) # 입력-2 -&gt; 출력 (-2-2)^2 =16\n\n16\n\n\n- 예제2: 람다표현식에 이름을 줄 수 있음.\n\nf = lambda x: (x-2)**2\n\n\nf(2),f(4),f(6),f(-2)\n\n(0, 4, 16, 16)\n\n\n위의 코드는 아래와 같다.\n\ndef f(x):\n    return (x-2)**2\nf(2),f(4),f(6),f(-2)\n\n(0, 4, 16, 16)\n\n\n- 예제3: 조건부 출력\n\nf = lambda x,y: x if x&gt;y else y # x,y가 입력 -&gt; x&gt;y 일때만 x를 리턴하고 그렇지않으면 y를 리턴 = 큰값을 리턴하라는 소리임 \n\n\nf(1,20)\n\n20\n\n\n- 예제4: 람다표현식들의 리스트\n\nfl = [lambda x: x, lambda x: x**2, lambda x: x**3]\n\n\nfor f in fl: \n    print(f(2))\n\n2\n4\n8\n\n\n\nx = np.linspace(-1,1,100)\nfor f in fl:\n    plt.plot(x,f(x),'--') \n\n\n\n\n\n\n\n\n- 예제5: 람다표현식들의 딕셔너리\n\nfd = {'f1':lambda x: x, 'f2':lambda x: x**2, 'f3':lambda x: x**3}\nfd\n\n{'f1': &lt;function __main__.&lt;lambda&gt;(x)&gt;,\n 'f2': &lt;function __main__.&lt;lambda&gt;(x)&gt;,\n 'f3': &lt;function __main__.&lt;lambda&gt;(x)&gt;}\n\n\n\nfor k in fd:\n    plt.plot(x,fd[k](x),'--')\n\n\n\n\n\n\n\n\n- 예제6: 람다표현식을 리턴하는 함수 (함수를 리턴하는 함수)\n(예비학습) 함수 \\(g(x)\\)가 정의되어 있을때 \\(\\frac{d}{dx}g(x)\\)의 값을 계산해보기\n\ng = lambda x: x**2 \n\n\ngg = lambda x : (g(x+0.001)-g(x))/0.001\n\n\ngg(4)\n\n8.0010000000037\n\n\n(목표) 도함수를 구해주는 derivate 함수를 정의하자. 이 함수는 임의의 함수 g를 입력으로 받으면, g의 도함수(gg)가 리턴되는 기능을 가진다.\n\ndef derivate(g):\n    return lambda x: (g(x+0.001)-g(x))/0.001 \n\n(사용1)\n\ng = lambda x: np.sin(x) \n\n\ngg = derivate(g) \n\n\nx = np.linspace(0,6.28,1000) \n\n\nplt.plot(x,g(x),label=r'$f(x)=sin(x)$')\nplt.plot(x,gg(x),label=r'$\\frac{d}{dx}f(x)=cos(x)$')\nplt.legend(fontsize=15)\n\n\n\n\n\n\n\n\n(사용2)\n\ng0 = lambda x: (1/6)*x**3\ng1 = derivate(g0) # (1/2)x^2 \ng2 = derivate(g1) # x \n\n\nx = np.linspace(-1,1,100)\nplt.plot(x,g0(x),'--',label=r'$g_0(x)=\\frac{1}{6}x^3$')\nplt.plot(x,g1(x),'--',label=r'$g_1(x)=\\frac{1}{2}x^2$')\nplt.plot(x,g2(x),'--',label=r'$g_2(x)=x$')\nplt.legend(fontsize=15)\n\n\n\n\n\n\n\n\n- 예제7: 예제6의 다른표현\n\nderivate = lambda g: lambda x: (g(x+0.001)-g(x))/0.001 \n\n(사용1)\n\ng = lambda x: np.sin(x) \n\n\ngg = derivate(g) \n\n\nx = np.linspace(0,6.28,1000) \n\n\nplt.plot(x,g(x),label=r'$f(x)=sin(x)$')\nplt.plot(x,gg(x),label=r'$\\frac{d}{dx}f(x)=cos(x)$')\nplt.legend(fontsize=15)\n\n\n\n\n\n\n\n\n(사용2)\n\ng0 = lambda x: (1/6)*x**3\ng1 = derivate(g0) # (1/2)x^2 \ng2 = derivate(g1) # x \n\n\nx = np.linspace(-1,1,100)\nplt.plot(x,g0(x),'--',label=r'$g_0(x)=\\frac{1}{6}x^3$')\nplt.plot(x,g1(x),'--',label=r'$g_1(x)=\\frac{1}{2}x^2$')\nplt.plot(x,g2(x),'--',label=r'$g_2(x)=x$')\nplt.legend(fontsize=15)"
  },
  {
    "objectID": "posts/2022-10-12-6wk-12.html#map",
    "href": "posts/2022-10-12-6wk-12.html#map",
    "title": "06wk-1,2",
    "section": "map",
    "text": "map\n- 개념: $(f,[x_1,x_2,,x_n] )=$\n- 예제1:\n\nx=[1,2,3] \nf = lambda x: x+1 \ny = list(map(f,x))\n\n(다른구현1)\n\nlist(map(lambda x: x+1,[1,2,3]))\n\n[2, 3, 4]\n\n\n(다른구현2)\n\nf = lambda x: x+1 \n[f(xi) for xi in [1,2,3]]\n\n[2, 3, 4]\n\n\n(다른구현3)\n\n[(lambda x: x+1)(xi) for xi in [1,2,3]]\n\n[2, 3, 4]\n\n\n(다른구현4)–최악\n\ny = [] \nx = [1,2,3] \nf = lambda x: x+1 \nfor xi in x:\n    y.append(f(xi))\n\n\ny\n\n[2, 3, 4]\n\n\n(다른구현5)–더 최악\n\ny = [] \nx = [1,2,3] \nf = lambda x: x+1 \nfor i in range(len(x)):\n    y.append(f(x[i]))\n\n\ny\n\n[2, 3, 4]\n\n\n- 예제2: 문자열을 입력으로 받고 대문자이면 True, 소문자이면 False\n입력: A,B,C,a,b,c\n출력: T,T,T,F,F,F\n\nx= list('ABCabc')\n# x = ['A','B','C','a','b','c']\nf = lambda s: s.isupper()\ny = list(map(f,x))\n\n\nx,y\n\n(['A', 'B', 'C', 'a', 'b', 'c'], [True, True, True, False, False, False])\n\n\n- 예제3: 두개의 입력을 받는 함수 (map을 이용하는 것이 리스트 컴프리헨션보다 조금 편한것 같다)\n\nlist(map(lambda x,y: x+y, [1,2,3],[-1,-2,-3]))\n\n[0, 0, 0]\n\n\n(다른구현)– 리스트컴프리헨션\n\nf = lambda x,y: x+y \n[f(x,y) for x,y in zip([1,2,3],[-1,-2,-3])] \n\n[0, 0, 0]\n\n\n- 예제4: map은 “하나의 함수에 다양한 입력”을 적용하는 경우에만 사용가능, 리스트컴프리헨션은 “다양한 함수에 다양한 입력” 지원\n\nflst = [lambda x: x+1, lambda x: x+2, lambda x:x+3] \n\nmap으로 구현시도 \\(\\to\\) 실패\n\nlist(map(flst,[-1,-2,-3])) # 결과가 0,0,0\n\nTypeError: 'list' object is not callable\n\n\n리스트컴프리헨션으로 구현시도 \\(\\to\\) 성공\n\n[f(x) for f,x in zip(flst,[-1,-2,-3])]\n\n[0, 0, 0]\n\n\n- 종합: map과 리스트컴프리헨션과 비교\n\nmap은 for문을 위한 \\(i\\)등의 인덱스를 쓰지 않지만 리스트컴프리헨션은 필요함\nmap은 좀더 리스트컴프리헨션보다 제약적으로 사용할 수 밖에 없음."
  },
  {
    "objectID": "posts/2022-10-12-6wk-12.html#데이터프레임-준비",
    "href": "posts/2022-10-12-6wk-12.html#데이터프레임-준비",
    "title": "06wk-1,2",
    "section": "데이터프레임 준비",
    "text": "데이터프레임 준비\n- 데이터준비\n\ndf=pd.read_csv('https://raw.githubusercontent.com/guebin/DV2022/master/_notebooks/dv2022.csv')\ndf\n\n\n\n\n\n\n\n\natt\nrep\nmid\nfin\n\n\n\n\n0\n65\n45\n0\n10\n\n\n1\n95\n30\n60\n10\n\n\n2\n65\n85\n15\n20\n\n\n3\n55\n35\n35\n5\n\n\n4\n80\n60\n55\n70\n\n\n...\n...\n...\n...\n...\n\n\n195\n55\n70\n40\n95\n\n\n196\n65\n85\n25\n85\n\n\n197\n85\n85\n100\n10\n\n\n198\n80\n65\n35\n60\n\n\n199\n50\n95\n45\n85\n\n\n\n\n200 rows × 4 columns\n\n\n\n- 앞으로는 위와 같은 df형태를 가정할 것이다. 즉 column의 이름은 문자열, row의 이름은 0부터 시작하는 정수로 가정한다.\n- 아래와 같은 형태는 일단 생각하지 않는다.\n\npd.DataFrame({'att':[60,65,80,90],'rep':[50,100,90,100]},index=['규빈','영미','성준','혜미'])\n\n\n\n\n\n\n\n\natt\nrep\n\n\n\n\n규빈\n60\n50\n\n\n영미\n65\n100\n\n\n성준\n80\n90\n\n\n혜미\n90\n100"
  },
  {
    "objectID": "posts/2022-10-12-6wk-12.html#df의-4가지-컨셉",
    "href": "posts/2022-10-12-6wk-12.html#df의-4가지-컨셉",
    "title": "06wk-1,2",
    "section": "df의 4가지 컨셉",
    "text": "df의 4가지 컨셉\n- 원소에 접근하는 4가지 방법: ., [], .iloc[], .loc[]"
  },
  {
    "objectID": "posts/2022-10-12-6wk-12.html#컨셉1-클래스느낌",
    "href": "posts/2022-10-12-6wk-12.html#컨셉1-클래스느낌",
    "title": "06wk-1,2",
    "section": "컨셉1: 클래스느낌",
    "text": "컨셉1: 클래스느낌\n- 컨셉1: df는 인스턴스이다. 그리고 df.att, df.rep,df.mid, df.fin 와 같이 col이름에 대응하는 속성이 있다.\n\ndf.head()\n\n\n\n\n\n\n\n\natt\nrep\nmid\nfin\n\n\n\n\n0\n65\n45\n0\n10\n\n\n1\n95\n30\n60\n10\n\n\n2\n65\n85\n15\n20\n\n\n3\n55\n35\n35\n5\n\n\n4\n80\n60\n55\n70\n\n\n\n\n\n\n\n\ndf.fin\n\n0      10\n1      10\n2      20\n3       5\n4      70\n       ..\n195    95\n196    85\n197    10\n198    60\n199    85\nName: fin, Length: 200, dtype: int64\n\n\n- 언제유용? col의 이름을 대충 알고 있을 경우 자동완성으로 쉽게 선택가능"
  },
  {
    "objectID": "posts/2022-10-12-6wk-12.html#컨셉2-딕셔너리-alpha-느낌",
    "href": "posts/2022-10-12-6wk-12.html#컨셉2-딕셔너리-alpha-느낌",
    "title": "06wk-1,2",
    "section": "컨셉2: 딕셔너리 + \\(\\alpha\\) 느낌",
    "text": "컨셉2: 딕셔너리 + \\(\\alpha\\) 느낌\n- 컨셉2: df는 컬럼이름이 key, 컬럼의데이터가 value가 되는 dictionary로 이해할 수 있다. 즉 아래의 dct와 같은 딕셔너리로 이해할 수 있다.\n\ndct = dict(df) \n#dct\n\n(예시) .keys() 메소드를 이용하여 컬럼들의 이름을 살펴볼 수 있음.\n\ndct.keys(), df.keys()\n\n(dict_keys(['att', 'rep', 'mid', 'fin']),\n Index(['att', 'rep', 'mid', 'fin'], dtype='object'))\n\n\n\n# col indexing\n- 예시1: dct가 가능하면 df도 가능하다.\n\ndf['att']\n#dct['att'] \n\n0      65\n1      95\n2      65\n3      55\n4      80\n       ..\n195    55\n196    65\n197    85\n198    80\n199    50\nName: att, Length: 200, dtype: int64\n\n\n- 예시2: dct가 가능하면 df도 가능하다. (2)\n\ndf.get('att')\n#dct.get('att') \n\n0      65\n1      95\n2      65\n3      55\n4      80\n       ..\n195    55\n196    65\n197    85\n198    80\n199    50\nName: att, Length: 200, dtype: int64\n\n\n- 예시3: dct에서 불가능하지만 df에서 가능한것도 있다.\n\ndct.get(['att','rep'])\n\nTypeError: unhashable type: 'list'\n\n\n\ndf.get(['att','rep'])\n\n\n\n\n\n\n\n\natt\nrep\n\n\n\n\n0\n65\n45\n\n\n1\n95\n30\n\n\n2\n65\n85\n\n\n3\n55\n35\n\n\n4\n80\n60\n\n\n...\n...\n...\n\n\n195\n55\n70\n\n\n196\n65\n85\n\n\n197\n85\n85\n\n\n198\n80\n65\n\n\n199\n50\n95\n\n\n\n\n200 rows × 2 columns\n\n\n\n- 예시4: dct에서 불가능하지만 df에서 가능한것도 있다. (2)\n\ndct[['att','rep']]\n\nTypeError: unhashable type: 'list'\n\n\n\ndf[['att','rep']]\n\n\n\n\n\n\n\n\natt\nrep\n\n\n\n\n0\n65\n45\n\n\n1\n95\n30\n\n\n2\n65\n85\n\n\n3\n55\n35\n\n\n4\n80\n60\n\n\n...\n...\n...\n\n\n195\n55\n70\n\n\n196\n65\n85\n\n\n197\n85\n85\n\n\n198\n80\n65\n\n\n199\n50\n95\n\n\n\n\n200 rows × 2 columns\n\n\n\n\n\n# row indexing\n- 예시5: dct에서 불가능하지만 df에서 가능한것도 있다. (3)\n\ndct[:5] \n\nTypeError: unhashable type: 'slice'\n\n\n\ndf[:5]\n\n\n\n\n\n\n\n\natt\nrep\nmid\nfin\n\n\n\n\n0\n65\n45\n0\n10\n\n\n1\n95\n30\n60\n10\n\n\n2\n65\n85\n15\n20\n\n\n3\n55\n35\n35\n5\n\n\n4\n80\n60\n55\n70"
  },
  {
    "objectID": "posts/2022-10-12-6wk-12.html#컨셉3-넘파이느낌",
    "href": "posts/2022-10-12-6wk-12.html#컨셉3-넘파이느낌",
    "title": "06wk-1,2",
    "section": "컨셉3: 넘파이느낌",
    "text": "컨셉3: 넘파이느낌\n- 컨셉3: df.iloc은 넘파이에러이처럼 생각가능하다. 즉 아래의 arr와 같은 넘파이어레이로 생각가능하다.\n\narr = np.array(df)\n#arr\n\n\n# row indexing\n- 예시1: 단일레이블\n\narr[0,:] # first row \narr[0,] \narr[0]\n\narray([65, 45,  0, 10])\n\n\n\ndf.iloc[0,:] # first row \ndf.iloc[0,] \ndf.iloc[0]\n\natt    65\nrep    45\nmid     0\nfin    10\nName: 0, dtype: int64\n\n\n- 예시2: 레이블의 리스트\n\narr[[0,1,2],:] # 처음 3개의 row 선택 \narr[[0,1,2],] \narr[[0,1,2]]\n\narray([[65, 45,  0, 10],\n       [95, 30, 60, 10],\n       [65, 85, 15, 20]])\n\n\n\ndf.iloc[[0,1,2],:] # 처음 3개의 row 선택 \ndf.iloc[[0,1,2],] \ndf.iloc[[0,1,2]]\n\n\n\n\n\n\n\n\natt\nrep\nmid\nfin\n\n\n\n\n0\n65\n45\n0\n10\n\n\n1\n95\n30\n60\n10\n\n\n2\n65\n85\n15\n20\n\n\n\n\n\n\n\n- 예시3: 슬랑이싱\n\narr[0:3,:] # 처음 3개의 row선택, 끝점포함X\narr[0:3,] \narr[0:3]\n\narray([[65, 45,  0, 10],\n       [95, 30, 60, 10],\n       [65, 85, 15, 20]])\n\n\n\ndf.iloc[0:3,:] # 처음 3개의 row선택, 끝점포함X\ndf.iloc[0:3,] \ndf.iloc[0:3]\n\n\n\n\n\n\n\n\natt\nrep\nmid\nfin\n\n\n\n\n0\n65\n45\n0\n10\n\n\n1\n95\n30\n60\n10\n\n\n2\n65\n85\n15\n20\n\n\n\n\n\n\n\n\n\n# col indexing\n- 예시1: 단일레이블\n\ndf.iloc[:,0] # first column \n# arr[:,0] # first column \n\n0      65\n1      95\n2      65\n3      55\n4      80\n       ..\n195    55\n196    65\n197    85\n198    80\n199    50\nName: att, Length: 200, dtype: int64\n\n\n- 예시2: 레이블의 리스트\n\ndf.iloc[:,[0,2]] # col1, col3 을 선택\n# arr[:,[0,2]] # col1, col3 을 선택\n\n\n\n\n\n\n\n\natt\nmid\n\n\n\n\n0\n65\n0\n\n\n1\n95\n60\n\n\n2\n65\n15\n\n\n3\n55\n35\n\n\n4\n80\n55\n\n\n...\n...\n...\n\n\n195\n55\n40\n\n\n196\n65\n25\n\n\n197\n85\n100\n\n\n198\n80\n35\n\n\n199\n50\n45\n\n\n\n\n200 rows × 2 columns\n\n\n\n- 예시3: 슬랑이싱\n\ndf.iloc[:,0:3] # 처음 3개의 col선택, 끝점포함X\n#arr[:,0:3]\n\n\n\n\n\n\n\n\natt\nrep\nmid\n\n\n\n\n0\n65\n45\n0\n\n\n1\n95\n30\n60\n\n\n2\n65\n85\n15\n\n\n3\n55\n35\n35\n\n\n4\n80\n60\n55\n\n\n...\n...\n...\n...\n\n\n195\n55\n70\n40\n\n\n196\n65\n85\n25\n\n\n197\n85\n85\n100\n\n\n198\n80\n65\n35\n\n\n199\n50\n95\n45\n\n\n\n\n200 rows × 3 columns\n\n\n\n\n\n# row + col indexing\n\ndf.iloc[::2,0:3]\n\n\n\n\n\n\n\n\natt\nrep\nmid\n\n\n\n\n0\n65\n45\n0\n\n\n2\n65\n85\n15\n\n\n4\n80\n60\n55\n\n\n6\n65\n70\n60\n\n\n8\n95\n55\n65\n\n\n...\n...\n...\n...\n\n\n190\n95\n35\n40\n\n\n192\n100\n40\n80\n\n\n194\n65\n40\n65\n\n\n196\n65\n85\n25\n\n\n198\n80\n65\n35\n\n\n\n\n100 rows × 3 columns"
  },
  {
    "objectID": "posts/2022-10-12-6wk-12.html#컨셉4-데이터프레임-느낌",
    "href": "posts/2022-10-12-6wk-12.html#컨셉4-데이터프레임-느낌",
    "title": "06wk-1,2",
    "section": "컨셉4: 데이터프레임 느낌",
    "text": "컨셉4: 데이터프레임 느낌\n- 컨셉4: df.loc은 새로운 느낌.. (R에 익숙하면 df.loc이 dataframe 혹은 티블느낌이라고 보시면 됩니다)\n\nimport rpy2\n%load_ext rpy2.ipython \n\n\n%%R \nlibrary(tidyverse) \nmpg[1:5,c('model','year')]\n\n# A tibble: 5 × 2\n  model  year\n  &lt;chr&gt; &lt;int&gt;\n1 a4     1999\n2 a4     1999\n3 a4     2008\n4 a4     2008\n5 a4     1999\n\n\n\n# row indexing\n- 예시1: 단일레이블\n\ndf.loc[0,:] # 첫번째 row를 선택 \ndf.loc[0,]\ndf.loc[0] \n\natt    65\nrep    45\nmid     0\nfin    10\nName: 0, dtype: int64\n\n\n- 예시2: 레이블의 리스트\n\ndf.loc[[0,1,2],:] # 처음 3개의 row를 선택 \ndf.loc[[0,1,2],]\ndf.loc[[0,1,2]] \n\n\n\n\n\n\n\n\natt\nrep\nmid\nfin\n\n\n\n\n0\n65\n45\n0\n10\n\n\n1\n95\n30\n60\n10\n\n\n2\n65\n85\n15\n20\n\n\n\n\n\n\n\n- 예시3: 슬라이싱 (끝점포함 O)\n\ndf.loc[0:3,:] # 처음 4개의 row를 선택, 끝점포함 \ndf.loc[0:3,]\ndf.loc[0:3] \n\n\n\n\n\n\n\n\natt\nrep\nmid\nfin\n\n\n\n\n0\n65\n45\n0\n10\n\n\n1\n95\n30\n60\n10\n\n\n2\n65\n85\n15\n20\n\n\n3\n55\n35\n35\n5\n\n\n\n\n\n\n\n\n\n# col indexing\n- 예시1: 단일레이블\n\ndf.loc[:,'att'] \n\n0      65\n1      95\n2      65\n3      55\n4      80\n       ..\n195    55\n196    65\n197    85\n198    80\n199    50\nName: att, Length: 200, dtype: int64\n\n\n- 예시2: 레이블의 리스트\n\ndf.loc[:,['att','mid']] \n\n\n\n\n\n\n\n\natt\nmid\n\n\n\n\n0\n65\n0\n\n\n1\n95\n60\n\n\n2\n65\n15\n\n\n3\n55\n35\n\n\n4\n80\n55\n\n\n...\n...\n...\n\n\n195\n55\n40\n\n\n196\n65\n25\n\n\n197\n85\n100\n\n\n198\n80\n35\n\n\n199\n50\n45\n\n\n\n\n200 rows × 2 columns\n\n\n\n- 예시3: 슬라이싱 (끝점포함 O)\n\ndf.loc[:,'att':'mid'] # 끝점포함 \n\n\n\n\n\n\n\n\natt\nrep\nmid\n\n\n\n\n0\n65\n45\n0\n\n\n1\n95\n30\n60\n\n\n2\n65\n85\n15\n\n\n3\n55\n35\n35\n\n\n4\n80\n60\n55\n\n\n...\n...\n...\n...\n\n\n195\n55\n70\n40\n\n\n196\n65\n85\n25\n\n\n197\n85\n85\n100\n\n\n198\n80\n65\n35\n\n\n199\n50\n95\n45\n\n\n\n\n200 rows × 3 columns\n\n\n\n\n\n# row + col indexing\n\ndf.loc[::-1,'att':'mid'] # 끝점포함 \n\n\n\n\n\n\n\n\natt\nrep\nmid\n\n\n\n\n199\n50\n95\n45\n\n\n198\n80\n65\n35\n\n\n197\n85\n85\n100\n\n\n196\n65\n85\n25\n\n\n195\n55\n70\n40\n\n\n...\n...\n...\n...\n\n\n4\n80\n60\n55\n\n\n3\n55\n35\n35\n\n\n2\n65\n85\n15\n\n\n1\n95\n30\n60\n\n\n0\n65\n45\n0\n\n\n\n\n200 rows × 3 columns"
  },
  {
    "objectID": "posts/2022-10-12-6wk-12.html#컨셉14-정리",
    "href": "posts/2022-10-12-6wk-12.html#컨셉14-정리",
    "title": "06wk-1,2",
    "section": "컨셉1~4 정리",
    "text": "컨셉1~4 정리\n\n\n\n\n.\n[]\n.iloc\n.loc\n\n\n\n\nrow/단일레이블\nX\nX\nO\nO\n\n\ncol/단일레이블\nO\nO\nO\nO\n\n\nrow/레이블리스트\nX\nX\nO\nO\n\n\ncol/레이블리스트\nX\nO\nO\nO\n\n\nrow/슬라이싱\nX\nO\nO\nO\n\n\ncol/슬라이싱\nX\nX\nO\nO\n\n\n\n- col 이름을 알아야하는 부담감 - . : 앞글자만 대충 알아도 자동완성 가능 - []: 정확한 col 이름을 알아야 함 - .loc: 보통 정확한 col 이름을 알아야 하지만 슬라이싱 이용시 양 끝의 컬럼이름만 알면 무방 - .iloc: 정확한 col 이름을 몰라도 번호로 인덱싱 가능\n- 자주하는 실수\n\ndf['att'] # 가능 \n# df.loc['att'] # 불가능\ndf.loc[:,'att'] # 가능\n\n0      65\n1      95\n2      65\n3      55\n4      80\n       ..\n195    55\n196    65\n197    85\n198    80\n199    50\nName: att, Length: 200, dtype: int64"
  },
  {
    "objectID": "posts/2022-10-12-6wk-12.html#att-90-and-rep-50",
    "href": "posts/2022-10-12-6wk-12.html#att-90-and-rep-50",
    "title": "06wk-1,2",
    "section": "att > 90 and rep < 50",
    "text": "att &gt; 90 and rep &lt; 50\n- 방법1: .query()를 이용\n\ndf.query('att&gt;90 and rep&lt;50') \n\n\n\n\n\n\n\n\natt\nrep\nmid\nfin\n\n\n\n\n1\n95\n30\n60\n10\n\n\n12\n95\n35\n0\n25\n\n\n48\n95\n45\n35\n80\n\n\n56\n95\n25\n95\n90\n\n\n78\n95\n45\n90\n35\n\n\n107\n100\n30\n60\n65\n\n\n112\n100\n35\n70\n0\n\n\n113\n95\n45\n55\n65\n\n\n163\n100\n25\n10\n20\n\n\n174\n100\n40\n40\n15\n\n\n176\n100\n30\n70\n70\n\n\n184\n100\n30\n30\n85\n\n\n190\n95\n35\n40\n95\n\n\n192\n100\n40\n80\n80\n\n\n\n\n\n\n\n\ndf.query('(att&gt;90)&(rep&lt;50)') \n\n\n\n\n\n\n\n\natt\nrep\nmid\nfin\n\n\n\n\n1\n95\n30\n60\n10\n\n\n12\n95\n35\n0\n25\n\n\n48\n95\n45\n35\n80\n\n\n56\n95\n25\n95\n90\n\n\n78\n95\n45\n90\n35\n\n\n107\n100\n30\n60\n65\n\n\n112\n100\n35\n70\n0\n\n\n113\n95\n45\n55\n65\n\n\n163\n100\n25\n10\n20\n\n\n174\n100\n40\n40\n15\n\n\n176\n100\n30\n70\n70\n\n\n184\n100\n30\n30\n85\n\n\n190\n95\n35\n40\n95\n\n\n192\n100\n40\n80\n80\n\n\n\n\n\n\n\n\ndf.query('att&gt;90 & rep&lt;50') \n\n\n\n\n\n\n\n\natt\nrep\nmid\nfin\n\n\n\n\n1\n95\n30\n60\n10\n\n\n12\n95\n35\n0\n25\n\n\n48\n95\n45\n35\n80\n\n\n56\n95\n25\n95\n90\n\n\n78\n95\n45\n90\n35\n\n\n107\n100\n30\n60\n65\n\n\n112\n100\n35\n70\n0\n\n\n113\n95\n45\n55\n65\n\n\n163\n100\n25\n10\n20\n\n\n174\n100\n40\n40\n15\n\n\n176\n100\n30\n70\n70\n\n\n184\n100\n30\n30\n85\n\n\n190\n95\n35\n40\n95\n\n\n192\n100\n40\n80\n80\n\n\n\n\n\n\n\n- 방법2: [], .iloc, .loc\n\ndf[(df.att &gt; 90)&(df.rep &lt; 50)]\ndf.loc[(df.att &gt; 90)&(df.rep &lt; 50)]\ndf.iloc[list((df.att &gt; 90)&(df.rep &lt; 50))]\n\n\n\n\n\n\n\n\natt\nrep\nmid\nfin\n\n\n\n\n1\n95\n30\n60\n10\n\n\n12\n95\n35\n0\n25\n\n\n48\n95\n45\n35\n80\n\n\n56\n95\n25\n95\n90\n\n\n78\n95\n45\n90\n35\n\n\n107\n100\n30\n60\n65\n\n\n112\n100\n35\n70\n0\n\n\n113\n95\n45\n55\n65\n\n\n163\n100\n25\n10\n20\n\n\n174\n100\n40\n40\n15\n\n\n176\n100\n30\n70\n70\n\n\n184\n100\n30\n30\n85\n\n\n190\n95\n35\n40\n95\n\n\n192\n100\n40\n80\n80\n\n\n\n\n\n\n\n- 방법3: [], .iloc, .loc // map, lambda\n\ndf[list(map(lambda x,y: (x&gt;90)&(y&lt;50), df.att, df.rep))]\n# df[map(lambda x,y: (x&gt;90)&(y&lt;50), df.att, df.rep)] # 이것은 불가능\n\n\n\n\n\n\n\n\natt\nrep\nmid\nfin\n\n\n\n\n1\n95\n30\n60\n10\n\n\n12\n95\n35\n0\n25\n\n\n48\n95\n45\n35\n80\n\n\n56\n95\n25\n95\n90\n\n\n78\n95\n45\n90\n35\n\n\n107\n100\n30\n60\n65\n\n\n112\n100\n35\n70\n0\n\n\n113\n95\n45\n55\n65\n\n\n163\n100\n25\n10\n20\n\n\n174\n100\n40\n40\n15\n\n\n176\n100\n30\n70\n70\n\n\n184\n100\n30\n30\n85\n\n\n190\n95\n35\n40\n95\n\n\n192\n100\n40\n80\n80\n\n\n\n\n\n\n\n\ndf.iloc[list(map(lambda x,y: (x&gt;90)&(y&lt;50), df.att, df.rep))]\ndf.iloc[map(lambda x,y: (x&gt;90)&(y&lt;50), df.att, df.rep)]\n\n\n\n\n\n\n\n\natt\nrep\nmid\nfin\n\n\n\n\n1\n95\n30\n60\n10\n\n\n12\n95\n35\n0\n25\n\n\n48\n95\n45\n35\n80\n\n\n56\n95\n25\n95\n90\n\n\n78\n95\n45\n90\n35\n\n\n107\n100\n30\n60\n65\n\n\n112\n100\n35\n70\n0\n\n\n113\n95\n45\n55\n65\n\n\n163\n100\n25\n10\n20\n\n\n174\n100\n40\n40\n15\n\n\n176\n100\n30\n70\n70\n\n\n184\n100\n30\n30\n85\n\n\n190\n95\n35\n40\n95\n\n\n192\n100\n40\n80\n80\n\n\n\n\n\n\n\n\ndf.loc[list(map(lambda x,y: (x&gt;90)&(y&lt;50), df.att, df.rep))]\ndf.loc[map(lambda x,y: (x&gt;90)&(y&lt;50), df.att, df.rep)]\n\n\n\n\n\n\n\n\natt\nrep\nmid\nfin\n\n\n\n\n1\n95\n30\n60\n10\n\n\n12\n95\n35\n0\n25\n\n\n48\n95\n45\n35\n80\n\n\n56\n95\n25\n95\n90\n\n\n78\n95\n45\n90\n35\n\n\n107\n100\n30\n60\n65\n\n\n112\n100\n35\n70\n0\n\n\n113\n95\n45\n55\n65\n\n\n163\n100\n25\n10\n20\n\n\n174\n100\n40\n40\n15\n\n\n176\n100\n30\n70\n70\n\n\n184\n100\n30\n30\n85\n\n\n190\n95\n35\n40\n95\n\n\n192\n100\n40\n80\n80"
  },
  {
    "objectID": "posts/2022-10-12-6wk-12.html#att-meanatt",
    "href": "posts/2022-10-12-6wk-12.html#att-meanatt",
    "title": "06wk-1,2",
    "section": "att > mean(att)",
    "text": "att &gt; mean(att)\n- 방법1: .query()를 이용\n\ndf.query('att&gt; att.mean()') \n\n\n\n\n\n\n\n\natt\nrep\nmid\nfin\n\n\n\n\n1\n95\n30\n60\n10\n\n\n4\n80\n60\n55\n70\n\n\n8\n95\n55\n65\n90\n\n\n9\n90\n25\n95\n50\n\n\n11\n95\n60\n25\n55\n\n\n...\n...\n...\n...\n...\n\n\n184\n100\n30\n30\n85\n\n\n190\n95\n35\n40\n95\n\n\n192\n100\n40\n80\n80\n\n\n197\n85\n85\n100\n10\n\n\n198\n80\n65\n35\n60\n\n\n\n\n95 rows × 4 columns\n\n\n\n- 방법2: [], .iloc, .loc\n\ndf[df.att &gt; df.att.mean()]\ndf.loc[df.att &gt; df.att.mean()]\ndf.iloc[list(df.att &gt; df.att.mean())]\n\n\n\n\n\n\n\n\natt\nrep\nmid\nfin\n\n\n\n\n1\n95\n30\n60\n10\n\n\n4\n80\n60\n55\n70\n\n\n8\n95\n55\n65\n90\n\n\n9\n90\n25\n95\n50\n\n\n11\n95\n60\n25\n55\n\n\n...\n...\n...\n...\n...\n\n\n184\n100\n30\n30\n85\n\n\n190\n95\n35\n40\n95\n\n\n192\n100\n40\n80\n80\n\n\n197\n85\n85\n100\n10\n\n\n198\n80\n65\n35\n60\n\n\n\n\n95 rows × 4 columns\n\n\n\n- 방법3: [], .iloc, .loc // map, lambda\n\ndf[list(map(lambda x: x&gt;df.att.mean() , df.att))]\n# df[map(lambda x: x&gt;df.att.mean() , df.att)] # 이것은 불가능\n\n\n\n\n\n\n\n\natt\nrep\nmid\nfin\n\n\n\n\n1\n95\n30\n60\n10\n\n\n4\n80\n60\n55\n70\n\n\n8\n95\n55\n65\n90\n\n\n9\n90\n25\n95\n50\n\n\n11\n95\n60\n25\n55\n\n\n...\n...\n...\n...\n...\n\n\n184\n100\n30\n30\n85\n\n\n190\n95\n35\n40\n95\n\n\n192\n100\n40\n80\n80\n\n\n197\n85\n85\n100\n10\n\n\n198\n80\n65\n35\n60\n\n\n\n\n95 rows × 4 columns\n\n\n\n\ndf.iloc[list(map(lambda x: x&gt;df.att.mean() , df.att))]\ndf.iloc[map(lambda x: x&gt;df.att.mean() , df.att)]\n\n\n\n\n\n\n\n\natt\nrep\nmid\nfin\n\n\n\n\n1\n95\n30\n60\n10\n\n\n4\n80\n60\n55\n70\n\n\n8\n95\n55\n65\n90\n\n\n9\n90\n25\n95\n50\n\n\n11\n95\n60\n25\n55\n\n\n...\n...\n...\n...\n...\n\n\n184\n100\n30\n30\n85\n\n\n190\n95\n35\n40\n95\n\n\n192\n100\n40\n80\n80\n\n\n197\n85\n85\n100\n10\n\n\n198\n80\n65\n35\n60\n\n\n\n\n95 rows × 4 columns\n\n\n\n\ndf.loc[list(map(lambda x: x&gt;df.att.mean() , df.att))]\ndf.loc[map(lambda x: x&gt;df.att.mean() , df.att)]\n\n\n\n\n\n\n\n\natt\nrep\nmid\nfin\n\n\n\n\n1\n95\n30\n60\n10\n\n\n4\n80\n60\n55\n70\n\n\n8\n95\n55\n65\n90\n\n\n9\n90\n25\n95\n50\n\n\n11\n95\n60\n25\n55\n\n\n...\n...\n...\n...\n...\n\n\n184\n100\n30\n30\n85\n\n\n190\n95\n35\n40\n95\n\n\n192\n100\n40\n80\n80\n\n\n197\n85\n85\n100\n10\n\n\n198\n80\n65\n35\n60\n\n\n\n\n95 rows × 4 columns\n\n\n\n\n\n\n\n.\n[]\n.iloc\n.loc\n\n\n\n\nrow/단일레이블\nX\nX\nO\nO\n\n\ncol/단일레이블\nO\nO\nO\nO\n\n\nrow/레이블리스트\nX\nX\nO\nO\n\n\ncol/레이블리스트\nX\nO\nO\nO\n\n\nrow/슬라이싱\nX\nO\nO\nO\n\n\ncol/슬라이싱\nX\nX\nO\nO\n\n\nrow/bool,list\nX\nO\nO\nO\n\n\nrow/bool,ser\nX\nO\nX\nO\n\n\nrow/bool,map\nX\nX\nO\nO"
  },
  {
    "objectID": "posts/2022-10-12-6wk-12.html#월12일-숙제",
    "href": "posts/2022-10-12-6wk-12.html#월12일-숙제",
    "title": "06wk-1,2",
    "section": "1. 10월12일 숙제",
    "text": "1. 10월12일 숙제\n아래와 같이 0~9까지 포함된 리스트를 만들어라\n\nx=list(range(10))\nx\n\n[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n\n\n아래와 동일한 기능을 수행하는 함수를 lambda expression으로 정의하라.\n\ndef f(xi):\n    return '짝' if (xi % 2)==0 else '홀'\n\nmap과 lambda expression 을 이용하여 아래와 같은 결과를 만들어라. (리스트컴프리헨션, for문 사용금지)\n\n# \n# 구현예시\n\n['짝', '홀', '짝', '홀', '짝', '홀', '짝', '홀', '짝', '홀']"
  },
  {
    "objectID": "posts/2022-10-12-6wk-12.html#월14일-숙제",
    "href": "posts/2022-10-12-6wk-12.html#월14일-숙제",
    "title": "06wk-1,2",
    "section": "2. 10월14일 숙제",
    "text": "2. 10월14일 숙제\n다음과 같은 데이터프레임을 불러온 뒤 물음에 답하라\n\ndf=pd.read_csv('https://raw.githubusercontent.com/guebin/DV2022/master/_notebooks/dv2022.csv')\ndf\n\n\n\n\n\n\n\n\natt\nrep\nmid\nfin\n\n\n\n\n0\n65\n45\n0\n10\n\n\n1\n95\n30\n60\n10\n\n\n2\n65\n85\n15\n20\n\n\n3\n55\n35\n35\n5\n\n\n4\n80\n60\n55\n70\n\n\n...\n...\n...\n...\n...\n\n\n195\n55\n70\n40\n95\n\n\n196\n65\n85\n25\n85\n\n\n197\n85\n85\n100\n10\n\n\n198\n80\n65\n35\n60\n\n\n199\n50\n95\n45\n85\n\n\n\n\n200 rows × 4 columns\n\n\n\n(1) 기말고사 성적이 중간고사 성적보다 향상된 학생들을 출력하라. 즉 mid &lt; fin 인 학생들을 출력하라. (다양한 방법으로 연습할 것, 제출은 한 가지 방법으로 구현해도 감점없음)\n\n# 구현결과가 아래와 같아야 한다. \n\n\n\n\n\n\n\n\natt\nrep\nmid\nfin\n\n\n\n\n0\n65\n45\n0\n10\n\n\n2\n65\n85\n15\n20\n\n\n4\n80\n60\n55\n70\n\n\n5\n75\n40\n75\n85\n\n\n6\n65\n70\n60\n75\n\n\n...\n...\n...\n...\n...\n\n\n194\n65\n40\n65\n70\n\n\n195\n55\n70\n40\n95\n\n\n196\n65\n85\n25\n85\n\n\n198\n80\n65\n35\n60\n\n\n199\n50\n95\n45\n85\n\n\n\n\n93 rows × 4 columns\n\n\n\n(2) 기말고사 성적이 중간고사 성적보다 향상된 학생들의 출석과 레포트 점수를 출력하라.\n\n# 구현결과가 아래와 같아야 한다. \n\n\n\n\n\n\n\n\natt\nrep\n\n\n\n\n0\n65\n45\n\n\n2\n65\n85\n\n\n4\n80\n60\n\n\n5\n75\n40\n\n\n6\n65\n70\n\n\n...\n...\n...\n\n\n194\n65\n40\n\n\n195\n55\n70\n\n\n196\n65\n85\n\n\n198\n80\n65\n\n\n199\n50\n95\n\n\n\n\n93 rows × 2 columns"
  }
]